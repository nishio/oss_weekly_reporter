[
  {
    "id": 3041871188,
    "number": 436,
    "title": "[FEATURE] #427のVD作成",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/436",
    "user": "UtkNggc",
    "created_at": "2025-05-06T07:48:24Z",
    "closed_at": "2025-05-06T08:22:01Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n#427のデザイン案作成\nhttps://github.com/orgs/digitaldemocracy2030/projects/3/views/1?pane=issue&itemId=109019487&issue=digitaldemocracy2030%7Ckouchou-ai%7C427\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\nPC・タブレット・SP時の最適な文字数制限VDを作成して提案する。",
    "type": "issue"
  },
  {
    "id": 3038826034,
    "number": 432,
    "title": "セットアップに時間がかかる",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/432",
    "user": "shingo-ohki",
    "created_at": "2025-05-05T07:25:55Z",
    "closed_at": "2025-05-07T04:25:46Z",
    "body": ">Macでセットアップをしているのですが、セットアップにはどれくらいかかるものでしょうか？\n10分以上この画面のままなのですが、順調に進んでる認識で良いのでしょうか？\n\nfrom #2開発_広聴AI より\n\n![Image](https://github.com/user-attachments/assets/13b6aad6-8667-49ac-8c32-f387565a37af)",
    "type": "issue"
  },
  {
    "id": 3037671609,
    "number": 424,
    "title": "[workflowテスト]client画面の見た目を修正",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/424",
    "user": "nasuka",
    "created_at": "2025-05-03T23:39:22Z",
    "closed_at": "2025-05-03T23:44:47Z",
    "body": "# 背景\nclient画面の見た目に問題がある\n\n\n# 提案内容\nclient画面のデザインを修正する",
    "type": "issue"
  },
  {
    "id": 3037379450,
    "number": 420,
    "title": "テスト起票 🎨 資料整備",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/420",
    "user": "masatosasano2",
    "created_at": "2025-05-03T12:22:12Z",
    "closed_at": "2025-05-03T23:45:25Z",
    "body": "フィードバックください！どなたでも大歓迎",
    "type": "issue"
  },
  {
    "id": 3035342323,
    "number": 415,
    "title": "[design]マスターデザインデータの作成",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/415",
    "user": "UtkNggc",
    "created_at": "2025-05-02T07:07:55Z",
    "closed_at": "2025-05-06T07:37:48Z",
    "body": "UIエンハンスを回すためにマスターデザインデータを作成したい。\n\n### 作成場所\n▼Figma Master Design ファイル\nhttps://www.figma.com/design/ZImSumdtUme9loVY5CejWX/%F0%9F%91%91-Master-Design?node-id=0-1&t=CKUZaubo7v22Lrbc-1\n\n### 具体的には\n「管理画面」と「レポート表示画面」のUI。\nデフォルト時や入力時、0件時、MAX時、エラー時、などのstateも洗い出してそれぞれ作成。\n\n### 必要なもの\nいただいたこちらの環境で見れる画面から作成しますが、\nhttps://kouchou-ai.dd2030.org/\nstate別や、管理画面などをデザイナーが見れるようにリクエストさせていただきます！\n\n### 予定している手法\n①既存画面を利用して大まかにFigmaデータ化（Figmaプラグイン & AI を利用予定）\n②Figmaの知見のあるデザイナーが整えていく（AutoLayoutなども）\n\n### NEXT STEP\nマスターデザインデータがあれば、UIエンハンスが開始でき、デザインシステム構築にも着手できる。",
    "type": "issue"
  },
  {
    "id": 3033805068,
    "number": 409,
    "title": "Github Actions x LLM で Issueに自動でラベルを貼りたい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/409",
    "user": "masatosasano2",
    "created_at": "2025-05-01T12:51:02Z",
    "closed_at": "2025-05-02T13:22:39Z",
    "body": "# 課題\n- 1つのIssueが複数の属性を持ちうるため、タイトルの先頭の[text]や絵文字ではなく、複数指定もフィルタもしやすいラベルを活用したい。\n- しかし、ラベルを付与できるのはWrite権限以上を持つユーザーに限られる。\n- そのため、ラベルの管理コストがメンテナに集中してしまう。\n\n# 提案\nメンテナのコストを減らし、タイムリーなラベル更新を可能にするために、\n都知事選で採用されていたようにGithub ActionsとLLMの組み合わせによって\nIssueの内容から相応しいラベルを自動判定・自動付与する仕組みがほしい。\n参考：\n- https://github.com/takahiroanno2024/election2024/blob/main/.github/workflows/issue-review.yml\n- https://github.com/takahiroanno2024/election2024/blob/main/.github/scripts/review_issue.py",
    "type": "issue"
  },
  {
    "id": 3031011318,
    "number": 403,
    "title": "[REFACTOR] metadata のオプショナル化",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/403",
    "user": "nanocloudx",
    "created_at": "2025-04-30T11:36:30Z",
    "closed_at": "2025-05-06T06:13:13Z",
    "body": "# 現在の問題点\nレポート作成者について記述する metadata というファイルを用意している\nデフォルトとして「テスト環境」という画像を用意しているが、これがそのまま使われてしまっているかもしれない\n\n# 提案内容\n値や画像がなければ表示から消してしまい、metadata が指定された場合のみレポート作成者欄を用意してみると良いかもしれない",
    "type": "issue"
  },
  {
    "id": 3030409183,
    "number": 401,
    "title": "[DOCUMENT]クラスタ → グループ への言い換え",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/401",
    "user": "masatosasano2",
    "created_at": "2025-04-30T07:33:54Z",
    "closed_at": "2025-04-30T12:04:14Z",
    "body": "# 現在の問題点\nREADMEや管理画面の設定において「クラスタ」「クラスタリング」などの用語が使われているが、伝わらない可能性がある。\n\n# 提案内容\n「グループ」「グルーピング」などと言い換える。\n補足：[宇多津町の報告資料](https://www.town.utazu.lg.jp/uploaded/attachment/3122.pdf)ではそのように言い換えられていた。",
    "type": "issue"
  },
  {
    "id": 2991091837,
    "number": 304,
    "title": "[FEATURE]CSVアップロード時にコメント列を自動で特定してほしい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/304",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:59:09Z",
    "closed_at": "2025-05-05T03:44:32Z",
    "body": "# 背景\nコメント列の指定の一手間を減らしたい\n\n# 提案内容\n- コメントの列名が「コメント」「comment」「意見」「要望」「投稿」などであったらデフォルトでその列を指定してほしい\n- 候補の列名はハードコードで一定カバーし、マッチしなかったらLLMに一番それっぽいのを選んでほしい\n- 列が1つしかなかったらそれをコメント列と判定してほしい\n- 数値/日付型でない列が1つしかなかったらそれをコメント列と判定してほしい",
    "type": "issue"
  },
  {
    "id": 2991091474,
    "number": 303,
    "title": "[FEATURE]CSVアップロード時にデフォルトでクラスタ数が設定されてほしい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/303",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:58:07Z",
    "closed_at": "2025-04-30T04:59:56Z",
    "body": "# 背景\nクラスタ数の設定の一手間を減らしたい\n\n# 提案内容\n- クラスタ数について「この設定にする」を押さないと推奨設定通りにならず、そのことが詳細画面を開かないとわかりにくい\n- クラスタ数のデフォルト値より小さい件数のCSVを取り込んだ時、先に進もうとするとアラートが出てくれるのは嬉しいが、それなら最初から推奨設定をセットして欲しい\n",
    "type": "issue"
  },
  {
    "id": 2991086810,
    "number": 302,
    "title": "[FEATURE]「公開」ボタンを押した時の効果を分かりやすくする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/302",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:51:12Z",
    "closed_at": "2025-05-03T02:58:58Z",
    "body": "# 背景\nキャプションが「公開」の状態のボタンを押すと非公開になり、「非公開」の状態のボタンを押すと公開になる。\nキャプションの意味は現在の状態であってボタンを押した時に発生するアクションではないので間違ってはいないのだが、\nclient-adminでもclientでも大抵のボタンのキャプションは押した時のアクションに近いので、やや紛らわしい。\n\n# 提案内容\n- 案1：マウスオーバー中のみ「非公開にする」「公開にする」などのヒントを表示する\n- 案2：マウスオーバー中のみ逆の状態の見た目にする\n- 案3：ボタンからスイッチに変える\n- 案4：ボタンからチェックボックスに変える　＊この場合、「非公開にする」チェックの方が自然かも",
    "type": "issue"
  },
  {
    "id": 2990878839,
    "number": 291,
    "title": "[DOCUMENT].envファイルの不可視問題 (Mac Finder)",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/291",
    "user": "nishio",
    "created_at": "2025-04-13T00:51:49Z",
    "closed_at": "2025-04-30T11:49:54Z",
    "body": "# 現在の問題点\nMacのFinderでは .env ファイルがデフォルトで非表示のため、cp example.env .env を実行した後、ファイルを見つけられないユーザーがいる。\n\n「.env見つからない」\n「Sampleからコピーしてきたとき、それをVScodeで開こうとするときに見つからない」\n「隠しファイルをfinderで開こうとしていた」\n\n\n# 提案内容\n\nREADMEで、FinderではなくVSCodeなどのエディタでプロジェクトフォルダを開いて .env ファイルを編集することを推奨する。「実はFinder経由でどうこうするよりVSCodeでフォルダを開いてしまうほうが良かった」\n",
    "type": "issue"
  },
  {
    "id": 2990833717,
    "number": 288,
    "title": "[FEATURE]zipでのリリース",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/288",
    "user": "nishio",
    "created_at": "2025-04-13T00:14:59Z",
    "closed_at": "2025-04-30T11:56:01Z",
    "body": "# 背景\nDocker/Gitのインストール障壁 (特に自治体ユーザー)\nセキュリティポリシーやITスキル不足により、DockerやGitのインストール自体が大きなハードルとなっている。\n「リポジトリ」などのIT専門用語が、非エンジニアのユーザーにとって理解しにくい。\n\n>「自治体関係者の中でのアーリーアダプターたちが試す際に、最初の①リポジトリをクローン」段階で既にかなり大きなハードルになっている。」\n「Dockerのインストール、Gitのインストールという部分で既にわけがわからなくなっている。」\n>「リポジトリ」概念を避けて行政に納品する際は、zip圧縮などをしたりします。\n> 「非エンジニアユーザー向けに、GitをインストールせずにZIPダウンロードで運用のほうがよい？(たねのぶ)」\n\n# 解決策\n\nzipでリリースすればgit cloneの部分の解説は必要なくなる\n",
    "type": "issue"
  },
  {
    "id": 2981664009,
    "number": 269,
    "title": "（アルゴリズム検証） 広聴AIで出力したクラスタのタイトルが抽象的になる問題の解決",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/269",
    "user": "nasuka",
    "created_at": "2025-04-09T06:22:31Z",
    "closed_at": "2025-04-30T05:01:30Z",
    "body": "# 背景\n広聴AIで出力した第一階層のクラスタタイトルが、TTTCのタイトルと比べて具体性に欠けるという声がある。\n \n衆院選のデータセットでクラスタタイトルを出力した例を以下に記載する。クラスタ数はどちらも15で設定している。\n本来はクラスタに属するデータ点との整合性なども含めて議論するのが理想だが、こちらではクラスタの抽象度についてのみ議論する。\n\n### TTTCの出力結果\nレポートのURL: https://news.ntv.co.jp/static/shugiinsenkyo2024/closed-1027/index.html\n\n選挙結果への関心と不安\n立憲民主党の支持増加と自民党への批判\n過半数割れの可能性と連立政権の模索\n投票率と市民参加の重要性\n候補者の当選とその影響\n選挙特番のエンタメ化\n国民民主党と立憲民主党の議席増加への注目\n議員の落選に対する反応\n石破氏の責任問題\n政権交代の可能性\n地域別支持動向\n和歌山2区の選挙結果\n選挙結果の誤報や虚偽情報への懸念\nれいわ新選組の躍進と支持拡大への関心\n出口調査結果への関心と懐疑\n\n\n### 広聴AIの出力結果\n\n選挙結果と政治倫理に対する多様な反応と期待\n地域別選挙動向と多様な反応\n選挙に対する多様な関心と報道の影響\n選挙参加と投票率に関する多様な視点と期待\n選挙における政党の躍進と略称問題に対する多様な反応\n衆院選結果に対する多様な反応と政治的期待\n選挙における政党批判と有権者の多様な視点\n選挙報道とスポーツ中継の視聴体験とメディアの役割\n選挙結果の信頼性と世襲政治に対する多様な反応\n日本の政治再編と選挙結果の影響\n石破政権の持続性と自民党の未来に対する懸念と期待\n日本の政治情勢における政党支持の変動とその影響\n衆院選後の政治的再編と連立政権の行方\nれいわ新選組の議席増加に対する多様な反応と期待\n選挙における政権交代と地域政党の影響に関する多様な視点\n\n\n感覚的だが、TTTCの出力結果が具体的な行動・現象や固有名詞（個人名・政党名等）がクラスタ名に含まれる傾向がある一方で、広聴AIの方は抽象性の高いタイトルがついているケースが多い。\n一概にどちらが悪いといえるものはないが、実用性を考えるとTTTC程度の抽象度で記載されている方が有用な場合がある。\n\nなお、o3-miniでも評価したが、同様の評価が記載されている。\nhttps://chatgpt.com/share/67f60d38-43b4-800f-a20f-3836dbfa4518\n\n![Image](https://github.com/user-attachments/assets/00a6bc92-5a48-4237-8da8-72be1dfbc1e5)\n\nこのような差分が生まれる要因として、以下が想定される。\n\n* クラスタリングアルゴリズムの違い\n  * 広聴AIではk-meansで第二階層のクラスタを形成した後にクラスタをマージして第一階層を形成するが、TTTCではspectral clusteringでクラスタを形成する\n* クラスタリング時に用いる埋め込みの次元の違い\n    * 広聴AIではUMAP後の2次元でクラスタリングを行っているが、TTTCでは元のembeddingでクラスタリングを行っている\n      * 二次元空間上で飛び地ができるのを防ぐために広聴AIではこのような実装となっている\n* プロンプトの違い\n  * （アルゴリズムの違いに依存する話だが）広聴AIでは、第二階層のクラスタのタイトル・説明と、サンプリングしたクラスタに属するデータのテキストの情報に基づいて第一階層のタイトル・説明を生成している。一方でTTTCでは、下層のクラスタタイトル・説明を用いていない。\n    * 下層のクラスタのタイトル・説明を包含するように指示しているため、抽象的なタイトルが生成されている可能性がある。\n\n\n# 提案内容\nプロンプトレベルでの修正と、アルゴリズムレベルでの修正がある。\n\n## プロンプトレベルでの修正\n1. デフォルトプロンプトの文言のチューニング・修正\n2. プロンプトに入力する情報の修正\n    例. 下層のタイトル・説明は含めずに、純粋にデータ点の情報だけ入力して第一階層のタイトル・説明を生成する\n\n\n## アルゴリズムレベルでの修正\n1. 元の埋込を用いてクラスタリングする\n2. k-means以外のアルゴリズム（spectral clustering, hdbscan）を採用する\n",
    "type": "issue"
  },
  {
    "id": 2960108462,
    "number": 207,
    "title": "[FEATURE]レポート一覧のクリック可能範囲を広げる",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/207",
    "user": "nishio",
    "created_at": "2025-03-31T10:28:45Z",
    "closed_at": "2025-04-30T11:49:11Z",
    "body": "# 背景\n\n<img width=\"1023\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/01686efb-d5a0-4679-b456-435ca5e978d2\" />\n\nレポートを見るためにクリックするところか説明のない灰色の領域だけ\n目の前で使ってもらったらどこをクリックしたらいいか戸惑っていた\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n\nブロック全体に広げた方がいいのではと思った",
    "type": "issue"
  },
  {
    "id": 2939692563,
    "number": 122,
    "title": "[FEATURE] コード以外の貢献も可視化する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/122",
    "user": "shingo-ohki",
    "created_at": "2025-03-21T22:56:37Z",
    "closed_at": "2025-05-07T04:54:09Z",
    "body": "プロジェクト固有の話題ではないですが、一旦こちらに\n\n# 背景\n\n現在、GitHub リポジトリへのコードのマージのみがコントリビューションとして可視化されています。しかし、プロジェクトの進行には以下のようなコード以外の重要な貢献もあります。\n\n- Slack やオンラインミーティングでの議論・調整\n- PR や Issue に対するレビューコメント・フィードバック\n- #デジタル民主主義2030 のハッシュタグをつけた Twitter（X）での発信\n- その他、プロジェクトの前進に貢献する活動\n\nこれらの貢献も適切に可視化することで、より多くの人が参加しやすくなり、\n現在の「手が足りない」問題の解消や「属人化をなくす」ことにつながるのではないかと考えました。\n\n# 提案内容\n\nコード以外の貢献を記録・可視化する仕組みを検討するのはどうでしょうか？ 例えば、以下のような方法が考えられます。\n\n- Slack や Twitter（X）での貢献を記録する仕組み（例: GitHub Actions で定期的に収集）\n- コントリビューションログを作成し、定期的にレポートを公開\n\nまた、「プロジェクト本体のコードには手を出しづらいけど、このような形なら参加しやすい」という人が貢献しやすくなるという効果も期待できます。\n\n参考: https://chatgpt.com/share/67ddda49-b6b8-800c-96c3-0a02a62b8839\n\nまた、いどばた の仕組みを一部流用できる可能性も考えられ、\n熟議への参加や政策提案・法案成立へのコントリビューション可視化にもつながるかもしれません。",
    "type": "issue"
  },
  {
    "id": 2899402452,
    "number": 24,
    "title": "[FEATURE]濃いクラスタを表示している際は、クラスタの説明文も濃いクラスタに合わせたい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/24",
    "user": "nasuka",
    "created_at": "2025-03-06T05:36:37Z",
    "closed_at": "2025-05-04T06:08:46Z",
    "body": "# 背景\n* 現状は濃いクラスタ表示した際も、全体図と同じクラスタの説明文が並んでいる（最上位層のクラスタが並んでいる）\n  * 添付画像のように、現状は散布図上のタイトルと下部のタイトルが整合しない\n![Image](https://github.com/user-attachments/assets/27fde824-7e69-4c3d-8f0a-475ca265b20d)\n\n# 提案内容\n* 「濃いクラスタ」が選択されている場合はそれらの説明文を表示したい\n  * フィルタされているクラスタの解説文のみをページ下部に表示する\n\n\n\n\n",
    "type": "issue"
  },
  {
    "id": 3044948581,
    "number": 450,
    "title": "[FEATURE]エンベデッドモデルを選択可能にする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/450",
    "user": "tokoroten",
    "created_at": "2025-05-07T07:13:48Z",
    "body": "# 背景\nLLMのプロバイダが選択可能になったので、 text-embedding-3-small の決め打ちでは対応できなくなってきている。\nSentenseTransformerによるローカル埋め込みもあるので、選択式にしたい。\nSentenseTransformerのほうがtext-embedding-3-small よりも性能が高いというレポートがあるので、text-embedding-3-largeを選択可能にしたい\n\n# 提案内容\nリストボックスを設置して、そのAIプロバイダーが提供可能な、エンベデッドモデルの一覧を表示するようにする\n\n",
    "type": "issue"
  },
  {
    "id": 3044456213,
    "number": 447,
    "title": "[design]#400 #421 に関連したマスター反映 & マスターデザイン作成",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/447",
    "user": "UtkNggc",
    "created_at": "2025-05-07T02:00:20Z",
    "body": "・421で管理画面のボタン追加があるのでマスターに反映\n・そのボタン押下後の画面がないのでマスター作成\n\nhttps://github.com/digitaldemocracy2030/kouchou-ai/pull/400\nhttps://github.com/digitaldemocracy2030/kouchou-ai/pull/421",
    "type": "issue"
  },
  {
    "id": 3044409190,
    "number": 445,
    "title": "[DOCUMENT] .github/copilot-instructions.md を設置したい。",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/445",
    "user": "tokoroten",
    "created_at": "2025-05-07T01:18:45Z",
    "body": "# 提案内容\nGithub Copilot Chatは、まず `.github/copilot-instructions.md` を必ず読み込み、そのうえで動作する。要するにこのファイルがシステムプロンプトとして振る舞う。\n\nhttps://copilot-instructions.md/\n\nそのため、傾聴AIに適合した、適切な copilot-instructions.md を設置することで、Github Copilot Chatを利用しているユーザの開発者体験を改善したい。",
    "type": "issue"
  },
  {
    "id": 3043356411,
    "number": 444,
    "title": "[GITHUB_ACTIONS] ラベル判定用のプロンプトの改善",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/444",
    "user": "masatosasano2",
    "created_at": "2025-05-06T16:17:00Z",
    "body": "# 現在の問題点\n\nラベル判定が不適切なことがある\n\n# 提案内容\n\n以下の方針に従ってプロンプトを変更する\n- [ラベルの説明文](https://github.com/digitaldemocracy2030/kouchou-ai/labels)を踏まえ、適宜修正・補足する\n- 内容とマッチすれば何でもいいのではなく、解決すべき課題の分類になっているべきであることを明示する\n- 明らかにその分類になると確信できない限り付与しない\n- 画像は無視する\n- 以下のラベルは定義上実装を見ないとわからないので、タイトルのキーワードマッチだけ残してLLM判定候補から外す\n    - dependencies, javascript, python\n\n# 検証結果\n\n直近20件について概ね意図通り改善することと、重大な過不足がないことを確認済み\nhttps://docs.google.com/spreadsheets/d/1XqtM7-eEbcjku2OWjHeD9js-1nHtlNXQY2UMM83ziJo",
    "type": "issue"
  },
  {
    "id": 3042780468,
    "number": 443,
    "title": "[design] デザインシステムの設計",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/443",
    "user": "UtkNggc",
    "created_at": "2025-05-06T13:04:56Z",
    "body": "デザインシステムの組み方を考える。\n（実際の構築作業は本Issueには含まれません。）\n\n### 目的\n・UIエンハンスの効率化\n・UIブレを防いで一貫したUXを担保\n・デザイン資産化\n\n### やること\nFigmaのvariables、styles、components、を駆使したシステム設計。\nchakraUIを使用してるので、そこも踏まえて設計する。←ここが悩みどころ。\n\n### 将来\nこれをやりたいのです。\nhttps://zenn.dev/ubie_dev/articles/f927aaff02d618",
    "type": "issue"
  },
  {
    "id": 3042475618,
    "number": 441,
    "title": "[FEATURE][design] headerにプロダクト名を表示する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/441",
    "user": "UtkNggc",
    "created_at": "2025-05-06T11:13:43Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n現在、header左の部分が「デジタル民主主義2030」になっている。\nデジタル民主主義2030は、複数プロダクトを含むプロジェクト名なので、\nプロダクト内のheaderではプロダクト名を表記したい。\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n・メイン「広聴AI」\n・サブ「part of project デジタル民主主義2030」\nで画像作成しました。こちらに変えていただくのはいかがでしょう。\n\n▼Figma\nhttps://www.figma.com/design/ZImSumdtUme9loVY5CejWX/%E5%BA%83%E8%81%B4AI%EF%BC%88%E3%83%87%E3%82%B8%E6%B0%912030%EF%BC%89?node-id=176-458&t=PgvCDEqVEw2sn016-11\n\n■設計意図\n・ロゴ制作するには時間がかかるので、現時点では取り急ぎフラットなフォントで作成。\n・現在のロゴサイズと同じサイズで作成したので、画像のリンク先を変えていただくだけで実装完了いただける見込み。\n\n# ご相談したいこと\n「part of project」がしっくりきてない気がする。。もっとふさわしいものがないか。\n\n![Image](https://github.com/user-attachments/assets/9df3d50f-5945-4f6b-a2c7-f4b582b4151e)",
    "type": "issue"
  },
  {
    "id": 3042178801,
    "number": 438,
    "title": "[FEATURE][design] コンテンツ下部のAbout情報をFooterにまとめる",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/438",
    "user": "UtkNggc",
    "created_at": "2025-05-06T09:36:29Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\nコンテンツエリア内はその画面独自のコンテンツのみにしたい。\nAbout情報はプロジェクト情報なので、footerにまとめるのが適切。\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\nAboutの内容とFooterの内容を組み合わせたfooterを作成する。\n\n※具体的なVDは担当デザイナーが作成します。",
    "type": "issue"
  },
  {
    "id": 3042156699,
    "number": 437,
    "title": "[FEATURE][design]見出し文言変更",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/437",
    "user": "UtkNggc",
    "created_at": "2025-05-06T09:29:26Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n①見出しが英語表記されている\n「Report」「About」「Admin Dashboard Report」「Analysis」\nわかりやすい日本語の見出しにして、ユーザーの認知負荷を下げたい。\n\n②About情報の位置はfooterが適切そう\nページ下部のデジ民を案内するAbout情報は、footer内にあるのが適切だと思いました。\nfooterにまとめるならここの「About」見出しも不要かなと。\n本Issueでは見出しのみ整えて、別Issueでfooter改善したいです！\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n①は日本語表記にする\n②はトルツメする\n\n▼具体的にはFigmaのVDをご覧ください\nhttps://www.figma.com/design/ZImSumdtUme9loVY5CejWX/%E5%BA%83%E8%81%B4AI%EF%BC%88%E3%83%87%E3%82%B8%E6%B0%912030%EF%BC%89?node-id=166-14&t=kOSSvTCqdQUPUdMZ-11\n\n# ご相談したいこと\n「Analysis」を何に訳すのがいいか迷っています。\n「分析結果」「分析要約」など？",
    "type": "issue"
  },
  {
    "id": 3038607867,
    "number": 431,
    "title": "[BUG][design]管理画面：スプレッドシートURLのinput欄がスマホ時のみ高さがつぶれてる",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/431",
    "user": "UtkNggc",
    "created_at": "2025-05-05T05:02:04Z",
    "body": "### 概要\n\n<!-- バグの簡潔な説明をお願いします -->\nスマホビューでGoogleスプレッドシートURLのinput欄の高さが潰れている。\n![Image](https://github.com/user-attachments/assets/a890fcae-dc5c-4902-8344-b10345d75203)\n\n### 再現手順\n\n1. スマホビュー環境の管理画面を開く\n2. 入力データのスイッチをGoogleスプレッドシートにする\n\n### 期待する動作\n\n<!-- 本来どう動作すべきかを記入してください -->\nPC・タブレットビューの時と同じようにしてほしい\n![Image](https://github.com/user-attachments/assets/f7c89a70-d7bc-472a-9f43-ba9e065c1924)\n\nよろしくお願いします！！",
    "type": "issue"
  },
  {
    "id": 3038577096,
    "number": 430,
    "title": "[FEATURE] ローカルLLMを簡単に動かすために、OllamaのDockerを追加する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/430",
    "user": "tokoroten",
    "created_at": "2025-05-05T04:33:13Z",
    "body": "# 背景\n#422 でローカルLLMが実装された（まだレビュー中）\nしかし、ollamaやLM Studioを手動でインストールしないと、ローカルLLMを利用することができない\n\n# 提案内容\n- OllamaのDockerイメージを追加し、オプションで起動可能にする\n- デフォルトで適切なモデルを起動時にロードするようにしておく\n\n公式イメージ\nhttps://hub.docker.com/r/ollama/ollama\n\nいい感じの起動スクリプトを組む\n",
    "type": "issue"
  },
  {
    "id": 3038124639,
    "number": 428,
    "title": "[FEATURE]レポート一覧画面：レポート0件時のエンプティ表現をする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/428",
    "user": "UtkNggc",
    "created_at": "2025-05-04T17:07:41Z",
    "body": "# 現状\nエンジニアさんに調べていただいたところ、\n・管理画面（client-admin）では「レポートがありません」が表示される\n・ユーザー向け（client）の一覧画面では何も表示されない\n<img width=\"1471\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc103f60-8421-4079-b7a3-e09e1887195a\" />\n<img width=\"1477\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f0eeed4d-3dad-4816-ac18-f6d40dc48353\" />\n\n# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\nエンプティには\n・現状を知らせる（ユーザーを迷子にしない）\n・次のアクションの誘導（行動促進）\n・プロダクトに対する信頼獲得\nなどの役割があります。\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n具体的にはデザイン時に検討したいですが、少なくとも、\n・現状を伝える\n・エンプティを解消するために何をしたらいいかを伝える\nを満たすUIにはしたい。\n\n# 担当デザイナーへ\nかけられる開発工数や、ここに到達するユーザーの背景次第で、どれだけリッチにするかが変わります。\nなのでそれを踏まえたうえで、\n・文字のみ\n・文字 + イメージイラスト\n・参照できるものがあればそこへのリンク\n・ユーザーにとっては使い方の学習の機会にもなるかもしれないため、その観点でデザインにできることがないか\nなどを検討していただけるといいかも。",
    "type": "issue"
  },
  {
    "id": 3038115997,
    "number": 427,
    "title": "[FEATURE]レポート一覧画面：レポートタイトルと本文に文字数制限",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/427",
    "user": "UtkNggc",
    "created_at": "2025-05-04T16:51:40Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n<img width=\"677\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/197f3a31-0800-4956-a94c-929b335e9020\" />\n\n本画面は一覧の役割をもつページである。\n長いテキストが流し込まれた時にそれが全部表示されると一覧性が阻害されてしまうため、ある程度で文字をカットしたい。\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n▼以下の議論をしたうえで、\n①制限が必要かどうか（もしかしたら何か意図があって制限してないのかも説）\n②どう制限するか（文字数や行数など）\n\n２で確定した仕様でデザイン調整したいです。\nちなみにデザイン観点では行数で制限した方がスマートですがwantくらいの温度感です。",
    "type": "issue"
  },
  {
    "id": 3037770152,
    "number": 425,
    "title": "[GITHUB ACTIONS] 開発状況に応じてProjectsのstatusを自動更新する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/425",
    "user": "masatosasano2",
    "created_at": "2025-05-04T04:31:06Z",
    "body": "以下の3パターンの更新を自動化したい\n\n| 元のstatus  | きっかけ | 変更後のstatus |\n| ------------- | ------------- | ------------- |\n| No Status, Cold List, Need Refinement  | Assign | Ready |\n| Ready (and assigned)  | Create PR, comment | In Progress |\n| In Progress | Unassigned | Ready |",
    "type": "issue"
  },
  {
    "id": 3035439227,
    "number": 417,
    "title": "コードレビューの効率化",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/417",
    "user": "shingo-ohki",
    "created_at": "2025-05-02T08:08:24Z",
    "body": "# 背景\nDevin の活用が進むに伴い、開発のボトルネックが PR レビューに移りつつある\n\n# 対応策の案\n\n> Shingo OHKI\n>   12:00\n> 次なるボトルネックはPRレビュー（嬉しい悲鳴） （編集済み） \n> Screenshot from 2025-05-02 11-54-20.png\n> NISHIO Hirokazu\n>   [12:43](https://w1740803485-clv347541.slack.com/archives/C08FL58M3D3/p1746157384711949)\n> Devinに辛口レビューさせよう()\n> haruki shimizu\n> これ、レビューはお金かかってしまうのですが、サマリーは無料だそうです\n> https://www.coderabbit.ai/\n> coderabbit.aicoderabbit.ai\n> AI Code Reviews | CodeRabbit | Try for Free\n> Most advanced AI code reviews that catches 95%+ bugs. Free your devs to ship code faster. (139 kB)\n> https://www.coderabbit.ai/\n> TakateTomoki\n>   13:28\n> コードラビット、パプリックリポジトリならレビューも無料です\n> コードラビットからdevinに指摘させて更に書き直させるみたいなことできるはず （編集済み） \n\nfrom #雑談 チャンネル\nhttps://w1740803485-clv347541.slack.com/archives/C08FL58M3D3/p1746154812918109",
    "type": "issue"
  },
  {
    "id": 3035388472,
    "number": 416,
    "title": "[design]ブランドコンパス制定",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/416",
    "user": "UtkNggc",
    "created_at": "2025-05-02T07:37:24Z",
    "body": "UI/UX/ワーディング/トンマナ、などを考える際の意思決定材料を制定したい。\n\n### 作成場所\n▼Figma Brand Compass スライドファイル\nhttps://www.figma.com/slides/0B55u8rxDjjjpRJbNUEP0Z/%F0%9F%A7%AD-Brand-Compass?node-id=1-42&t=LFrlwNUh5bLJE7rA-1\nスライドにした理由は、外部に広報する際にもリンク渡すだけでいいので便利だから\n\n### 具体的には\n・Vision Mission Values\n・Brand Personality\n・Brand Promise\n・Design Principles\n・Do & Don't\nなど。意思決定の材料になりそうなもの。\n\n### 必要なもの\n・現時点で固まってる指針（ふわっとでもok）\n・先にジョインされてるメンバーさんたちが感じる本プロダクトの特性\n・なんとなく共通認識になってるもの\nなどを、slackを漁ったりヒアリングをしたりして集めたい。\n↑このヒアリングに広聴AIを利用したいです！！！（当事者としてUXを体験したい）\n\n### 予定している手法\n①上記の必要なものを集める\n②集めた内容をもとに各内容に落とし込んで整えていく\n③Figmaスライドにまとめる\n④共通認識になるように全体に共有\n\n### NEXT STEP\nブランドコンパスがあれば、ロゴ制作も可能です。",
    "type": "issue"
  },
  {
    "id": 3035339617,
    "number": 414,
    "title": "[FEATURE]ローカル文脈埋め込み（エンベデッド）をもっとアピールする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/414",
    "user": "take365",
    "created_at": "2025-05-02T07:05:58Z",
    "body": "# 背景\n控えめに追加された、ローカル文脈埋め込み（エンベデッド）が実は精度がよいと思われる。\n![Image](https://github.com/user-attachments/assets/39c45b76-9cdb-4f8e-9086-23852dbba806)\n\n![Image](https://github.com/user-attachments/assets/dfea0951-55fe-45aa-9993-9c91fb78fc39)\n\nサンプルデータで１６クラスタ\ntext-embedding-3-small　 シルエットスコア（まとまりのよさ）：4.25\nhttps://take365.github.io/1d161322-8480-4805-bda4-f7f613540ba2/\nhttps://take365.github.io/evaluation/evaluation_1d161322-8480-4805-bda4-f7f613540ba2.pdf\n\nローカル               シルエットスコア（まとまりのよさ）：4.69\nhttps://take365.github.io/1d161322-8480-4805-bda4-f7f613540ba2/\nhttps://take365.github.io/evaluation/evaluation_f339b806-773d-47ca-a257-7f43c4748da1.pdf\n\n※私の公開画面が壊れ気味なのは無理やりリンク作ったのでゆるしてください\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n１．AI詳細設定オプションから１つ格上げして、意見グループ数設定と同じレベルにする\n２．控えめな文言からもう少しアピールする。\n\n文言の案\n＜課金ふれない＞※要約などLLM部分にくらべエンベディングの費用は低く相対的に微差。\nサーバ内で埋め込み処理を行う方式です。意見のグループ化や可視化との相性が良く、まとまりのあるクラスタが得られやすい傾向があります（768次元）。\n※OpenAIの埋め込みと比較して異なる特性があります。目的に応じてご利用ください。\n\n＜ほどほど＞\nAPIを使わず、サーバ内で埋め込みを実行します。費用を抑えられるほか、意見のグループ化や可視化において良好な結果が得られるケースもあります（768次元）。\n※精度や結果の傾向はモデルにより異なります。用途に応じてお試しください。\n\n＜強気＞\n意見の分類・可視化に適した高精度な埋め込みをサーバ内で実行できます。OpenAI APIを使わずに済むため、費用を抑えながらも高い分類性能が期待できます（768次元）。\n※OpenAIモデル（1536次元）と比較し、クラスタのまとまりや分離性が良好な場合があります。",
    "type": "issue"
  },
  {
    "id": 3030607120,
    "number": 402,
    "title": "[FEATURE] OpenRouterを使えるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/402",
    "user": "nasuka",
    "created_at": "2025-04-30T08:55:15Z",
    "body": "# 背景\n* OpenAIが使えないユースケースがある\n  * 政治的なキャンペーンでの利用ができない\n    * 参考: https://github.com/digitaldemocracy2030/kouchou-ai/issues/255 \n  * このため、用途によっては政党が利用できないケースがある\n* そもそもOpenAIのみに依存している状況は好ましくないため、使えるLLMの選択肢は増やしたい\n* また、OpenAI だと Rate Limit が厳しいという問題もある\n  * https://github.com/digitaldemocracy2030/kouchou-ai/issues/295\n\n\n# 提案内容\n* OpenRouterを導入する\n\n# 実装方針案\napi\n* 環境変数にOpenRouterのAPI Keyをセットできるようにする\n* OpenRouterでAPIリクエストを投げられるようにする\n  * すべてのモデルをサポートすると厳しそうなので、一旦以下をサポートできると良さそう\n    * OpenAI（gpt-4o, 4o-mini）\n      * 4.1系列もサポートしても良いかも？\n    * Gemini（gemini2.5系列） \n  * 上記のモデルはstructured outputもサポートされているので実装が容易\n\nclient-admin\n* 環境変数がセットされている場合にOpenRouterのモデルを選択肢に表示する \n  * あわせて、OpenAIのAPIキーがセットされている場合のみ、OpenAIのモデルを選択肢に表示するようにした方が良いかも（今はAPIキーがセットされていなくてもデフォルトで3つの選択肢が表示されている）\n    * OpenAI APIキーで使うOpenAIのモデルとOpenRouterで使うOpenAIのモデルは区別できるようにしておいた方が良さそう（リクエストをapiに投げるときにどちらで投げるか判別できるようにするため）\n      * e.g. `OpenAI gpt-4o` , `OpenRouter gpt-4o` のような表記にする？\n* レポート作成時に選択されたモデルでapiにリクエストを送る\n![Image](https://github.com/user-attachments/assets/dda0a3c7-ca57-4709-9c69-933f6eec3628)\n\n\n",
    "type": "issue"
  },
  {
    "id": 3030155430,
    "number": 400,
    "title": "[FEATURE] 環境確認機能を作る",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/400",
    "user": "tokoroten",
    "created_at": "2025-04-30T05:13:14Z",
    "body": "# 背景\nOpenAIのAPIKeyが正しくセットされているのかどうかが、実際にレポートの作成を始めるまで分からない\n\n\n# 提案内容\n管理画面、クライアント画面に以下の機能を付けたい\n\n管理画面\n- APIサーバが生きているかどうか\n- ~~OpenAIのkeyが正しいか~~ 、疎通できるかどうか（Azureも）\n  - API Key の有効性の確認は、https://github.com/digitaldemocracy2030/kouchou-ai/pull/421 で対応済み\n  - 以下の検証については未対応\n    - 残高不足の確認\n    - RateLimitの確認\n- クライアント用のフロントサーバが立っているかどうか\n- ローカルLLM用のLM Studioが生きているかどうか\n\n",
    "type": "issue"
  },
  {
    "id": 3029992887,
    "number": 398,
    "title": "Devin とのうまい協働方法を考える",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/398",
    "user": "shingo-ohki",
    "created_at": "2025-04-30T03:14:27Z",
    "body": "（広聴AIに限った話ではないですが、一旦ここに）\n# 現在の問題点\nDevin が活用され始めたが、それによる弊害があるのではないか？\nあるとすれば、それを軽減し、人間と Devin のうまい協働方法はないか？\n\nあくまで仮説です\n\n> Shingo OHKI\n  今日 11:10\nDevin が大活躍してくれるのは嬉しい反面、なんとなく人間がPRを出しにくくなりそうな気がするのですが、これは気のせいですかね。\n>Shingo OHKI\n  [29分前](https://w1740803485-clv347541.slack.com/archives/C08FL58M3D3/p1745980862512019?thread_ts=1745979009.909629&cid=C08FL58M3D3)\nChatGPT が少し言語化を手伝ってくれました（最初の回答の解決策にはピンと来ていませんが）\nhttps://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37\n「AI導入による文化の摩擦」が起きている自然な状態です。\nなるほど、成長痛なんですかね。\n気にならない人も多いと思いますし、決して Devin 活用にブレーキを踏みたい訳ではないです（どちらかというと人間が気持ちよく Devin と協働できるうまい活用方法を探したい） （編集済み） \n>ChatGPTChatGPT\n[ChatGPT - Devin 活用と参加感](https://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37)\nShared via ChatGPT (9 kB)\nhttps://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37\n>Shingo OHKI\n>3. 「Devinタスクを投げる場所」を整備\n[#devin部屋](https://w1740803485-clv347541.slack.com/archives/C08PRQVQWSE) を作ったのは正しそう\n>NISHIO Hirokazu\n>11:51\n>2030年のデジタル民主主義を考える上で、そもそも2030年にはOSS開発の形がだいぶ変わってそう\n誰もAIエージェントと一緒にOSS活動をしていくことの知見をもってないので、この場が世界最先端の実験場の一つとして日々いろいろな観測と考察が生まれていくのだと思う\n\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n",
    "type": "issue"
  },
  {
    "id": 3029893633,
    "number": 396,
    "title": "管理画面の基本e2eテスト計画",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/396",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:43:59Z",
    "body": "# 管理画面の基本e2eテスト計画\n\n## テストの目的\n\nこのテストの目的は、ユーザーが管理画面にアクセスし、CSVファイルをアップロードして新しいレポートを作成するという基本的なワークフローが正常に機能することを確認することです。\n\n## テストの前提条件\n\n1. 管理画面にアクセスするための認証情報が設定されていること\n2. テスト用のサンプルCSVファイルが用意されていること\n3. APIレスポンスをモックするための設定が完了していること\n\n## テストのステップ\n\n### 1. 管理画面へのアクセスとログイン\n\n- Basic認証を使用して管理画面にアクセス\n- 管理画面のトップページが正しく表示されることを確認\n\n### 2. レポート作成ページへの移動\n\n- 「新しいレポートを作成する」ボタンをクリックしてレポート作成ページに移動\n- ページタイトル「新しいレポートを作成する」が表示されることを確認\n\n### 3. 基本情報の入力\n\n- レポートIDフィールドに一意のIDを入力（例：`test-report-{timestamp}`）\n- 質問フィールドにテスト用の質問を入力（例：「これはテスト質問です」）\n- イントロダクションフィールドにテスト用の説明を入力（例：「これはテスト説明です」）\n\n### 4. CSVファイルのアップロード\n\n- CSVファイルタブが選択されていることを確認\n- テスト用のサンプルCSVファイルをアップロード\n- ファイルが正常にアップロードされ、ファイル名が表示されることを確認\n- コメント列が自動的に選択されていることを確認（「comment」列がある場合）\n\n### 5. レポート作成の実行\n\n- 「レポート作成を開始」ボタンをクリックしてフォームを送信\n- APIリクエストが正しいパラメータで送信されることを確認（モックAPIを使用）\n- 成功メッセージが表示されることを確認\n- ダッシュボードページにリダイレクトされることを確認\n\n## モックの設定\n\nテストでは以下のAPIエンドポイントをモックします：\n\n1. レポート作成API（`/admin/reports`）\n   - 成功レスポンス：`{ success: true, slug: 'test-report' }`\n\n## テストコードの構造\n\nテストコードは以下の構造で実装します：\n\n```typescript\nimport { test } from '@playwright/test';\nimport { CreateReportPage } from '../../pages/admin/create-report';\nimport { setupBasicAuth } from '../../utils/auth';\nimport { mockReportCreation } from '../../utils/mock-api';\n\ntest.describe('レポート作成ページ', () => {\n  test('CSVファイルをアップロードしてレポートを作成する', async ({ page }) => {\n    // 認証設定\n    await setupBasicAuth(page);\n    \n    // APIモック設定\n    await mockReportCreation(page);\n    \n    // ページオブジェクトの初期化\n    const createReportPage = new CreateReportPage(page);\n    \n    // レポート作成ページにアクセス\n    await createReportPage.goto();\n    \n    // 基本情報の入力\n    await createReportPage.fillBasicInfo(\n      'test-report-' + Date.now(),\n      'これはテスト質問です',\n      'これはテスト説明です'\n    );\n    \n    // CSVファイルのアップロード\n    await createReportPage.uploadCsvFile('../../fixtures/sample.csv');\n    \n    // フォームの送信\n    await createReportPage.submitForm();\n    \n    // リダイレクト先の確認\n    await page.waitForURL('**/');\n  });\n});\n```\n\n## 実装上の注意点\n\n1. テストの安定性を確保するため、固定のタイムアウト値ではなく、要素の表示を待つ方法を使用する\n2. モックAPIレスポンスは実際のAPIレスポンスと同じ構造にする\n3. テスト間の独立性を確保し、テスト順序に依存しないようにする\n4. 既存のページオブジェクトとユーティリティを活用して効率的なテストを実装する\n\n## 関連Issue\n\n- #395 管理画面のe2eテスト拡張ケース（APIキーエラーやクレジット不足などのエラーケース）\n",
    "type": "issue"
  },
  {
    "id": 3029891330,
    "number": 395,
    "title": "管理画面のe2eテスト拡張ケース",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/395",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:41:40Z",
    "body": "# 管理画面のe2eテスト拡張ケース\n\n## 追加テストケース\n\n1. Googleスプレッドシートからのデータインポート\n   - スプレッドシートURLの入力と取得テスト\n   - データ列の選択と表示確認\n\n2. 入力バリデーションのテスト\n   - 必須フィールドが空の場合のエラー表示\n   - 無効なレポートIDの検証\n   - 文字数制限の検証\n\n3. AI詳細設定の変更とその反映\n   - モデル選択の変更\n   - ワーカー数の調整\n   - PubComモードの切り替え\n   - プロンプト設定の変更\n\n4. エラーケースのテスト\n   - **APIキーが間違っている場合のエラー処理**\n   - **クレジットが入っていない場合のエラー処理**\n   - ネットワークエラー時の処理\n   - サーバーエラー時の処理\n\n## 実装優先度\n\n特に優先度が高いのは:\n- APIキーエラーの適切な処理と表示\n- クレジット不足時のエラー処理と表示\n\n## 関連ファイル\n\n- `test/e2e/tests/admin/create-report.spec.ts`\n- `test/e2e/utils/mock-api.ts`\n- `client-admin/app/create/page.tsx`\n",
    "type": "issue"
  },
  {
    "id": 3026963537,
    "number": 385,
    "title": "[FEATURE]ローカルLLM / embedding を利用できるようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/385",
    "user": "nasuka",
    "created_at": "2025-04-29T03:57:58Z",
    "updated_at": "2025-04-30T05:07:11Z",
    "body": "# 背景\n* 現在はOpenAI/Azure OpenAI のLLMのみをサポートしているが、アカウント登録・契約のハードルがあり、利用できないユーザーがいる\n* 特に個人のユーザーではなく、自治体などの組織においては最初のアカウント作成がボトルネックになるケースがある\n  * 出力の品質は下がるが、ローカルLLMの出力でもある程度参考になるアウトプットを出せる可能性がある\n    * また、どのようなアウトプットが出るのかイメージできると、本格導入の話も進みやすくなる\n\n\n# 提案内容\n* ローカルLLMおよびembeddingを利用できるようにする\n  * 事前に実験を行ったうえで、利用するLLM/embeddingを選定する\n    * 要件としては、[こちら](https://gist.github.com/nishio/469b5dc420c77b359ef43f3bdfb11526) に記載されているスペックのマシンで動作すると良さそう（メモリ16GB以内）\n* UIとしては、管理画面の「AIモデル」のセレクトボックスにローカルLLMのモデル名を追加する \n  * embeddingの選択フォームは現状存在しないので新設する\n\n![Image](https://github.com/user-attachments/assets/f1cbd478-be65-4dfa-93fb-f980e598c39f)",
    "type": "issue"
  },
  {
    "id": 3014028565,
    "number": 366,
    "title": "[FEATURE] 複数の公開リスト",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/366",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:28:58Z",
    "updated_at": "2025-05-03T07:47:59Z",
    "body": "# 背景\n\n現在作成されたすべてのレポートが単一のリストに追加されるようになっている。\nレポートの中には関連して作成されるレポートなどもある。\n\n会議ログの補足で、\n\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n\nシリーズレポートに関しては現場で実際に作られているが、リスト機能のニーズを直接確認したわけではないので現状まだ high priority ではない。\n公開非公開の議論の中で個別認証時に不便になりそうという意見。\n\n\n2025/4/23 定例\n> レポートの限定公開ステータスの需要が少し気になってます！\n> boolから型を変えるので後方互換もあるので、思ったより面倒かもしれないので。\n> YouTubeのunlistedみたいなもの\n> Clientのトップに単一のリストがあって自動的にそこに入って公開されてしまう(nishio)\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n> YouTubeみたいにデフォルトprivateかせめてunlistedじゃないといけないのでは\n> 管理画面同様にBASIC認証をかける？(nasuka)\n> レポートごとに個別のパスワードを設定できればいいのでは(nishio)\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n> そういう意味ではそもそもリストが複数作れないといけないのでは(nishio)\n\n\n# 提案内容\nリストを複数作成でき、レポートをリストに登録できる",
    "type": "issue"
  },
  {
    "id": 3014011288,
    "number": 365,
    "title": "[FEATURE] レポートがデフォルトで公開されないようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/365",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:24:06Z",
    "updated_at": "2025-04-30T10:36:09Z",
    "body": "# 背景\n\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n\nサーバーを公開している状態で、作成直後にpublicとして出力される問題がある。\n現在の仕様だと、isPublic = falseなレポートは管理者でも表示ができない。\n\n2025/4/23 定例\n> レポートの限定公開ステータスの需要が少し気になってます！\n> boolから型を変えるので後方互換もあるので、思ったより面倒かもしれないので。\n> YouTubeのunlistedみたいなもの\n> Clientのトップに単一のリストがあって自動的にそこに入って公開されてしまう(nishio)\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n> YouTubeみたいにデフォルトprivateかせめてunlistedじゃないといけないのでは\n> 管理画面同様にBASIC認証をかける？(nasuka)\n> レポートごとに個別のパスワードを設定できればいいのでは(nishio)\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n> そういう意味ではそもそもリストが複数作れないといけないのでは(nishio)\n\n# 提案内容\nデフォルトで非公開、もしくは限定公開( #341 )のようにアクセスできないようにする。\n非公開であっても管理者が作成されたレポートを確認できるようにする。",
    "type": "issue"
  },
  {
    "id": 3007630765,
    "number": 346,
    "title": "(実験) 同一の内容が大量に投稿される問題への対処法",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/346",
    "user": "nasuka",
    "created_at": "2025-04-21T05:54:34Z",
    "updated_at": "2025-04-30T10:31:38Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/345\n上記のIssueに紐づく実験のIssue\n\n以下元Issueの背景を転載\n* [パブコメの大量投稿](https://x.com/takahiroanno/status/1914151807443718381) によって、入力データの中に似通った内容が大量に含まれる場合がある\n* これによって、以下の問題が起きる\n  * 1.フロントの処理負荷が高くなる\n    * 現在の設計では、数万件〜規模のデータは描画の負荷が高くPCによっては正常に表示できない可能性がある\n  * 2.バックエンドの処理負荷・コストが高くなる\n    * レポート出力処理の際のクラスタリングの計算負荷が高くなる・extraction処理にかかるLLM APIのコストが高くなる\n  * 3.ユーザーの認知負荷が高くなる\n    * 今の形式でクラスタリングや可視化を行うと、スパム的な意見が意見全体の大半を占めるために、本来着目したい意見が目立たなくなってしまう可能性がある\n\n\n# 提案内容\n* 類似する意見をあらかじめまとめたうえで、まとめた後の意見を広聴AIの分析にかける。\n  * まとめた後の意見が表示されるようになることで、フロントの処理負荷が下がり、またユーザーの認知負荷も下がる\n  クラスタよりもより細かい粒度で、「ほとんど同じことを言っている意見」がまとめられると良さそう？（あくまで一案で、この粒度でまとめるのがマストではない）\n* まとめ方には幾つかのアプローチがありそう。\n  * e.g. クラスタリングでまとめる、LLMでまとめる、そのハイブリッド等\n\n↑は問題解決の一つのアプローチの案として記載していますが、他にアプローチがあれば随時コメントにご記載ください。\n\n## 想定する進め方\n* 実験データの選定（or 作成）\n* 実験データに対して、アルゴリズムを適用し、アウトプットを確認\n  * * @nishio , @nasuka （+ 時間があれば@takahiroanno も）あたりは確認しておけると良さそう\n* 問題なさそうであれば機能実装の検討に移る\n\n\n",
    "type": "issue"
  },
  {
    "id": 2995192689,
    "number": 310,
    "title": "[FEATURE] LLMが出力した結果の手動修正機能がほしい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/310",
    "user": "nasuka",
    "created_at": "2025-04-15T05:38:53Z",
    "updated_at": "2025-05-02T21:17:48Z",
    "body": "# 背景\n* LLMが出力したクラスタ名や説明、argumentが適切でない場合がある\n  * e.g.\n    * 公開するのに不適切な単語や表現がクラスタ名に含まれている\n    * 他のクラスタと同一の内容がクラスタ名に含まれている\n* このようなケースにおいては、LLMのアウトプットを見た後に人間が手動で文言を修正したい\n\n# 提案内容\nLLMが出力したテキスト（クラスタタイトル・説明・概要・argument）について、手動で編集する画面をadminに設け、レポートに編集内容を反映する\n\n\n(admin)\n* 上記の編集画面を設ける\n  * 編集後のデータを編集用のendpointに送る\n\n(api)\n* 編集用のendpointを実装する\n  * リクエストで受け取ったデータを各種中間ファイル（args.csv等）に保存\n  * hierarchical_aggregation.pyを再度実行し、更新後のデータでhierarchical_result.jsonを保存する\n\nそもそも全要素を編集できるようにするかというのは議論の余地がある。やるとしても、まずはクラスタ名のみを対象にするなど、部分的に始めていくのが良さそう。\nまた、透明性担保のために編集履歴を残すようにするかも議論の余地がある。",
    "type": "issue"
  },
  {
    "id": 2991203616,
    "number": 306,
    "title": "[FEATURE]「全体図」「濃い意見グループ」のUI/UX改善",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/306",
    "user": "masatosasano2",
    "created_at": "2025-04-13T11:20:06Z",
    "updated_at": "2025-05-02T21:08:56Z",
    "body": "# 背景\n\n操作しててたまたま以下に気づいたが、見ただけでは分からない。\n・範囲指定（ドラッグ）すると拡大できること\n・拡大した状態から元の倍率に戻すにはダブルクリックすること\n\n濃い意見グループで上がってきているクラスタが第一階層？のクラスタのどれに属すのかがわからない。\n\n# 提案内容\n\nズームについて\n- ヒントアイコンで操作方法のヒントを表示する\n- ズームイン/アウトの操作ボタンを用意する（ドラッグでパンできないので、上下左右の移動ボタンも必要？）\n- 表示モードや全画面に切り替えたときに表示がリセットされないように Issue #290 を参考に状態保持を実装する\n\n濃い意見グループについて\n- ラベルか色で表現する？",
    "type": "issue"
  },
  {
    "id": 2990889159,
    "number": 294,
    "title": "[FEATURE]ラベルが多い時の重なりの問題",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/294",
    "user": "nishio",
    "created_at": "2025-04-13T00:59:47Z",
    "updated_at": "2025-05-02T21:19:11Z",
    "body": "## 課題\n\n広聴AIのレポート画面に表示されるプロットグラフにおいて、分析によって生成されたクラスタ（意見グループ）の数が多い場合に、各クラスタを示すラベルが互いに重なり合ってしまい、判読が困難になるという問題があります。\n\n特に、自治体での利用など、詳細な分析のためにクラスタを細かく分ける傾向がある場合に、この見にくさが顕著になります。\n> 「自治体的には、クラスタを細かく分ける方向の議論が強い。」\n> 「UIの観点で、プロットグラフがそれに対応していけるとよさそう。」\n> 「ラベルは重なって見にくくならないようにできるとか」\n\n現状のままでは、せっかく詳細に分類された意見グループの内容を、グラフ上で直感的に把握することが難しくなっています。\n\n## 解決策案\n\nグラフ上でのラベルの重なりを軽減し、視認性を向上させるために、以下のいずれか、または組み合わせによる改善策を検討します。\n\n*   **ラベル表示の選択的ON/OFF:** ユーザーが表示したいラベルを選択したり、一定数以上のラベルはデフォルトで非表示にする機能を追加する。\n    > 「ラベル全部は表示しない設定」\n*   **重なり回避アルゴリズムの導入:** ラベルの位置を自動的に調整し、重なりを最小限に抑えるアルゴリズムを実装する。\n*   **インタラクティブなラベル操作:** ユーザーがグラフ上でラベルをドラッグ＆ドロップして任意の位置に移動できるようにする。\n*   **ズームレベルに応じた表示制御:** グラフの拡大率に応じて、表示するラベルの数を調整する（例: 縮小時は主要なラベルのみ表示）。",
    "type": "issue"
  },
  {
    "id": 2990887157,
    "number": 293,
    "title": "[FEATURE]レポート表示画面上で、使用したプロンプトを直接編集可能にする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/293",
    "user": "nishio",
    "created_at": "2025-04-13T00:58:21Z",
    "updated_at": "2025-05-02T21:07:32Z",
    "body": "## 課題\n\n現在、生成された広聴AIレポートの内容（特に要約文言など）に不満があり修正したい場合、以下の手順を踏む必要があり、手間と時間がかかります。\n\n1.  Admin Dashboard画面に戻る。\n2.  対象のレポートを探して複製する。\n3.  複製したレポートの設定（主にプロンプト）を調整する。\n4.  再度レポート生成を実行する。\n\n> 「ユーザーとして、広聴AIレポート画面で出力された成果物に不満があり作り直したい場合に、手間と時間がかかる（Admin Dashboard画面に戻り、レポートを複製し、文言調整を行う。1度の修正ごとにレポートが1枚のレポートを生成する必要がある）」\n\n特に、プロンプトの微調整を繰り返して最適な出力結果を得たい場合、この往復作業は大きな負担となります。\n\n## 提案\n\nレポート表示画面（例: `http://localhost:5173/reports/{report_id}`）に、そのレポート生成に使用されたプロンプトを表示し、**直接編集および更新（再生成）** できる機能を追加します。\n\n**具体的な流れ:**\n\n1.  レポート表示画面の下部など（例: 現状「分析手順」が表示されている箇所）に、編集可能なプロンプト入力欄を表示する。\n2.  ユーザー（※後述の権限者のみ）がプロンプトを編集する。\n3.  「更新して再生成」のようなボタンをクリックすると、編集後のプロンプトを使用してレポートの再生成処理が開始される。\n4.  レポート表示画面が更新され、新しい結果が表示される。\n\nこれにより、Admin Dashboardに戻ることなく、試行錯誤しながらレポートの質を効率的に向上させることが可能になります。（参考: TTTCTurboのレポート画面における同様の機能）\n> 「TOBE：利用したプロンプトを編集、更新できる（参考TTTCTurboのレポート画面）」\n\n## 考慮事項\n\n*   **権限管理:** 広聴AIでは、レポートの作成権限を持つユーザーと閲覧権限のみを持つユーザーが存在する想定です。プロンプトの編集・再生成機能は、**レポート作成権限を持つユーザーのみ**が利用できるように制限する必要があります。閲覧権限のみのユーザーには、プロンプトの表示は行うかもしれませんが、編集・再生成ボタンは表示しない、または無効化するなどの制御が必要です。\n*   **コスト:** レポートの再生成にもLLM APIのコストが発生するため、実行前に確認を促すなどのUI上の配慮が必要になる可能性があります。\n*   **UI/UX:** プロンプト編集エリアのデザイン、再生成中のステータス表示方法などを検討する必要があります。\n",
    "type": "issue"
  },
  {
    "id": 2990880118,
    "number": 292,
    "title": "[DOCUMENT]OpenAI APIの課金設定に関する混乱",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/292",
    "user": "nishio",
    "created_at": "2025-04-13T00:52:56Z",
    "updated_at": "2025-04-30T11:51:00Z",
    "body": "# 現在の問題点\n非エンジニアにとって、OpenAI APIキーの取得と課金設定（クレジット購入）が必要であることが分かりにくく、ChatGPT Plusと混同しやすい。設定不備によりQuota超過エラー (429) が発生する。\n\n「OpenAIの課金の設定してなかった」\n「Error code: 429 - 'You exceeded your current quota, please check your plan and billing details.'」\n「非エンジニアの場合、環境を設定した際にOpenAI APIに課金するというステップがわからない(たねのぶ)」\n「OpenAIに課金=ChatGPT Plusだと思う人もいる」\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n(解決策) READMEに、OpenAI APIキーの取得手順と、ChatGPT Plusとは別にAPI利用のためのクレジット購入（支払い方法登録）が必要であることを明記する。Quota超過エラーの意味と対処法も説明する。\n",
    "type": "issue"
  },
  {
    "id": 2990876385,
    "number": 290,
    "title": "[FEATURE]階層図のUI/UX改善",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/290",
    "user": "nishio",
    "created_at": "2025-04-13T00:49:58Z",
    "updated_at": "2025-05-01T02:18:57Z",
    "body": "# 背景\n階層図の操作性や情報表示に改善の余地がある (クリック操作の分かりにくさ、表示リセット、親子関係不明瞭、命名規則、戻るボタン欠如)。\n\nfrom 4/12 meetup\n>「階層図のギミックを確認、初見でクリックによって深層に移動できることがわからなかった。」\n「全体図、濃い意見グループ、階層図を行き来するときに階層図の表示がリセットされなくなるとうれしい。」\n「濃い意見グループで上がってきているクラスタが第一階層？のクラスタのどれに属すのかがわかるとうれしい。」\n「階層図の第一階層？第二階層の名前が決まっていると嬉しい。」\n「「１階層前に戻る」ボタンがあると助かります」\n\n# 提案内容\n(解決策) クリック操作のガイド表示、表示状態の保持、親子関係の明示（例: パンくずリスト）、階層命名規則の明確化、戻るボタンの追加など、UIを改善する。\n",
    "type": "issue"
  },
  {
    "id": 2990635491,
    "number": 283,
    "title": "[BUG]ScatterChartの全画面表示で要約文が「全画面終了」ボタンの後ろに隠れないようにする処理が不安定",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/283",
    "user": "masatosasano2",
    "created_at": "2025-04-12T18:36:39Z",
    "updated_at": "2025-05-07T05:00:23Z",
    "body": "### 概要\nIssue #278 が PR #282 で修正されたが、以下の課題が残ったため本Issueに切り出された。\n\nPR #282 の修正内容\n![Image](https://github.com/user-attachments/assets/a7a1bd58-febe-4993-a49a-2612b1c90ec9)\n\n残課題\n![Image](https://github.com/user-attachments/assets/3d080c1d-1502-4b09-8aca-fb2c1fdb9e52)\n\n### 再現手順\n\n1. 「全体図」または「濃い意見グループ」モードを選択する\n2. 「全画面表示」ボタンを押す\n3. ブラウザのサイズを極力小さくする\n4. 画面上部の、右端より少し左側あたりでマウスを動かし続ける\n\n### 期待する動作\n\n要約文が「全画面終了」ボタンの後ろに隠れない（正確には、隠れたままにならない）ようにする\n",
    "type": "issue"
  },
  {
    "id": 2984650643,
    "number": 274,
    "title": "[BUG] 静的ファイルがGithub Pagesでうまく表示されない件",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/274",
    "user": "keisuke-a",
    "created_at": "2025-04-10T06:52:19Z",
    "updated_at": "2025-04-30T13:37:33Z",
    "body": "### 概要\n\n静的ファイルをoutして、その中身をgithub pagesで公開すると、out/index.html自体は表示はされるが、画像要素がなかったりリンク先（個別ページ）が404になるなど、うまく表示されない。（参照が絶対パスになってることによる？）\n",
    "type": "issue"
  },
  {
    "id": 2982893942,
    "number": 271,
    "title": "[DOCUMENT] 静的ファイルのホスティング手順のドキュメント化",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/271",
    "user": "nasuka",
    "created_at": "2025-04-09T13:48:25Z",
    "updated_at": "2025-05-02T21:15:22Z",
    "body": "# 現在の問題点\n* static exportで出力したhtmlファイルを、ユーザー（出力者）がどのようにホスティングすべきかわからないことがある\n  * ホスティングには一定のソフトウェアエンジニアリングの知識が必要\n\n# 提案内容\nホスティング方法に関するマニュアルを記載する\nホスティングするサービスの候補としては以下がありそう？\n\n* Github Pages\n  * issue起票済み\n    * https://github.com/digitaldemocracy2030/kouchou-ai/issues/235\n  * 無料で利用可能  \n  * 認証がかけられないのがネックになる可能性がある\n* Netlify\n  * 認証をかけられる & 設定も比較的容易なので、Netlifyを採用できる組織・ユーザーであれば、機能としては恐らくこちらが要件に適しているケースは多そう\n  * ただし、そもそも利用者側でNetlifyを契約できない可能性がある\n* AWS/Azure\n  * 元々これらのクラウドサービスを契約しているのであれば、利用者側での導入は最も容易だと思われるが、設定としてはGithub Pages/Netlifyよりも複雑になりそう\n\n\nAWS/Azureでのニーズがどの程度あるのか見えていないので、一旦Github Pages/Netlifyあたりの手順をまとめられると良さそう？",
    "type": "issue"
  },
  {
    "id": 2979959784,
    "number": 266,
    "title": "[FEATURE]クラスタ数が増えた場合に散布図上でクラスタラベルが被ってしまう",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/266",
    "user": "nasuka",
    "created_at": "2025-04-08T14:20:10Z",
    "updated_at": "2025-05-02T20:54:42Z",
    "body": "# 背景\n* クラスタ数が増えた場合に散布図上でクラスタラベルが被ってしまう\n  * 添付画像は40件で出力したケース。多くのクラスタラベルが被ってしまっている。\n![Image](https://github.com/user-attachments/assets/c8e61e43-ef60-4054-91d0-4b8f3e6f4847)\n\n* この問題により、現在は第一階層のクラスタ数を大きな数値に設定できない\n  * 現在は上限を20としているが、TTTCの過去事例では30件を表示していたケースもあるため、上限をもう少し大きくしたい\n\n# 提案内容\n解決するアプローチは幾つかありそう。\n\n## 対策方針（Claudeによる案）\n1. ラベル表示の選択的制限\n\n- 重要度ベースの選択：クラスタサイズなどに基づき重要なラベルのみ表示\n- 最大表示数の制限：表示するラベル数に上限を設定（例: 最大15個）\n- ユーザー選択型表示：選択されたクラスタのみラベル表示\n\n2. ラベルの視覚的最適化\n\n- フォントサイズの縮小：ラベルのフォントサイズを小さくして占有面積を減らす\n- 可変フォントサイズ：クラスタの重要度に応じてフォントサイズを調整\n- ラベル省略表示：長いラベルを省略形で表示（例: \"長いラベル名\" → \"長いラ...\"）\n\n3. インタラクティブ手法\n\n- 凡例コンポーネントの追加：画面端に凡例を設け、クラスタ一覧を表示\n- ホバー/クリック表示：マウスホバーやクリック時のみラベルを表示\n- ハイライト機能：選択クラスタを強調し他を半透明化\n\n4. レイアウト最適化\n\n- ラベル位置の調整：ラベル同士の衝突を検出し位置を最適化\n- クラスタのグルーピング：近接するクラスタを階層的に表示",
    "type": "issue"
  },
  {
    "id": 2978426960,
    "number": 250,
    "title": "[FEATURE]階層図で一番下まで到達した時には原文を見せても良いのではないか",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/250",
    "user": "takahiroanno",
    "created_at": "2025-04-08T02:23:21Z",
    "updated_at": "2025-05-02T20:58:05Z",
    "body": "# 背景\n\nより情報量を増やしたい。原文を確認できるとより情報量が増えるなと思った。\n![Image](https://github.com/user-attachments/assets/52f7591f-1d06-419b-97a3-2e0e382c2d46)\n\n↑ご覧のように画面がスパースになる\n\n- Xなど、利用規約的に出すことができないものはその旨を表示すると良いと思う\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2973973916,
    "number": 235,
    "title": "[DOCUMENT] README に GitHub Pages で公開する手順を記載する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/235",
    "user": "shgtkshruch",
    "created_at": "2025-04-05T07:07:57Z",
    "updated_at": "2025-05-02T15:48:09Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- client を static build して GitHub Pages で公開する場合、ビルドしたファイルをアップロードすると一部のコードが動かない\n  - 原因: GitHub Pages で動いている Jekyll が `_` から始まるファイルやディレクトリを無視するため、static build 後の `_next` 以下のファイルが 404 になる\n    - https://github.blog/news-insights/the-library/bypassing-jekyll-on-github-pages/\n  - `.nojekyll` というファイルをルートに置くと動くようになるが、この挙動は知らない人が多そうで GitHub Pages で公開する人が同じ罠にハマる可能性がある\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- README の静的ファイル出力のセクションに、GitHub Pages で公開する場合の手順を記載する\n  - ルートに `.nojekyll` ファイルを追加することもここに記載する",
    "type": "issue"
  },
  {
    "id": 2969624362,
    "number": 227,
    "title": "[FEATURE]濃い意見グループの設定画面について",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/227",
    "user": "nishio",
    "created_at": "2025-04-03T13:37:38Z",
    "updated_at": "2025-05-02T20:59:38Z",
    "body": "# 背景\n\n![Image](https://github.com/user-attachments/assets/bb76f174-3347-4e73-aeed-823e8f4272d1)\n最小クラスタは2以上。上が10でいいかは少し微妙で、2,5,10,25,50,100くらいの選択式がいいかもという気持ち\n閉じるボタンが文章に被んている件、見出しと説明が横並びなのを縦並びにすると良いかも\n「濃いグループの設定しかないので中に入れたらどうか」という話が以前悪化が、この設定によって濃いグループを選択できるかどうかが変わるのでそとにあるべき、将来的にはカラーバレットの設定などもここにはいるのかなと思う\n\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2966119535,
    "number": 221,
    "title": "(情報整理)試行錯誤の負担を減らす",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/221",
    "user": "nishio",
    "created_at": "2025-04-02T11:45:10Z",
    "updated_at": "2025-04-30T11:43:43Z",
    "body": "とりあえず立てて、あとで詳細化します\n\nfrom 4/2定例\n>使うまでの準備工数に認識のギャップがある\n>プロンプトやクラスタ数等、様々なチューニングを行う必要があるが、その認識がない\n>試行錯誤の負担を減らす必要がある(& ドキュメント？)\n\n>自治体の典型的な使い方がわかったら型を示せる\n\n>100件、1000件とサンプリングする？→黙ってやると有害、確認ダイアログがあるといい\n\n- クラスタ数の変更はextraction, embeddingが終わった後のデータでスピーディにできる 関連: https://github.com/digitaldemocracy2030/kouchou-ai/issues/19\n- extractionの試行錯誤の負担を減らす仕組みが必要\n\n- いきなり1万件入れて1時間くらい待たされる →　https://github.com/digitaldemocracy2030/kouchou-ai/issues/11\n\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/241",
    "type": "issue"
  },
  {
    "id": 2945659198,
    "number": 172,
    "title": "[FEATURE]クラスタ説明文におけるグラウンディングの実装",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/172",
    "user": "nasuka",
    "created_at": "2025-03-25T08:07:39Z",
    "updated_at": "2025-05-02T21:03:44Z",
    "body": "# 背景\n* クラスタの説明文では所属する意見の内容を解説しているが、本当にそのような意見が存在するのか確認するのに手間がかかる\n* レポートの説得力を増す上で、説明の根拠となる元データを簡単に参照できるようにしたい\n\n\n# 提案内容\n* クラスタ説明文において、その根拠となるargumentを紐づけたテキストを表示する\n  *  参考: https://medium.com/jigsaw/making-sense-of-large-scale-online-conversations-b153340bda55\n    * Groundings\n    * 紐づけ方・紐づけた文章の生成のさせ方は様々なアプローチがあるので、アプローチを検討する部分からassigneeの方にお任せする\n\n# 進め方について\n* いきなり機能を実装するのではなく、プロダクトとは独立して実験スクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n  * 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n",
    "type": "issue"
  },
  {
    "id": 2945124654,
    "number": 144,
    "title": "（実験）LLMによるクラスタ品質の自動評価",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/144",
    "user": "nasuka",
    "created_at": "2025-03-25T03:36:54Z",
    "updated_at": "2025-05-07T04:55:20Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/143\n\n* こちらのイシューは上記のサブイシュー\n\n\n# 提案内容\n* LLMによるクラスタ品質の自動評価の実験を行う\n  * 出力されたクラスタタイトル・説明文・所属データ点の情報に基づいて、LLMでクラスタの品質を評価する\n* どのようなアプローチで評価するかは、assigneeの方におまかせする\n  * 例としては、例えば以下のような評価項目のスコアをLLMで出力するようなアプローチがある\n    * クラスタ内部の一貫性評価\n      * クラスタタイトル・説明文・所属データのテキストを入力し、一貫性を100点満点でスコアリングする\n    * クラスタ外部との分離度の評価\n      * クラスタAの情報（タイトルや所属データ等）と、重心の距離が最もAに近いクラスタBの情報をLLMに入力し、分離度を出力する\n",
    "type": "issue"
  },
  {
    "id": 2940417589,
    "number": 130,
    "title": "[DOCUMENT]ソースコードの実装以外での貢献方法がもっと言語化されるとよい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/130",
    "user": "nishio",
    "created_at": "2025-03-22T14:31:29Z",
    "updated_at": "2025-04-30T11:42:56Z",
    "body": "# 現在の問題点\n非エンジニアが何をしたらいいかわからない\n\n# 提案内容\n\n例えば\n- GitHubのissuesをみて「その問題が解決されると自分も助かる！」と思ったものに:+1:をつけるのはタスクの優先付の参考になるので貢献\n- 質問をするのは言語化のきっかけになるので貢献\n- 将来的に「AのレポートとBのレポートのどっちがいいですか？」をやる可能性がある、そう言うのに回答してくれるのは貢献\n\n他に思いついたら下にコメントつけてください",
    "type": "issue"
  },
  {
    "id": 2935293806,
    "number": 113,
    "title": "[REFACTOR] 濃いクラスタのアイコン変更",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/113",
    "user": "nishio",
    "created_at": "2025-03-20T12:20:30Z",
    "updated_at": "2025-05-06T12:18:08Z",
    "body": "# 現在の問題点\n\n<img width=\"249\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bc626d04-e7c0-4245-9b01-e762d433a434\" />\n\n濃いクラスタのアイコンは特に意味はなくこれになっている\n\n\n# 提案内容\n\n多分叩き台の案がないとどう変えたらいいかの議論もできないと思うので雑に描いておく\n\n![Image](https://github.com/user-attachments/assets/9e46dfd6-71d4-4c2b-bbd5-1c79220c8d80)\n\nアイコンとしてデザインできるかは度外視して描くとこんな感じで「全体像」は全体にたくさんの点が散らばっており、「濃いクラスタ」はぎゅっとした「濃い」「密度の高い」塊がいくつかある感じ",
    "type": "issue"
  },
  {
    "id": 2935247659,
    "number": 111,
    "title": "[FEATURE]用語解説ページをつける",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/111",
    "user": "nishio",
    "created_at": "2025-03-20T12:07:35Z",
    "updated_at": "2025-05-01T02:31:44Z",
    "body": "# 背景\n「プロンプト」「埋め込み」「濃い(クラスタ)」について、単語レベルで言い換えてもわかりやすくならない気がするので、やるとしたら用語解説ページをつけるとかかな\n\n「縦軸・横軸はなんだろう」についても解説\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2926967566,
    "number": 79,
    "title": "[FEATURE]CSVアップロード時にそれを処理した場合のコストを表示",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/79",
    "user": "nishio",
    "created_at": "2025-03-18T03:19:29Z",
    "updated_at": "2025-05-02T20:31:37Z",
    "body": "# 背景\n\n>安野貴博: ファイルアップロードすると解析掛ける前にコストを教えてくれるの良さそうですね\n>ほづみゆうき: ついにレポート出力まで漕ぎ着けたのですがAPI料金がどれくらいになるのかまったく感覚的に分からずドキドキだったので素人にはあると嬉しいと思います！\n\n# 提案内容\n\nこれを実現するためには2つの要素が必要\n\n- 1: done( ~~いまCSVアップロード即処理開始になっているが、一旦確認ダイアログを挟む必要がある~~ )\n- 2: どのくらいのデータだとどれくらいの費用になるのかの見積もり関数が必要\n\n## (2)の真面目な作り方\n\n(1)は @nanocloudx さんが詳しいと思うが、(2)の部分がわからなくて着手できないと思う。\nUI改善に着手する前に、この関数を作るためのデータ自体を集めていないのでそこからやる必要がある。\n\n- a: extraction\n- b: embedding\n- c: その後のレポート作成\n\n(a)がO(N)でgpt4oなので大きく、(b)はO(N)だがembedding modelなので安く、cはクラスタ数のオーダー(階層モデルなど今回いろいろ追加したから読めない)という感じで、このそれぞれに分けて料金を出せるようにしてデータ量違いでデータを集めればよい。\n\n## (2)の雑な作り方\n\nユーザのペインは「すごい高額だったらどうしよう」だと思うので、まず「100円未満っすね」「100~1000円くらい」「これはでかいから1000円以上かかるよ」の3段階でいいのでは説",
    "type": "issue"
  },
  {
    "id": 2922839578,
    "number": 60,
    "title": "[FEATURE]階層図で、最下層の表示を濃いクラスタだけに絞る",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/60",
    "user": "nasuka",
    "created_at": "2025-03-16T07:27:43Z",
    "updated_at": "2025-05-02T20:33:39Z",
    "body": "# 背景\n* 階層図において、最下層のクラスタ数が多すぎるため内容を把握しにくいケースがある\n\n\n# 提案内容\n* 濃いクラスタのフィルタを反映した上で、階層図の最下層クラスタを表示する\n  * フィルタはデフォルトで適用しつつ、ON/OFFを切り替えられると良さそう？",
    "type": "issue"
  },
  {
    "id": 2922752696,
    "number": 56,
    "title": "[FEATURE] 元コメントの表示機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/56",
    "user": "nanocloudx",
    "created_at": "2025-03-16T04:00:23Z",
    "updated_at": "2025-05-02T20:35:55Z",
    "body": "# 背景\n現在表示されている文言は、AIが要約した文章(arguments または clusters)である\narguments の生成元となった comments も参照できると良い\n（全て表示すると視認性が下がるため、オプションとして表示する項目があると望ましい）\n\n# 提案内容\n- hierarchical_result.json に comment を追加する\n  - 元コメントは引用がNGの場合があるので、引用元の規約に注意する必要がある\n- レポート表示に元コメントを表示するオプションを追加する",
    "type": "issue"
  },
  {
    "id": 2893835579,
    "number": 11,
    "title": "[FEATURE]レポート出力にかかる時間の目安を記載する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/11",
    "user": "nasuka",
    "created_at": "2025-03-04T10:59:48Z",
    "updated_at": "2025-05-02T20:36:35Z",
    "body": "# 背景\n* レポート出力までに何分程度かかるのかがユーザー目線でわからない\n\n\n# 提案内容\n* 実行時間の目安を記載する\n",
    "type": "issue"
  },
  {
    "id": 3044861881,
    "number": 449,
    "title": "ところてんさんをメンテナーに追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/449",
    "user": "nasuka",
    "created_at": "2025-05-07T06:35:52Z",
    "merged_at": "2025-05-07T06:36:02Z",
    "body": "# 変更の概要\r\nところてんさんをメンテナーとして追加\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3044428029,
    "number": 446,
    "title": "Labeling prompt improvement",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/446",
    "user": "masatosasano2",
    "created_at": "2025-05-07T01:35:12Z",
    "merged_at": "2025-05-07T06:18:21Z",
    "body": "# 変更の背景\r\nラベルの自動付与処理のうち、LLMに判定させる箇所の精度が低い。\r\n\r\n# 変更の概要\r\nPromptを改善した。\r\n\r\n# 検証結果\r\nhttps://docs.google.com/spreadsheets/d/1XqtM7-eEbcjku2OWjHeD9js-1nHtlNXQY2UMM83ziJo\r\n修正前のpromptと加えて改善傾向にある。\r\n\r\n# 関連Issue\r\n#444\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 45,
    "deletions": 34,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3042516967,
    "number": 442,
    "title": "api コンテナの build 時間を短縮する ",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/442",
    "user": "shingo-ohki",
    "created_at": "2025-05-06T11:30:05Z",
    "merged_at": "2025-05-06T12:39:22Z",
    "body": "# 変更の概要\r\n- api コンテナの build 時間を短縮するため、GPU を使わない場合にはより適切なパッケージ(torch の GPUサポートなし）のインストールを行うようにしました\r\n- これにより、GPU を使わない場合は api の build 時間が従来の半分以下程度（マシンスペックやネットワーク環境次第ですが、手元の環境では 17 -> 7分）になります\r\n\r\n# 変更の背景\r\n- セットアップを試した方からセットアップ時間についてフィードバックがあった\r\n- ここ最近、作業時に build 時間が伸びた気がしていた\r\n- 他にも build 時間が長くなったと感じている人がいた\r\n- [調査](https://github.com/digitaldemocracy2030/kouchou-ai/issues/432#issuecomment-2850411787)の結果、セットアップ時間の大半は api の build （特に nvidia-* 系のパッケージのインストール）処理だった\r\n- これらのパッケージ（のGPUサポート）は、GPUによる処理を行わない場合には不要と思われる\r\n- （おそらく）GPUによる処理を行うユーザーは一部\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/432\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 20,
    "deletions": 6,
    "changed_files": 4,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3041367454,
    "number": 435,
    "title": "metadata が未設定の場合でもリンクがエラーにならないようにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/435",
    "user": "takumi19910112",
    "created_at": "2025-05-06T02:47:59Z",
    "merged_at": "2025-05-06T06:11:56Z",
    "body": "# 変更の概要\r\n- [以前提出したPR](https://github.com/digitaldemocracy2030/kouchou-ai/pull/423)の中で、[コメントをいただいた部分](https://github.com/digitaldemocracy2030/kouchou-ai/pull/423#pullrequestreview-2813700429)の修正&微調整のためのPRになります。\r\n\r\n# スクリーンショット\r\n- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください\r\n- カスタムなし\r\n<img width=\"1915\" alt=\"スクリーンショット 2025-05-06 11 42 33\" src=\"https://github.com/user-attachments/assets/fcf6117e-7fd2-43fe-a8a7-8baea300f69d\" />\r\n<img width=\"1915\" alt=\"スクリーンショット 2025-05-06 11 35 14\" src=\"https://github.com/user-attachments/assets/15e66e39-ae97-4c27-8a56-46b8b21773c0\" />\r\n\r\n\r\n<img width=\"1912\" alt=\"スクリーンショット 2025-05-06 11 44 47\" src=\"https://github.com/user-attachments/assets/af04adaa-6469-4e70-b808-4c0fa869deab\" />\r\n\r\n- カスタムあり\r\n<img width=\"1915\" alt=\"スクリーンショット 2025-05-06 11 34 55\" src=\"https://github.com/user-attachments/assets/8eebeb3d-1abb-4148-84db-a510b696e74e\" />\r\n\r\n<img width=\"1907\" alt=\"スクリーンショット 2025-05-06 11 41 40\" src=\"https://github.com/user-attachments/assets/10ebfc91-8329-41c9-b471-173b048f2c73\" />\r\n\r\n<img width=\"958\" alt=\"スクリーンショット 2025-05-06 11 36 37\" src=\"https://github.com/user-attachments/assets/097a735a-a2a0-40b2-8ee3-f305aa2fc2bc\" />\r\n\r\n\r\n# 変更の背景\r\n- [こちら]([REFACTOR] metadata のオプショナル化 #403)のPRで対応できていなかった部分を修正しました。\r\n- 冗長な表現や、フッターやAbout、ヘッダーについて、一貫性がある処理にしました（デフォルトの場合は基本的には画像やリンクなどの値は非表示にし、カスタムがあり、かつ、画像やリンクがある場合のみ表示するようにしました）\r\n- また、READMEについて今回の修正に合わせた内容にしました\r\n- metadataについても、万が一リンクが表示されても問題ないリンクに変更しました。\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/403\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 92,
    "deletions": 74,
    "changed_files": 10,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3038213175,
    "number": 429,
    "title": "カラムの自動選択アルゴリズムを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/429",
    "user": "tokoroten",
    "created_at": "2025-05-04T20:05:31Z",
    "merged_at": "2025-05-06T01:50:25Z",
    "body": "# 変更の概要\r\n- commentという名前以外にも、様々な名前のカラムをデフォルトカラムとして自動選択するように配列化\r\n- CSVをアップロードした際に、自動的にコメントカラムを推定して、そのカラムを初期値にする\r\n\r\n## コメントカラムの推定アルゴリズム\r\n\r\n- 自由記述欄は文字数のばらつきが極めて大きい\r\n- 選択肢やログや属性情報のカラムは、文字数のばらつきが少ない\r\n- この仮定から、文字列長の上側2σの値をスコアとして採用する（文字列の長さの95パーセンタイル値とかでもよかったかも）\r\n  - score = 平均文字列長 + 2 * 文字列長の分散\r\n\r\n# スクリーンショット\r\n![dd2030-auto_select_column](https://github.com/user-attachments/assets/c00f725e-c4de-43b8-a4bb-729da2cf0261)\r\n\r\n# 変更の背景\r\n- テストで何度もCSVをアップロードする作業をしていて、毎回カラムを変更するのがツラかった…\r\n\r\n# 関連Issue\r\n#304\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 133,
    "deletions": 31,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3037466479,
    "number": 423,
    "title": "[REFACTOR] metadata のオプショナル化 #403",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/423",
    "user": "takumi19910112",
    "created_at": "2025-05-03T15:27:03Z",
    "merged_at": "2025-05-05T02:35:54Z",
    "body": "# 変更の概要\r\n- metadata.jsonというファイルにレポート作成者について記載することで、その情報を管理者側とクライアント側に画像やリンクとして表示させることができる。\r\n- 現在はデフォルトのmetadataに、「テスト環境」という画像が用意されているが、これがそのまま使用されているかもしれない\r\n- また、リンク先がexample.comなので初見ユーザがクリックしてエラーページになってしまうケースもある\r\n- 上記を解決するために、デフォルトの状態や、custom_metadataに画像や値がない場合は非表示とする方針に変更した。\r\n\r\n# スクリーンショット\r\n- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください\r\n- 変更前\r\n<img width=\"1457\" alt=\"スクリーンショット 2025-05-04 21 32 32\" src=\"https://github.com/user-attachments/assets/42e82ca9-4219-415c-910e-2d88f9a21069\" />\r\n<img width=\"1461\" alt=\"スクリーンショット 2025-05-04 21 32 38\" src=\"https://github.com/user-attachments/assets/2f9140d6-01e2-4652-b39c-c5f4f963a678\" />\r\n\r\n\r\n- 変更後\r\n- デフォルトの場合\r\n\r\n<img width=\"1467\" alt=\"スクリーンショット 2025-05-04 20 59 51\" src=\"https://github.com/user-attachments/assets/72165321-1b46-4cdd-925e-66c92c903158\" />\r\n\r\n\r\n\r\n<img width=\"1463\" alt=\"スクリーンショット 2025-05-04 20 54 53\" src=\"https://github.com/user-attachments/assets/01987e1e-eb6e-4494-9055-9fbec6d68b08\" />\r\n\r\n- custum_metadataを用意した場合\r\n<img width=\"734\" alt=\"スクリーンショット 2025-05-04 21 01 33\" src=\"https://github.com/user-attachments/assets/d2164202-aeb5-45b2-beff-16579a7d68fb\" />\r\n\r\n![Uploading スクリーンショット 2025-05-04 21.35.15.png…]()\r\n\r\n\r\n\r\n\r\n# 変更の背景\r\n- 変更の概要にも記載いたしましたが、テスト環境という画像や、誤ったリンクが表示されてしまうことを防ぐためです。\r\n\r\n# 関連Issue\r\n[[REFACTOR] metadata のオプショナル化 #403](https://github.com/digitaldemocracy2030/kouchou-ai/issues/403)\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 128,
    "deletions": 39,
    "changed_files": 6,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3037406529,
    "number": 421,
    "title": "Client-AdminにChatGPTのAPIKeyの確認画面の追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/421",
    "user": "tokoroten",
    "created_at": "2025-05-03T13:19:34Z",
    "merged_at": "2025-05-06T23:53:53Z",
    "body": "# 変更の概要\r\n- 管理画面の追加\r\n- とりあえずOpenAIのAPIを一発叩いてみて、動作確認\r\n- エラーが出たら、エラーを分かりやすく表示\r\n\r\n# スクリーンショット\r\n![image](https://github.com/user-attachments/assets/f4e0a02b-3fb1-4e3d-9eed-c624273ec0cb)\r\n![image](https://github.com/user-attachments/assets/5193c5bc-5ea3-4740-aeca-22ab50a27dce)\r\n![image](https://github.com/user-attachments/assets/e6c4a57d-86fa-4bce-809e-3e59aee058af)\r\n\r\n\r\n# 変更の背景\r\n- envでAPIKeyが正しく設定されているか分からない\r\n- APIのデポジットに正しくチャージされているか分からない\r\n\r\n# 関連Issue\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 216,
    "deletions": 4,
    "changed_files": 3,
    "co_author": "shinta.nakayama",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3036161417,
    "number": 418,
    "title": "ラジオボタンに見た目を変更",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/418",
    "user": "takumi19910112",
    "created_at": "2025-05-02T14:25:17Z",
    "merged_at": "2025-05-03T02:48:10Z",
    "body": "# 変更の概要\r\n- 下記リンクに記載のIssueの対応となります。\r\n- 機能面は変更せずに、「公開中」と「非公開」のボタンを、ラジオボタンで選択できる形式としました。\r\n\r\n# スクリーンショット\r\n- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください\r\n- 変更前\r\n<img width=\"1913\" alt=\"スクリーンショット 2025-05-02 23 48 44\" src=\"https://github.com/user-attachments/assets/be770ad0-9992-41f3-81d5-6486de380478\" />\r\n- 変更後\r\n<img width=\"1911\" alt=\"スクリーンショット 2025-05-03 0 19 06\" src=\"https://github.com/user-attachments/assets/87232996-19c0-46b2-a4f1-f3c78e0a92cc\" />\r\n\r\n\r\n\r\n\r\n\r\n# 変更の背景\r\n- チャクラUIの「ラジオ」か、「ラジオカード」のどちらが適しているか考えました。\r\n- 「ラジオカード」だと、すでに使用されていたので画面にあっているかと考え採用しました。（ラジオの方がよかったらご指摘ください）\r\n- 使用されていた箇所（client/components/charts/SelectChartButton.tsx）\r\n\r\n# 関連Issue\r\n[[FEATURE]「公開」ボタンを押した時の効果を分かりやすくする](https://github.com/digitaldemocracy2030/kouchou-ai/issues/302)\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 131,
    "deletions": 46,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3034087094,
    "number": 413,
    "title": "static exportでbase pathを設定可能にする(Github Pages対応)",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/413",
    "user": "mtane0412",
    "created_at": "2025-05-01T15:19:16Z",
    "merged_at": "2025-05-02T15:40:07Z",
    "body": "# 変更の概要\r\n`.env` に`NEXT_PUBLIC_STATIC_EXPORT_BASE_PATH=/kouchou-ai-reports`などのように記述して、Github Pagesのようなサブディレクトリへのデプロイでもパスを上手く解決するようにする\r\n(ルートドメインにデプロイするときは今まで通り記述なし)\r\n\r\n*   **静的エクスポートのベースパス対応:**\r\n    *   `.env.example` と `Makefile` に `NEXT_PUBLIC_STATIC_EXPORT_BASE_PATH` 環境変数を追加し、ビルド時にベースパスを指定できるようにしました。(`Makefile`, `.env.example`)\r\n    *   `next.config.ts` で `basePath` と `assetPrefix` を静的エクスポート時に動的に設定するように変更しました。(`client/next.config.ts`)\r\n*   **パス解決ユーティリティの改善:**\r\n    *   `image-src.ts` をリファクタリングし、`getBasePath`, `getRelativeUrl`, `getImageFromServerSrc` 関数を導入しました。これにより、静的エクスポート時と通常時で画像やアセットのパスを正しく解決できるようになります。(`client/app/utils/image-src.ts`)\r\n    *   各ページコンポーネント (`[slug]/page.tsx`, `page.tsx`) やコンポーネント (`BroadlisteningGuide.tsx`) で、新しいパス解決ユーティリティを使用するように修正しました。(`client/app/[slug]/page.tsx`, `client/app/page.tsx`, `client/components/report/BroadlisteningGuide.tsx`)\r\n*   **APIベースURL解決の改善:**\r\n    *   `api.ts` の `getApiBaseUrl` 関数を修正し、サーバーサイドレンダリング時に `API_BASEPATH` 環境変数を優先的に使用するようにしました。(`client/app/utils/api.ts`)\r\n\r\n# 変更の背景\r\n> 静的ファイルをoutして、その中身をgithub pagesで公開すると、out/index.html自体は表示はされるが、画像要素がなかったりリンク先（個別ページ）が404になるなど、うまく表示されない。（参照が絶対パスになってることによる？）\r\n\r\n# 関連Issue\r\n#274\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 122,
    "deletions": 22,
    "changed_files": 10,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3033920551,
    "number": 411,
    "title": "Github Projectsの運用ポリシーをドキュメント化",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/411",
    "user": "nasuka",
    "created_at": "2025-05-01T13:59:30Z",
    "merged_at": "2025-05-05T02:52:10Z",
    "body": "# 変更の概要\r\nGithub Projectsの運用ポリシーをドキュメント化した\r\n\r\n# 変更の背景\r\nこれまで運用方針が明文化されていなかったが、デザイナーの方もジョインし、チームの規模も拡大化してきたので認識合わせのためにフローを整備した\r\n\r\n\r\n# 記載していないこと・迷っていること\r\n* cold listの対応方針は未記載\r\n  * stale botを作って、90日以上更新されていないものは自動でcloseするなどしたほうが良さそう\r\n*メンテナーがイシューをメンテナンスするタイミングについて\r\n  * 本来は定期的（例えば週一）にメンテナンスをすべきだが、OSSなのでそれを義務化するのも難しいなと思っており、そちらは明文化していません（個々のメンテナの自助努力に任せる想定）\r\n    * 妙案ある方がいたらコメントもらえると嬉しいです\r\n\r\n# 備考\r\n* デザイン関連のタスクは一旦サブイシューを切る想定にしていますが、実際にデザインされる方のご意見を伺いながら適宜修正したいと思っています\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 38,
    "deletions": 1,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3033872634,
    "number": 410,
    "title": "Solve #409 automate Issues labeling with Github Actions and LLM",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/410",
    "user": "masatosasano2",
    "created_at": "2025-05-01T13:30:29Z",
    "merged_at": "2025-05-02T13:17:38Z",
    "body": "# 変更の概要\r\n- Issue起票時にGithub Actionsで内容をチェックし、以下の観点で相応しいラベルを付与します\r\n    - ~公序良俗に反するかどうか~\r\n    - ~既存のIssueと重複するかどうか~\r\n    - タイトルの先頭の[text]や絵文字\r\n    - タイトルと本文の内容\r\n\r\n# 変更の背景\r\n- 1つのIssueが複数の属性を持ちうるため、タイトルの先頭の[text]や絵文字ではなく、複数指定もフィルタもしやすいラベルを活用したい。\r\n- しかし、ラベルを付与できるのはWrite権限以上を持つユーザーに限られる。\r\n- そのため、ラベルの管理コストがメンテナに集中してしまう。\r\n\r\n# 関連Issue\r\n#409\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 218,
    "deletions": 0,
    "changed_files": 3,
    "co_author": "masato sasano",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3033660379,
    "number": 408,
    "title": "static build時のフォントキャッシュを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/408",
    "user": "mtane0412",
    "created_at": "2025-05-01T11:20:18Z",
    "merged_at": "2025-05-02T03:20:40Z",
    "body": "# 変更の概要\r\n- report数分だけfetchFontでGoogle Fontsをダウンロードしていたのをフォントキャッシュオブジェクトに保存して再利用するようにした\r\n\r\n# 変更の背景\r\n- 静的ページを25出力しているが、引き続きmake client-build-staticが安定しない ( #343 と同様のエラー)\r\n- #344 の修正を行ったが、HTTPエラーは出ておらず、別の要因でビルドがクラッシュしている可能性\r\n- fetchFontがページ数分callされているので25 pages * 2 font weight = 50 font filesのダウンロードになってクラッシュしてるという推測でフォントキャッシュを作成した。一旦エラーが落ち着いたのでプルリクにしておく\r\n\r\n# 関連Issue\r\n#343 \r\n#344 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 22,
    "deletions": 6,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3031616629,
    "number": 405,
    "title": "濃い意見グループが選択された際にグループの説明文を切り替える",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/405",
    "user": "nasuka",
    "created_at": "2025-04-30T15:16:11Z",
    "merged_at": "2025-05-01T02:20:52Z",
    "body": "# 変更の概要\r\n濃い意見グループが選択された際にグループの説明文を切り替えるようにした\r\n\r\n# スクリーンショット\r\n![ad1eda65f4040295521ee4ea5b40fca3](https://github.com/user-attachments/assets/9a31ce08-f7a7-49c2-8eb0-961e611ad110)\r\n\r\n# 変更の背景\r\n* 濃い意見グループを表示した際も、全体図と同じクラスタの説明文が並んでしまっていた\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/24\r\n（issueに記載する内容を詳細化しようと思って、どのへんを直したら良さそうかclineに聞いたらそのまま実装が完了してしまった）\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 15,
    "deletions": 10,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3031234513,
    "number": 404,
    "title": "散布図にズームとパンを追加（あとスクショもできるようになった）",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/404",
    "user": "tokoroten",
    "created_at": "2025-04-30T13:08:13Z",
    "merged_at": "2025-04-30T13:47:07Z",
    "body": "# 変更の概要\r\n散布図をズームとパンで操作できるようにするために、Plotlyのコンフィグを変更した\r\n\r\n副次的効果として、スクリーンショットボタンが付いた\r\n\r\n# スクリーンショット\r\n\r\n![dd2030-plotly](https://github.com/user-attachments/assets/a68e8d26-59dc-43da-a3be-77aa28cea80f)\r\n\r\n# 変更の背景\r\n範囲選択して拡大がめんどくさすぎた\r\n\r\n# 関連Issue\r\n\r\n#306 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 7,
    "deletions": 3,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3030082015,
    "number": 399,
    "title": "Devinとのコラボレーションについてのドキュメントを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/399",
    "user": "shingo-ohki",
    "created_at": "2025-04-30T04:18:45Z",
    "merged_at": "2025-05-01T00:15:14Z",
    "body": "# 変更の概要\r\n- ドキュメントに Devin についての記述を追加\r\n\r\nChatGPT が提案してくれたものをベースに、実態に合わせて修正してみました。\r\nIssue 自体があくまで仮説なため、あくまで「ないよりはあったほうがいい」というくらいに考えていますが、\r\nこれが適切かどうか自信はないので、たたき台と思ってガンガンコメントいただければと思います。\r\n\r\n# 変更の背景\r\nDevin との協働に戸惑う開発者もいるだろうと考えられるため、何らかの軽減措置があるとよさそう\r\n\r\n# 関連Issue\r\n#398 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 140,
    "deletions": 62,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3044650279,
    "number": 448,
    "title": "Feat/evaluation report",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/448",
    "user": "take365",
    "created_at": "2025-05-07T04:30:03Z",
    "body": "# 変更の概要\r\n- クラスタリング評価結果をCVS形式、HTML形式で出力するレポート生成機能を experimental/evaluation_report 以下に新規追加しました。\r\n- LLM評価（明確さ、一貫性、多様性、代表性）とシルエットスコア（UMAP・Embeddingベース）を統合し、可視化可能なHTMLレポートとして出力します。\r\n- 既存の本番コードには影響しない構成となっており、すべての変更は experimental/ ディレクトリに収まっています。\r\n-タイトル・解説が「エラー」なのに低い評価ができていない、意見が１件の場合の意見のまとまり具合がアンバランスも対応\r\n\r\n# 変更の背景\r\n- 現在のクラスタリング評価はCSVやJSON形式が中心であり、利用者や開発者が結果を俯瞰して確認するのが難しい状況でした。\r\n- 本変更により、評価結果を視覚的に確認でき、クラスタリング精度の比較や改善方針の立案が容易になります。\r\n- 将来的に本機能を本体に統合することも視野に入れた、初期実装段階として experimental/ に追加しています。\r\n\r\n# 関連Issue\r\n（実験）LLMによるクラスタ品質の自動評価 #144\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/144 \r\n\r\n# CLAへの同意\r\n- [x] CLAの内容を読み、同意しました\r\n",
    "additions": 17839,
    "deletions": 0,
    "changed_files": 19,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3042274412,
    "number": 440,
    "title": "Feat/evaluation report クラスタ品質の自動評価 #144",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/440",
    "user": "take365",
    "created_at": "2025-05-06T10:05:57Z",
    "body": "# 変更の概要\r\n- クラスタリング評価結果をCVS形式、HTML形式で出力するレポート生成機能を experimental/evaluation_report 以下に新規追加しました。\r\n- LLM評価（明確さ、一貫性、多様性、代表性）とシルエットスコア（UMAP・Embeddingベース）を統合し、可視化可能なHTMLレポートとして出力します。\r\n- 既存の本番コードには影響しない構成となっており、すべての変更は experimental/ ディレクトリに収まっています。\r\n\r\n\r\n# 変更の背景\r\n- 現在のクラスタリング評価はCSVやJSON形式が中心であり、利用者や開発者が結果を俯瞰して確認するのが難しい状況でした。\r\n- 本変更により、評価結果を視覚的に確認でき、クラスタリング精度の比較や改善方針の立案が容易になります。\r\n- 将来的に本機能を本体に統合することも視野に入れた、初期実装段階として experimental/ に追加しています。\r\n\r\n# 関連Issue\r\n（実験）LLMによるクラスタ品質の自動評価 #144\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/144 \r\n\r\n# CLAへの同意\r\n- [x] CLAの内容を読み、同意しました\r\n",
    "additions": 16389,
    "deletions": 0,
    "changed_files": 17,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3042238344,
    "number": 439,
    "title": "Feat/evaluation report",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/439",
    "user": "take365",
    "created_at": "2025-05-06T09:56:13Z",
    "body": "# 変更の概要\r\n- クラスタリング評価結果をHTML形式で出力するレポート生成機能を experimental/evaluation_report 以下に新規追加しました。\r\n- LLM評価（明確さ、一貫性、多様性、代表性）とシルエットスコア（UMAP・Embeddingベース）を統合し、可視化可能なHTMLレポートとして出力します。\r\n- 既存の本番コードには影響しない構成となっており、すべての変更は experimental/ ディレクトリに収まっています。\r\n\r\n\r\n# 変更の背景\r\n- 現在のクラスタリング評価はCSVやJSON形式が中心であり、利用者や開発者が結果を俯瞰して確認するのが難しい状況でした。\r\n- 本変更により、評価結果を視覚的に確認でき、クラスタリング精度の比較や改善方針の立案が容易になります。\r\n- 将来的に本機能を本体に統合することも視野に入れた、初期実装段階として experimental/ に追加しています。\r\n\r\n# 関連Issue\r\n（実験）LLMによるクラスタ品質の自動評価 #144\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/144 \r\n\r\n# CLAへの同意\r\n- [x] CLAの内容を読み、同意しました\r\n",
    "additions": 16389,
    "deletions": 0,
    "changed_files": 17,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3041048428,
    "number": 434,
    "title": "create",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/434",
    "user": "take365",
    "created_at": "2025-05-05T23:14:47Z",
    "body": "# 変更の概要\r\n- ここに変更の概要を記載してください\r\n\r\n# スクリーンショット\r\n- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください\r\n\r\n# 変更の背景\r\n- ここに変更が必要となった背景を記載してください\r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [ ] CLAの内容を読み、同意しました",
    "additions": 17397,
    "deletions": 0,
    "changed_files": 18,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3040935379,
    "number": 433,
    "title": "create",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/433",
    "user": "take365",
    "created_at": "2025-05-05T22:06:34Z",
    "body": "ドラフト",
    "additions": 17397,
    "deletions": 0,
    "changed_files": 18,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3037777528,
    "number": 426,
    "title": "Issue の Project status の自動更新",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/426",
    "user": "masatosasano2",
    "created_at": "2025-05-04T04:54:21Z",
    "body": "# 変更の概要\r\nGitHub IssuesとGitHub Projectsのステータスフィールドを以下の条件とイベントに基づいて自動的に更新します。\r\n| **条件**  | **きっかけ** | **変更後のstatus** |\r\n| ------------- | ------------- | ------------- |\r\n| Status in [`No Status`, `Cold List`, `Need Refinement`, `Ready`]  | Assign | ~`Ready`~ `In Progress` |\r\n| ~Status = `Ready` and Assigne~  | ~Create PR, post comment~ | ~`In Progress`~ |\r\n| Status = `In Progress` | Unassign | `Ready` |\r\n\r\n# 変更の背景\r\nkouchou-ai のIssue数が多く、statusの管理コストが高いため、一部の変更を自動化したい。\r\n\r\n# 関連Issue\r\n#425\r\n\r\n# 実装詳細\r\n- ~2つの~GitHub Actionsワークフローを作成：\r\n    - `assignee-status-sync.yml`：担当者が追加/削除された時のステータス変更を処理\r\n    - ~`progress-status-sync.yml`：進捗があった時（PRリンク、コメント）のステータス変更を処理~\r\n- GraphQL APIを使用してGitHub Projectsと対話するPythonスクリプトを実装　※ REST API はProjectV2に未対応\r\n- [yamlの中にpython書かない](https://x.com/ssig33/status/1804740980643602792)\r\n\r\n必要な設定\r\nRepository > Settings > General > Security > Secrets and variables > Actions > Repository secrets\r\n- **PROJECT_TOKEN** : PAT Token with Projects:write permission\r\n- **PROJECT_ID** : GitHubプロジェクトのID（形式：PVT_xxxx）\r\n- **STATUS_FIELD** : GitHubプロジェクト内のStatusフィールドのID（形式：PVTSSF_xxxx）\r\n\r\n**PROJECT_TOKEN** の発行方法：\r\n- https://github.com/settings/personal-access-tokens/new にアクセス\r\n- `Resource owner` > `digitaldemocracy2030`\r\n- `Expiration` > 適当な有効期間\r\n- `Repository access` > `Only selected repositories`\r\n- `Select Repositories` > `kouchou-ai`\r\n- `Permissions` > `Organization Permissions` > `Projects` > `Access: Read and write`\r\n- `Generate token`\r\n\r\n**PROJECT_ID** (PVT_xxxx) と **STATUS_FIELD** (PVTSSF_xxxx) の取得方法：\r\n- https://docs.github.com/ja/graphql/overview/explorer にアクセス\r\n- Githubアカウントでログイン ※ `digitaldemocracy2030` のメンバである必要がある\r\n- 以下のクエリを実行:\r\n```\r\n{\r\n  organization(login: \"digitaldemocracy2030\") {\r\n    projectV2(number: 3) {\r\n      id\r\n      fields(first: 20) {\r\n        nodes {\r\n          ... on ProjectV2SingleSelectField {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 372,
    "deletions": 0,
    "changed_files": 4,
    "co_author": "masato sasano",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3037451152,
    "number": 422,
    "title": "Add provider selection to LLM integration",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/422",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-03T14:54:30Z",
    "body": "# LLM統合へのプロバイダー選択機能の追加\n\nこのPRは広聴AIアプリケーションにプロバイダー選択機能を追加し、異なるLLMプロバイダー間で動的に切り替えることを可能にします。\n\n## 変更内容\n\n### バックエンド\n- `admin_report.py`スキーマにproviderとlocal_llm_addressフィールドを追加\n- `report_launcher.py`にプロバイダー情報を含めるよう更新\n- `llm.py`を更新し、環境変数の代わりにproviderパラメータを使用するように変更\n- サーバーサイドでのモデル取得機能を追加\n- OpenAI SDKを使用したLocalLLMサポートを実装\n- パイプラインステップでproviderとlocal_llm_addressパラメータを渡すように修正\n\n### フロントエンド\n- プロバイダー選択ドロップダウンを追加\n- プロバイダーごとのモデルリストを動的に管理\n- LocalLLM用の「モデル取得」ボタンを実装\n- WebStorage (localStorage) を使用して設定を保存・読み込み\n- LocalLLMプロバイダー選択時にisEmbeddedAtLocalを自動的にチェックし無効化\n- **「埋め込み処理をサーバ内で行う」チェックボックスの位置をAIモデルの下に移動**\n\n## Devinセッションへのリンク\nhttps://app.devin.ai/sessions/6ccb4a9b82d7428289074993f6a64371\n\n## リクエスト元\nshinta.nakayama@gmail.com\n",
    "additions": 937,
    "deletions": 156,
    "changed_files": 25,
    "co_author": "shinta.nakayama",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3036654526,
    "number": 419,
    "title": "Devin/1746211334 issue project status sync",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/419",
    "user": "masatosasano2",
    "created_at": "2025-05-02T19:07:11Z",
    "body": null,
    "additions": 434,
    "deletions": 0,
    "changed_files": 6,
    "co_author": "masato sasano",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3034036696,
    "number": 412,
    "title": "Add support for Open Router and LocalLLM providers",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/412",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-01T14:53:39Z",
    "body": "# Add support for Open Router and LocalLLM providers\n\nThis PR adds support for additional LLM providers beyond the current OpenAI and Azure OpenAI options:\n\n- Open Router: Access to multiple AI providers through a unified API\n- LocalLLM: Support for local LLM servers like LM Studio and ollama in OpenAI-compatible mode\n\n## Changes\n\n### Server-side\n- Added environment variables for provider configuration in `.env.example`\n- Extended `llm.py` to support routing requests to different providers\n- Added functions for retrieving and filtering available models\n- Added verification endpoint to check provider connections\n- Updated `ReportInput` schema to include provider field\n\n### Client-side\n- Added provider selection UI in admin panel\n- Added provider verification button to test connections\n- Updated model selection to dynamically load available models\n- Added provider-specific descriptions and error handling\n\n## How to use\n\n1. Set the `LLM_PROVIDER` environment variable to one of: `openai`, `azure`, `openrouter`, or `localllm`\n2. Configure provider-specific settings in `.env`:\n   - For Open Router: Set `OPENROUTER_API_KEY` and optionally `OPENROUTER_API_BASE`\n   - For LocalLLM: Set `LOCALLLM_API_BASE` (default: http://localhost:1234/v1)\n3. In the admin UI, select the provider and click \"Verify Connection\" to test and retrieve available models\n\n## Testing\n\n- Tested with OpenAI provider (default)\n- Verified environment variable configuration\n- Checked UI for provider selection and verification\n\nLink to Devin run: https://app.devin.ai/sessions/098465449f18450e9295840e58a9620b\nRequested by: shinta.nakayama@gmail.com\n",
    "additions": 469,
    "deletions": 157,
    "changed_files": 9,
    "co_author": "shinta.nakayama",
    "requester": "shinta.nakayama",
    "type": "pr"
  },
  {
    "id": 3033233392,
    "number": 407,
    "title": "管理画面の基本e2eテスト実装の簡素化",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/407",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-01T06:00:01Z",
    "body": "## 概要\nIssue #396 に関連する管理画面の基本e2eテスト実装を簡素化しました。\n\n## 変更内容\n- 複雑なセレクタ戦略を単純化し、より信頼性の高いセレクタを使用\n- h1セレクタをh2セレクタに修正（実際の要素に合わせて）\n- introFieldセレクタの問題を修正\n- デバッグコードとエラーハンドリングを簡素化\n- テストコードの可読性を向上\n\n## テスト方法\n```bash\ncd test/e2e\nnpm install\nnpx playwright install\nnpx playwright test\n```\n\n## 関連Issue/PR\n- Issue #396: 管理画面の基本e2eテスト計画\n- PR #397: 以前の実装\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/53ea0979f0964bd8bd60bed07ff7fe12\n\n## Requested by\nNISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 224,
    "deletions": 746,
    "changed_files": 15,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3033029270,
    "number": 406,
    "title": "Add environment verification page for ChatGPT API key",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/406",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-01T02:37:40Z",
    "body": "# Add environment verification page for ChatGPT API key\n\nThis PR adds a new page in the admin panel for environment verification, specifically to verify the ChatGPT API key. The page allows users to check if their API key is correctly configured.\n\n## Changes\n- Added a new API endpoint for verifying the ChatGPT API key using a simple chat request\n- Created a new page in the admin panel for environment verification\n- Added a link to the environment verification page in the admin dashboard\n- Added NEXT_PUBLIC_USE_AZURE to .env.example for client-side access\n- Added Japanese error messages for better user experience\n- Added special handling for insufficient quota errors (429)\n\n## Testing\n- Verified that the API endpoint returns the correct responses for both valid and invalid API keys\n- Tested the UI feedback for different verification results\n- Confirmed that insufficient quota errors are properly detected and displayed\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/ff39675b8cd54a90a3ea1a54bf82936d\n\nRequested by: shinta.nakayama@gmail.com\n",
    "additions": 217,
    "deletions": 4,
    "changed_files": 4,
    "co_author": "shinta.nakayama",
    "requester": "shinta.nakayama",
    "type": "pr"
  },
  {
    "id": 3029913116,
    "number": 397,
    "title": "Issue #396: 管理画面の基本e2eテストを実装",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/397",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:58:00Z",
    "body": "# 管理画面の基本e2eテスト実装\n\nIssue #396 に基づいて、管理画面の基本的なエンドツーエンドテストを実装しました。このテストでは、以下の基本的なワークフローをテストします：\n\n1. 管理画面へのアクセスとログイン（Basic認証）\n2. レポート作成ページへの移動\n3. 基本情報の入力\n4. CSVファイルのアップロード\n5. レポート作成の実行と成功確認\n\n## 変更内容\n- `test/e2e/tests/admin/create-report.spec.ts` ファイルを更新し、テストを実装\n- 既存のページオブジェクトとユーティリティを活用\n\n## テスト方法\nテストを実行するには以下のコマンドを使用します：\n```\ncd test/e2e\nnpm test\n```\n\nLink to Devin run: https://app.devin.ai/sessions/1883f9aaaede4ddab11a25bbbde4d8bc\nRequested by: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 657,
    "deletions": 13,
    "changed_files": 2,
    "co_author": "NISHIO Hirokazu",
    "requester": "(nishio.hirokazu",
    "type": "pr"
  }
]