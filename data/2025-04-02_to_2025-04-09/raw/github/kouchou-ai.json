[
  {
    "id": 2979402540,
    "number": 260,
    "title": "[FEATURE]Azure Blob Serviceにlocal file systemにあるレポートをuploadするスクリプト",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/260",
    "user": "nishio",
    "created_at": "2025-04-08T10:51:40Z",
    "closed_at": "2025-04-08T14:23:51Z",
    "body": "# 背景\n- derived from #216 \n- local file systemにあるレポートをビルドに含めるのではなく、Azure Blob Serviceにuploadするスクリプトがあるのが適切\n\n\n# 提案内容\n\n",
    "type": "issue"
  },
  {
    "id": 2978773217,
    "number": 257,
    "title": "[FEATURE]１層目のクラスタ数上限を緩和する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/257",
    "user": "nasuka",
    "created_at": "2025-04-08T06:46:31Z",
    "closed_at": "2025-04-08T14:04:04Z",
    "body": "# 背景\n* 現在1層目のクラスタ数上限は最大で10個だが、これだと粒度が粗すぎる\n  * 実用的には1層目でもより細分化して確認したいケースがある\n\n# 提案内容\n* 1層目のクラスタ数の上限を緩和する\n  * 決め打ちだが一旦40個程度までは緩和しても良さそう\n  * バックエンド側は対応できるようになっており、admin側でバリデーションを修正すればできるはず\n* 2層目については、設定値の下限を1層目のクラスタ数の2倍程度にすると良さそう\n",
    "type": "issue"
  },
  {
    "id": 2974626937,
    "number": 238,
    "title": "[FEATURE]Analysis内の「意見が含まれるコメント数」 を「コメント数」に変える",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/238",
    "user": "nasuka",
    "created_at": "2025-04-06T02:09:30Z",
    "closed_at": "2025-04-06T03:26:35Z",
    "body": "# 背景\n* 実装の実態として、「意見が含まれるコメント数」ではなく元データ内の単純な「コメント数」を算出しており、文言と実態が合っていない\n* また、件数を記載する上でも、全体として何件のデータが処理されたのかが表示されている方が自然\n  * 「意見が含まれるコメント数」を記載するのであれば、「コメント数」と「抽出された意見数」の間に入れるべき\n    * ここまで入れるべきかどうかは議論の余地があるが、個人的には複雑になりすぎるので表示しなくても良いように思う\n\n\n<img width=\"881\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e2bab1c1-d1b9-4013-a87e-b3d9724ea29d\" />\n\n\n# 提案内容\n「意見が含まれるコメント数」 -> 「コメント数」に文言を修正する",
    "type": "issue"
  },
  {
    "id": 2974565326,
    "number": 237,
    "title": "[BUG] 散布図等・全体画面表示：背景HPの一部が重なって表示される",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/237",
    "user": "naoyo4",
    "created_at": "2025-04-05T23:33:17Z",
    "closed_at": "2025-04-08T08:15:00Z",
    "body": "### 概要\n\n<!-- バグの簡潔な説明をお願いします -->\n全体画面表示すると、元のHP、タイトルの文字・ボタン等（ 背景HP ）が重なって表示される。\n（　スクロールすると背景HPも動いて表示される　）\n\n### 再現手順\n\n「全体図」・「濃い意見グループ」の散布図、および「階層図」で、**右の「全体画面表示」を押し、全体画面表示をする**\n\n### 期待する動作\n\n<!-- 本来どう動作すべきかを記入してください -->\n全体画面表示をしても、背景HPの一部が重なって表示されることがないようにする。\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n\n![Image](https://github.com/user-attachments/assets/0b37672e-0655-4f3c-a836-7b3f3d8b1dbe)\n\n![Image](https://github.com/user-attachments/assets/dddcfd73-2bd1-4bec-8f90-bba248d76324)\n\n![Image](https://github.com/user-attachments/assets/1a4ffcb7-6a32-4e49-8fd7-6b6e9557b47e)\n\n![Image](https://github.com/user-attachments/assets/7b070937-39b8-479b-9592-256681b0f24d)\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->\n以前は、このようなことはなかった。　どのタイミングで発生しだしたか不明。\n最新の Build（ Commit 978b776 ： main #226 ）で確認。\n（　↑ 表現の仕方がよく分からないけど・・・最新のもの　）\n\n２日前（ 4/4 ）作成した、テストサイト（ https://naoyo4.xsrv.jp/ ）でも同様の現象が確認できる。\n（　タイミング的に同じ最新 Build or 少し手前　）",
    "type": "issue"
  },
  {
    "id": 2971583839,
    "number": 230,
    "title": "[FEATURE]レポートの削除機能",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/230",
    "user": "nasuka",
    "created_at": "2025-04-04T07:56:05Z",
    "closed_at": "2025-04-08T11:55:40Z",
    "body": "# 背景\n* 広聴AIのレポート出力にあたっては、パラメータ/プロンプトを変えて何度もレポートを出力するケースが多い\n  * 実験的に出力したレポートがclientの一覧画面にあるとノイズになることがあり、実験的に出力したレポートを削除したいケースがある\n    * 公開/非公開を管理する( https://github.com/digitaldemocracy2030/kouchou-ai/issues/229 )ことでclient側の問題は解決できるが、admin側では非公開にしたとしても不要なレポートが残る\n\n\n# 提案内容\nレポートの削除機能を実装する\n\n* client-admin\n  * 一覧画面でレポートの削除が押された際に、削除のリクエストをapiに送信する\n* api\n  * report_statusの状態にdeletedを追加する  \n  * 削除のendpointを作成し、対象のslugのレポートのstatusをdeletedにする\n  * deletedなレポートをフィルタした上でclientに結果を返す\n  \n↑は保守的に論理削除にする想定で記載してますが、物理削除でもいいかも（ご意見ある方はぜひコメントしていただけると助かります）\n\n![Image](https://github.com/user-attachments/assets/e16a27d5-ec5f-4a44-8a82-14e99cf8a47e)",
    "type": "issue"
  },
  {
    "id": 2971557072,
    "number": 229,
    "title": "[FEATURE]レポートの公開/非公開状態の設定",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/229",
    "user": "nasuka",
    "created_at": "2025-04-04T07:42:44Z",
    "closed_at": "2025-04-07T09:50:54Z",
    "body": "# 背景\n* 広聴AIのレポート出力にあたっては、パラメータ/プロンプトを変えて何度もレポートを出力するケースが多い\n* 実験的に出力したレポートがclientの一覧画面にあるとノイズになることがある\n  * client側では調整した後の最終的なレポートが閲覧できれば良く、実験過程のレポートは閲覧できなくても良い場合がある\n    * e.g. 最終的なレポートを市民に向けてパブリックに公開するケース等\n\n# 提案内容\nadminに公開/非公開のトグルスイッチを設け、公開状態のもののみclient側で表示するようにする\n\n改修内容のイメージ\n\n* api\n  * レポートごとに公開/非公開を管理する情報を追加する\n    * report_status.jsonで管理する想定\n  * `GET /reports` に対して公開中のレポートのみ返すようにする\n  *  `GET /reports/{slug}` に対して、公開中のレポートのみ結果のjsonを返すようにする\n* client-admin\n  * 一覧画面においてレポートごとに公開/非公開を管理するトグルスイッチを足す\n  * トグルスイッチが押された際にapi側にリクエストを送信し、公開/非公開の状態を変更する",
    "type": "issue"
  },
  {
    "id": 2967838327,
    "number": 225,
    "title": "[BUG] ２回目以降、静的ファイル出力（static build）時 パーミッションエラーが発生する？",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/225",
    "user": "naoyo4",
    "created_at": "2025-04-03T00:12:34Z",
    "closed_at": "2025-04-08T17:12:34Z",
    "body": "### 概要\n\n<!-- バグの簡潔な説明をお願いします -->\n静的ファイル出力（static build） を行う際、最初は問題なく出力ディレクトリーが作成されるが、再度実行するとパーミッションエラーが発生する？\n\n### 再現手順\n\n1. README の手順に則り（ make client-build-static ）、静的ファイル生成（ out ディレクトリ出力 ）\n2. 再度同じことを行うとMakefile手順の最初（ rm -rf out ）でパーミッションエラーが発生\n3. （ Webサーバーにも、FTP でUP時、パーミッションエラーが発生 ）\n\n### 期待する動作\n\n<!-- 本来どう動作すべきかを記入してください -->\n２回目以降もパーミッションエラーが発生せず、処理できる。\n（ WebサーバーにFTPでUPできる ）\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n(base) nao@d500:~/kouchou-ai$ make client-build-static\nrm -rf out\nrm: 'out/images/broadlistening.png' を削除できません: 許可がありません\nrm: 'out/404.html' を削除できません: 許可がありません\nrm: 'out/_next/static/chunks/polyfills-42372ed130431b0a.js' を削除できません: 許可がありません\n：\n：\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->\nIssue 上げること自体ほぼ初めてで、内容自体も自信ありませんが、アドバイスだけでもいただければ幸いです。\nhttp-server による動作等は、問題ないことは確認済み。",
    "type": "issue"
  },
  {
    "id": 2965964029,
    "number": 219,
    "title": "[FEATURE]client/client-adminのテストをgithub actionsで実行する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/219",
    "user": "nasuka",
    "created_at": "2025-04-02T10:36:50Z",
    "closed_at": "2025-04-08T12:00:00Z",
    "body": "# 背景\n* 現状テストコードが存在せず、実装変更した際に不具合が起きる可能性が高い/検証に工数がかかる\n\n\n# 提案内容\n* github actionsで、clientのテストを行うように設定する\n  * 現在はそもそもテストコードが存在しないので、テストが容易な関数等をピックアップしてテストコードも合わせて実装する\n  * 参考: https://github.com/digitaldemocracy2030/kouchou-ai/pull/206",
    "type": "issue"
  },
  {
    "id": 2962812783,
    "number": 216,
    "title": "[FEATURE]Azureへのデプロイ時に手元のレポートを含めることを可能にする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/216",
    "user": "nishio",
    "created_at": "2025-04-01T09:09:59Z",
    "closed_at": "2025-04-08T11:15:58Z",
    "body": "# 背景\nストレージ連携ができていない状況でもAzureデプロイの更新時にレポートが維持される\n\n\n# 提案内容\n\nby Devin\nAPIサーバをビルドする際にローカルの結果ファイルを含める方法を提案します。\n\n1. server/Dockerfileを修正して、ビルド時にローカルの結果ファイルをコンテナにコピーします：\n\n```\n# 既存のDockerfileに追加\nCOPY ./broadlistening/pipeline/outputs /app/broadlistening/pipeline/outputs\nCOPY ./data/report_status.json /app/data/report_status.json\n```\n\n2. Makefileのazure-buildターゲットを修正して、ビルド前にローカルの結果ファイルを一時的にserverディレクトリにコピーします：\n\n```\nazure-build-with-reports:\n\t$(call read-env)\n\t@echo \">>> レポートファイルをビルドディレクトリにコピー...\"\n\t@mkdir -p ./server/broadlistening/pipeline/outputs\n\t@mkdir -p ./server/data\n\t@cp -r ./server/broadlistening/pipeline/outputs/* ./server/broadlistening/pipeline/outputs/ || true\n\t@cp ./server/data/report_status.json ./server/data/ || true\n\t@echo \">>> APIイメージをビルド...\"\n\tdocker build --platform linux/amd64 -t $(AZURE_ACR_NAME).azurecr.io/api:latest ./server\n\tdocker build --platform linux/amd64 -t $(AZURE_ACR_NAME).azurecr.io/client:latest ./client\n\tdocker build --platform linux/amd64 --no-cache -t $(AZURE_ACR_NAME).azurecr.io/client-admin:latest ./client-admin\n```\n\nこの方法で、APIサーバをビルドする際にローカルの結果ファイルを含めることができます。\n\n",
    "type": "issue"
  },
  {
    "id": 2962326893,
    "number": 212,
    "title": "[BUG]新しいレポートを作成してもclient一覧画面にレポートが表示されない",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/212",
    "user": "nasuka",
    "created_at": "2025-04-01T06:03:27Z",
    "closed_at": "2025-04-06T22:18:02Z",
    "body": "### 概要\n* 新しいレポートを作成してもclient一覧画面にレポートが表示されない\n  * もともとclientは即時反映ではなく、ISRを採用しているため、表示まで最大5分の遅延がある認識\n    * https://github.com/digitaldemocracy2030/kouchou-ai/issues/61\n  * 一方で、試した限りでは5分経過しても一覧画面に新規のレポートが表示されない\n\n### 再現手順\n\n1. 新規にレポートを作成する\n2. 5分以上経過した後に、clientの一覧画面にアクセスする\n3. 一覧画面上に新規レポートが表示されない\n\n他に参考になりそうな情報を以下に記載\n* 一覧画面には表示されないがレポートの詳細画面にはアクセスすることはできる\n* 再度clientをビルドした場合は一覧画面に新規レポートが表示される\n\n\n### 期待する動作\n\nレポート作成から、最大でも5分経過した段階ではclientの一覧画面に新規のレポートが表示される\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2948652084,
    "number": 185,
    "title": "[FEATURE]失敗したプロセスの詳細情報を得られるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/185",
    "user": "nishio",
    "created_at": "2025-03-26T07:34:45Z",
    "closed_at": "2025-04-08T09:01:16Z",
    "body": "# 背景\n\nNISHIO Hirokazu\nうーん、「成功して完了したレポートの結果」をローカルにコピーできるようにはなったけど、デプロイしてる本番環境をユーザが使ってなんかコケたというときに、どんなデータを入れてどこまで進んでどんな死に方をしたのかを確認できないと捗らないな。本番環境のコンテナに直接入ったりサーバのログを見たりすればなんとかなるとはいえ、さっと手元に落として確認したい。やっぱりzipしてダウンロードするAPIをつけるべきか？？\n2 件の返信\n\nNasuka Sumino\nあっても良いと思います！\n他にもいくつかアプローチはある気がしつつ（ステータスを細分化する、外部ストレージ連携してストレージを見に行く等）、データを丸ごと落とせるようにするのが実装的にも比較的ライトで原因究明もしやすいように思います。 \n\nNISHIO Hirokazu\n今回、aipubcomの現時点で公開されてる7つのPDFから過去最大のデータセットを作って入れてみたんですけど、たくさん時間が掛かってから死んだので雰囲気的にembeddingは完了してからクラスタリング時に何か起きたのかなぁみたいな気持ちです\n\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1742971649061709\n\n# 提案内容\n\n<img width=\"319\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/78faf532-a481-4dbb-8279-17fe42cf258d\" />\n\n管理画面の...ボタンで出るメニューに中間データなどをまとめたzipをダウンロードする機能をつける",
    "type": "issue"
  },
  {
    "id": 2937303043,
    "number": 116,
    "title": "[FEATURE]「どのフィールドをcommentとするか」を指定できる機能",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/116",
    "user": "nishio",
    "created_at": "2025-03-21T05:24:46Z",
    "closed_at": "2025-04-04T06:07:56Z",
    "body": "# 背景\nShutaro Aoyama (ぶるーも)\n昨日こうちょうAIを試して、csvフォーマットが絶妙に違うのがだるいなと思いました（ここはコミュニケーションとった方がよかったですね、、）\nいどばたcsvのcontentをcommentに変えるとこうちょうAIに突っ込めるという認識\n\n\nNISHIO Hirokazu\n現状はまずはノンエンジニアが使えるようにWebUIを頑張ってますけど、将来的にはAPIでレポート生成をトリガーできるべきで、その時に「どのフィールドをcommentとするか」を指定できるのが理想だと思います \n\n# 提案内容\n\ndefaultが\"comment\"であるような\"target-column\"属性を受け取るようにし、そのカラムを分析対象とする。\nアンケートのようなデータソースでは通常複数のカラムがあるので、個別にCSVを保存し直さなくても分析できるようになって楽。",
    "type": "issue"
  },
  {
    "id": 2935266523,
    "number": 112,
    "title": "[FEATURE]クラスタ見出しをanchorにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/112",
    "user": "nishio",
    "created_at": "2025-03-20T12:12:16Z",
    "closed_at": "2025-04-03T00:13:55Z",
    "body": "# 背景\n\n<img width=\"832\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4f696633-40b9-47c4-924d-01ab50c0c50c\" />\n\n# 提案内容\n\n展開表示するものは将来的には階層クラスタリングのデータから取れるかもしれないが、とりあえずanchorにしたら特定の見出しにリンクして言及できるようになって良いのではないか",
    "type": "issue"
  },
  {
    "id": 2922122757,
    "number": 46,
    "title": "[FEATURE]ストレージ連携",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/46",
    "user": "nasuka",
    "created_at": "2025-03-15T14:01:35Z",
    "closed_at": "2025-04-08T09:04:49Z",
    "body": "# 変更の背景\n* 現在、apiにおいて、各レポートのステータス（ready, etc）と出力されたレポートのファイルは、レポート出力を実行したマシンにのみ保存される\n* このため、persistent volumeを持たない実行環境ではapiをホスティングできない\n  * また、バックアップを取らない限り、実行環境が壊れた場合にデータが失われてしまう\n\n\n# 提案内容\n* レポートのステータスを記録するファイルと、出力されたレポートおよびその中間ファイルをストレージ（S3等）に連携する\n  * 現在、Azureでインフラを構築できるスクリプトが組まれているので、まずはAzure Blob Storageと連携できるようにするのが良さそう？\n* 具体的には、以下の処理を実装する\n  * ステータスの更新時にステータスファイルをストレージにアップロードする\n    * statusファイルは `./server/data/report_status.json` に配置されている\n  * レポート出力完了時に、中間ファイル・resultをストレージにアップロードする\n    * 中間ファイルは `./server/broadlistening/outputs` 配下に配置されている\n      * outputs配下に、各レポートのslugでディレクトリが作成され、そのディレクトリ内にレポートの中間成果物（embeddingやクラスタリング結果など）と結果ファイル（hierarchical_result.json）が格納されている\n  * アプリケーション起動時に、ストレージから各ファイルをダウンロードする\n* ストレージ連携はオプショナルにする\n  * ストレージ利用がオンになっている場合のみストレージ連携を行う\n\n",
    "type": "issue"
  },
  {
    "id": 2893891126,
    "number": 13,
    "title": "[FEATURE]レポート出力の進捗を知りたい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/13",
    "user": "nasuka",
    "created_at": "2025-03-04T11:15:35Z",
    "closed_at": "2025-04-03T04:16:21Z",
    "body": "# 背景\n* レポート出力が現在どの程度進んでいるのかをダッシュボード上で把握したい\n\n\n# 提案内容\n* バックエンドの処理のステップ単位（extraction, clustering, etc）でダッシュボード上のステータス表示を変える\n* 実現方法の案としては、ステップ毎にレポートの実行ステータスを更新する（processingの粒度を細分化する）のが比較的ライトに実現できそう？\n  * この場合、以下の実装が必要\n    * バックエンド側ではステップを実行する毎にステータスを更新する\n    * client/client-admin側でステータスに応じて表示を変える\n",
    "type": "issue"
  },
  {
    "id": 2979959784,
    "number": 266,
    "title": "[FEATURE]クラスタ数が増えた場合に散布図上でクラスタラベルが被ってしまう",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/266",
    "user": "nasuka",
    "created_at": "2025-04-08T14:20:10Z",
    "body": "# 背景\n* クラスタ数が増えた場合に散布図上でクラスタラベルが被ってしまう\n  * 添付画像は40件で出力したケース。多くのクラスタラベルが被ってしまっている。\n![Image](https://github.com/user-attachments/assets/c8e61e43-ef60-4054-91d0-4b8f3e6f4847)\n\n\n# 提案内容\n解決するアプローチは幾つかありそう。\n\n## 対策方針（Claudeによる案）\n1. ラベル表示の選択的制限\n\n- 重要度ベースの選択：クラスタサイズなどに基づき重要なラベルのみ表示\n- 最大表示数の制限：表示するラベル数に上限を設定（例: 最大15個）\n- ユーザー選択型表示：選択されたクラスタのみラベル表示\n\n2. ラベルの視覚的最適化\n\n- フォントサイズの縮小：ラベルのフォントサイズを小さくして占有面積を減らす\n- 可変フォントサイズ：クラスタの重要度に応じてフォントサイズを調整\n- ラベル省略表示：長いラベルを省略形で表示（例: \"長いラベル名\" → \"長いラ...\"）\n\n3. インタラクティブ手法\n\n- 凡例コンポーネントの追加：画面端に凡例を設け、クラスタ一覧を表示\n- ホバー/クリック表示：マウスホバーやクリック時のみラベルを表示\n- ハイライト機能：選択クラスタを強調し他を半透明化\n\n4. レイアウト最適化\n\n- ラベル位置の調整：ラベル同士の衝突を検出し位置を最適化\n- クラスタのグルーピング：近接するクラスタを階層的に表示",
    "type": "issue"
  },
  {
    "id": 2979691677,
    "number": 264,
    "title": "[REFACTOR] GitHub Actions で Biome の lint, format のチェックを実行する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/264",
    "user": "shgtkshruch",
    "created_at": "2025-04-08T12:47:44Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- #84 で Biome を導入しましたが、format, lint エラーがあるコードがプルリクエストに含まれていても気づく仕組みが現状では整っていません\n- Biome の lint, format を適用しないコードが取り込まれると、コード全体の統一性が落ちるのと、Biome を適用した他のプルリクエストでコードの差分が出る可能性があります\n  - 本来のプルリクエストとは関係のない差分が出ることで、レビューの負荷が上がりそう\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- client, client admin のコードの修正を含むプルリクエストを作成したら、CI で Biome の format, lint のチェックを実行する\n  - [公式で提供している GitHub Actions と `biome ci`](https://biomejs.dev/recipes/continuous-integration/) コマンドが利用できるかもしれません",
    "type": "issue"
  },
  {
    "id": 2978486958,
    "number": 255,
    "title": "(情報整理)OpenAIが使えないケースのケア",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/255",
    "user": "nishio",
    "created_at": "2025-04-08T03:21:10Z",
    "body": "# 背景\n\n政党に売り込む上で「ChatGPTの政治利用NG」が障害になる可能性がある？→あるのでケアが必要\n\n解決案\n - A: そもそもAzure OpenAI ServiceならOKなのでは説(=対処完了済み)\n - B: Geminiを叩けるように変える\n   - B-1: 直接Geminiを叩く分岐を環境変数でやる\n   - B-2: OpenRouter経由にすることでOpenAI API形式でGeminiを叩けるようにする\n   - B-3: [LiteLLM Proxy](https://scrapbox.io/nishio/LiteLLM_Proxy) でやるマニュアルを作る\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2978480128,
    "number": 254,
    "title": "(情報整理)Windows環境で試す人のためのガイドが必要",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/254",
    "user": "nishio",
    "created_at": "2025-04-08T03:14:53Z",
    "body": "Windows環境で試す人の踏みそうなトラブルシューティング\n\n西尾も角野さんもMacなのでどんなトラブルが起きるのかを観測できてない感、issueでもslackでもガンガン書いてもらえるといいと思う\n\nWindows環境で試すとなった時に、まずいきなり「生環境でやる」「WSLでやる」「Dockerでやる」の3つの選択肢があると思ってて、どれが一番スムーズなのかはよくわかってない、Windows環境のある人の協力があるとありがたいゾーン\n\n関連Slack: https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1744081553571589",
    "type": "issue"
  },
  {
    "id": 2978478982,
    "number": 253,
    "title": "[FEATURE]静的HTML出力してローカルファイルシステムで開いたときに詳細なエラー表示をする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/253",
    "user": "nishio",
    "created_at": "2025-04-08T03:13:48Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\nQ: 静的HTML出力してローカルファイルシステムで開いたとき読み込み中のまま進まない、バグ？\nA: →ブラウザがデータをローカルファイルシステムから読めないことに起因する、GitHubPagesなどにデプロイしちゃえば動くと思う、手元でサーバを立てるてもある、解説があるとベター\n\n関連Slack: https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1744080063900439\n\n# 提案内容\n\nこの件は読み込み中のバーが回りっぱなしになるが裏では即座にエラーになってるはずで、エラーメッセージを出して解決策解説ページへのリンクを示すのが親切だと思う\n\n",
    "type": "issue"
  },
  {
    "id": 2978426960,
    "number": 250,
    "title": "[FEATURE]階層図で一番下まで到達した時には原文を見せても良いのではないか",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/250",
    "user": "takahiroanno",
    "created_at": "2025-04-08T02:23:21Z",
    "body": "# 背景\n\nより情報量を増やしたい。原文を確認できるとより情報量が増えるなと思った。\n![Image](https://github.com/user-attachments/assets/52f7591f-1d06-419b-97a3-2e0e382c2d46)\n\n↑ご覧のように画面がスパースになる\n\n- Xなど、利用規約的に出すことができないものはその旨を表示すると良いと思う\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2974877378,
    "number": 243,
    "title": "初期設定時のentrypoint.shエラー",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/243",
    "user": "nasuka",
    "created_at": "2025-04-06T11:02:11Z",
    "body": "## バグの内容\n初期設定時にentrypoint.shエラーが出たため、ChatGPTに解決策を聞いたものとなります。\nhttp://localhost:3000/　http://localhost:4000/のページは見れるようになりました。\n環境がWindows10で、PowerShell 5.xです。\n\n【エラー内容①】\nclient-1 exited with code 0\n/entrypoint.sh: line 5: syntax error: unexpected \"fi\" (expecting \"then\")\n\n●エラーの意味：\nclient（レポート表示画面）の起動時に、entrypoint.sh という起動スクリプトの中に文法ミスがあります\n\n正確には：\nif 文が書いてあるけど、その中に then がない\nそのまま fi（if の終わり）に到達して、エラーになってる\n\n●修正案１（？）\nif [ \"$NODE_ENV\" = \"production\" ]; then\n  npm run start\nelse\n  npm run dev\nfi\n\n●修正案２（？）\n#!/bin/sh\n# 起動時に全て削除した上でbuildしなおす\nif [ -d \".next\" ]; then\n  rm -rf .next\nfi  \n\n# build時にAPIサーバーを参照するため、APIサーバーの起動を待ってからbuildを行う\nnpm run build\nexec npm run start\n\n●修正案３（？）\nWindowsメモ帳が改行コードをCRLF（\\r\\n）にしてしまうせいで、Docker内で「: not found」や syntax error: unexpected \"fi\" が出る。\n✅ 対処方法（メモ帳ユーザーでもOK）\nPowerShellで改行コードをLFに変換する（推奨）\n以下を PowerShell で kouchou-ai フォルダ内で実行：\n＜PowerShell＞\n手順１（PowerShell 7.x対応）\ncd ~\\kouchou-ai\n(Get-Content .\\client\\entrypoint.sh) -join \"`n\" | Set-Content -NoByteOrderMark -Encoding utf8 .\\client\\entrypoint.sh\n\n手順１修正版コマンド（PowerShell 5.x対応）\n(Get-Content .\\client\\entrypoint.sh) -join \"`n\" | Set-Content -Encoding UTF8 .\\client\\entrypoint.sh\n手順２\ndocker-compose down\ndocker-compose up --build\n\n\n\n\n\n\n【エラー内容②】\nclient-1 | ./entrypoint.sh: line 1: ﻿#!/bin/sh: not found\nこの「﻿」は見えないBOM文字。Windowsのメモ帳で保存した .sh ファイルはUTF-8 with BOMになりやすい。\n手順１：entrypoint.sh の最初の行のBOMを完全に除去する\n●修正案②ー１（PowerShell 7.x対応）\nGet-Content .\\client\\entrypoint.sh | Out-File -Encoding ASCII -NoNewline .\\client\\entrypoint.sh\n●修正案②ー２（PowerShell 7.x対応）\nGet-Content .\\client\\entrypoint.sh | Set-Content -Encoding UTF8 -NoByteOrderMark .\\client\\entrypoint.sh\n●修正案②ー３（PowerShell 5.x対応）\n[System.IO.File]::WriteAllLines('.\\client\\entrypoint.sh', [System.IO.File]::ReadAllLines('.\\client\\entrypoint.sh'), (New-Object System.Text.UTF8Encoding($false)))\n\n\n手順２：フルリセットして再起動\ndocker-compose down --volumes --remove-orphans\ndocker-compose build --no-cache\ndocker-compose up\n\n\n---\nこちらのイシューはGoogle Form経由で投稿されたものです",
    "type": "issue"
  },
  {
    "id": 2974667369,
    "number": 241,
    "title": "[FEATURE]おすすめクラスタ数設定機能",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/241",
    "user": "nishio",
    "created_at": "2025-04-06T03:54:15Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n>yuneko\n意見グループ数(クラスタ数)をどのくらいで試せばいいのか、目安が知りたいです。この件数(列数)だとまずこれにするといいよというのがわかると、お試しで自分のデータを試したときに、うまく行ったなという感覚になりやすい気がします。\nNISHIO Hirokazu\n模索段階ではあるんですけど漠然と思ってることとしては、データが1000件あるなら10→100にするのが良さそうという感じです\n8000件だったら20→400、125件だったら5→25\n∛1000=10ということです。\nその理屈でいうとサンプルの400件のデータは7→50がいい気がしましたが、今の5→50と7→50に変えたのとでどちらが良いのかを雰囲気ではなくちゃんと科学的根拠を持って言えるようになるといいなぁと思ってて、その研究の緊急度が低くて放置されていますw\nyuneko\nいいレポートを明らかに評価できると嬉しいですね。(嬉しいけど放置はされそう)\nヒューリスティクスでも少し評価できるなら、一定の初期値で固定しておくより、できるならコメントの件数によって勝手にクラスタ数を変更する(例えば∛の切り捨てとか)にした方がユーザーフレンドリーかもと思いました。もしくは、おすすめクラスタ数を選択したら、勝手にいい感じのクラスタ数に変更するなど。\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n\n案0: READMEに書く\n\n案1: CSVアップロード後に「おすすめクラスタ数設定 7→50 [button: この設定にする]」みたいな表示を出す\n \n問題点\n- Google Spreadsheetから読むのってクライアントサイドだったかな... サーバサイドで読むまでデータ量がわからないのだとするとこの方法では無理\n- 一旦Google Spreadsheetは無視すると言うのも手\n\n案2: パラメータを変えて再分析する機能ができた後なら、前の分析の情報を使っておすすめを出すことができるかも？",
    "type": "issue"
  },
  {
    "id": 2974091165,
    "number": 236,
    "title": "[FEATURE] パブコメモードに回答案を追加する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/236",
    "user": "ei-blue",
    "created_at": "2025-04-05T09:48:05Z",
    "body": "# 背景\n- 実際のパブコメの運用においては、意見概要と、意見に対する考え方がセットになって公開されている。\n- （あくまでも草案としての）回答案があらかじめ記入してあると、一から記載するよりも職員の負担が減るのではないか。\n- 最初は一般論としての回答からはじめ、最終的にはRAGで公式文書を参照して回答できるようにしたい。\n\n# 提案内容\n- 回答案作成用プロンプトを用意する\n- パブコメモードに「回答案作成」というオプションをつける\n- CSVファイルに回答を追加\n\nRAG対応の構成も追って考えていきたいので、意見・提案があればお願いします",
    "type": "issue"
  },
  {
    "id": 2973973916,
    "number": 235,
    "title": "[DOCUMENT] README に GitHub Pages で公開する手順を記載する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/235",
    "user": "shgtkshruch",
    "created_at": "2025-04-05T07:07:57Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- client を static build して GitHub Pages で公開する場合、ビルドしたファイルをアップロードすると一部のコードが動かない\n  - 原因: GitHub Pages で動いている Jekyll が `_` から始まるファイルやディレクトリを無視するため、static build 後の `_next` 以下のファイルが 404 になる\n    - https://github.blog/news-insights/the-library/bypassing-jekyll-on-github-pages/\n  - `.nojekyll` というファイルをルートに置くと動くようになるが、この挙動は知らない人が多そうで GitHub Pages で公開する人が同じ罠にハマる可能性がある\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- README の静的ファイル出力のセクションに、GitHub Pages で公開する場合の手順を記載する\n  - ルートに `.nojekyll` ファイルを追加することもここに記載する",
    "type": "issue"
  },
  {
    "id": 2969624362,
    "number": 227,
    "title": "[FEATURE]設定画面について",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/227",
    "user": "nishio",
    "created_at": "2025-04-03T13:37:38Z",
    "body": "# 背景\n\n![Image](https://github.com/user-attachments/assets/bb76f174-3347-4e73-aeed-823e8f4272d1)\n最小クラスタは2以上。上が10でいいかは少し微妙で、2,5,10,25,50,100くらいの選択式がいいかもという気持ち\n閉じるボタンが文章に被んている件、見出しと説明が横並びなのを縦並びにすると良いかも\n「濃いグループの設定しかないので中に入れたらどうか」という話が以前悪化が、この設定によって濃いグループを選択できるかどうかが変わるのでそとにあるべき、将来的にはカラーバレットの設定などもここにはいるのかなと思う\n\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2966981395,
    "number": 223,
    "title": "[FEATURE]クライアント開発用のresultを公開",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/223",
    "user": "nishio",
    "created_at": "2025-04-02T16:36:49Z",
    "body": "# 背景\nクライアント開発用にAI処理済みのresultをどこかからダウンロードして配置できるようにしておけばAPIキーに課金しなくてもUIの開発に参加できる\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\ndata/statusも変更しないといけないのが少し面倒",
    "type": "issue"
  },
  {
    "id": 2966961605,
    "number": 222,
    "title": "[FEATURE]クラスタ数変更を直接入力可能にする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/222",
    "user": "nishio",
    "created_at": "2025-04-02T16:27:55Z",
    "body": "# 背景\n\n<img width=\"302\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/257a3fed-faab-4e86-ba90-8fd6c3126f42\" />\n\nデータが8000件とかある場合、20 > 400 とかにしたくなるわけだけど、現状では350回のクリックが必要では\n\n# 提案内容\n\nクラスタ数変更を直接入力可能にする",
    "type": "issue"
  },
  {
    "id": 2966119535,
    "number": 221,
    "title": "(情報整理)試行錯誤の負担を減らす",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/221",
    "user": "nishio",
    "created_at": "2025-04-02T11:45:10Z",
    "body": "とりあえず立てて、あとで詳細化します\n\nfrom 4/2定例\n>使うまでの準備工数に認識のギャップがある\n>プロンプトやクラスタ数等、様々なチューニングを行う必要があるが、その認識がない\n>試行錯誤の負担を減らす必要がある(& ドキュメント？)\n\n>自治体の典型的な使い方がわかったら型を示せる\n\n>100件、1000件とサンプリングする？→黙ってやると有害、確認ダイアログがあるといい\n\n- クラスタ数の変更はextraction, embeddingが終わった後のデータでスピーディにできる 関連: https://github.com/digitaldemocracy2030/kouchou-ai/issues/19\n- extractionの試行錯誤の負担を減らす仕組みが必要\n\n- いきなり1万件入れて1時間くらい待たされる →　https://github.com/digitaldemocracy2030/kouchou-ai/issues/11\n\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/241",
    "type": "issue"
  },
  {
    "id": 2966115761,
    "number": 220,
    "title": "[FEATURE] frontからstaticなHTMLファイルをexportしてDownloadできるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/220",
    "user": "takahiroanno",
    "created_at": "2025-04-02T11:43:27Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2965108490,
    "number": 218,
    "title": "[FEATURE]レポート一覧に作成日時を追加する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/218",
    "user": "ei-blue",
    "created_at": "2025-04-02T03:55:52Z",
    "body": "# 背景\n現状、レポート一覧ではレポート名でしか区別がつけられないが、\n- 同じ内容で複数回レポートを作成と区別がつかない\n- 作成したレポートがいつ時点までのアップデートを反映したものかわからない\n\nため、レポート作成日時があると便利なのではと思いました。\n\n# 提案内容\n以下は一案です。\n\n- レポート作成時にreport_status.jsonに日時を追加\n- レポート一覧ページでタイトルの下に日時を表示\n",
    "type": "issue"
  },
  {
    "id": 2927036222,
    "number": 84,
    "title": "[REFACTOR] フロントエンドのコードを Biome でフォーマットをする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/84",
    "user": "shgtkshruch",
    "created_at": "2025-03-18T03:59:30Z",
    "updated_at": "2025-04-06T07:10:41Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- この issue のスコープとしては、フロントエンドに関わる client, client-admin, utils/dummy-server を想定しています\n- コードの formatter が導入されていないため、開発者によってコードの書き方（ex. 改行、スペースの入れ方）に差分出てくる可能性がある\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n- フロントエンドで広く利用されている [prettier](https://prettier.io/) を導入して、コードのフォーマットを自動化する\n  - 一部 ESLint でフォーマットのチェックをしているところも prettier に寄せたい気持ちです\n    https://github.com/digitaldemocracy2030/kouchou-ai/blob/c0a10e33f3f0ea458525a19a55a887b3f3f4792b/client/eslint.config.mjs#L16-L20\n    https://github.com/digitaldemocracy2030/kouchou-ai/blob/c0a10e33f3f0ea458525a19a55a887b3f3f4792b/client-admin/eslint.config.mjs#L16-L20\n  https://github.com/digitaldemocracy2030/kouchou-ai/blob/c0a10e33f3f0ea458525a19a55a887b3f3f4792b/utils/dummy-server/eslint.config.mjs#L16-L20\n- pre-commit or pre-push hook などで prettier を実行する仕組みを導入して、フォーマットされたコードが GitHub に push されるようにする\n  - これを実現するツールとしては [husky](https://github.com/typicode/husky) や [lefthook](https://github.com/evilmartians/lefthook) などがありますが、個人的には実行のパフォーマンスと設定のシンプルさから lefthook が良いかなと思っています",
    "type": "issue"
  },
  {
    "id": 2893959131,
    "number": 19,
    "title": "[FEATURE]レポートの複製・再利用機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/19",
    "user": "nasuka",
    "created_at": "2025-03-04T11:38:39Z",
    "updated_at": "2025-04-03T11:52:09Z",
    "body": "# 背景\n* 設定を少しだけ変えて実行したいケースがある\n  * 例えばクラスタ数だけ変えるなど\n\n\n# 提案内容\n* レポートの設定複製機能を実装する\n",
    "type": "issue"
  },
  {
    "id": 2979794061,
    "number": 265,
    "title": "第一階層のクラスタ数の上限を緩和",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/265",
    "user": "nasuka",
    "created_at": "2025-04-08T13:24:30Z",
    "merged_at": "2025-04-08T14:03:13Z",
    "body": "# 変更の概要\r\n- (admin) 第一階層のクラスタ数上限を10 -> 20に緩和\r\n  - これに合わせて、第二階層のクラスタ数下限を、`第一階層のクラスタ数 * 2` に変更\r\n  - 条件に合致しない（下回る）場合は第二階層のクラスタ数が自動で下限に調整される & メッセージが表示される（gif参照）\r\n- (client) 散布図のカラーバリエーションを8種類 -> 20種類まで追加\r\n\r\n![acd132c150b21a9a813d7fe7f92e81e9](https://github.com/user-attachments/assets/71d995c8-e179-43b7-ba74-06a531a153b3)\r\n\r\n20件のクラスタを可視化した例\r\n![image](https://github.com/user-attachments/assets/d3d5467a-51c0-436e-87ee-50a4cbdf15ef)\r\n\r\n\r\n\r\n# 変更の背景\r\n* 第一階層のクラスタ数上限が10になっていたが、これだと少なすぎるケースがある\r\n  * TTTCの過去事例だとクラスタ数を30に出力しているケースもある\r\n    * 参考: https://broadlistening.seisakukikaku.metro.tokyo.lg.jp/20250131/index.html\r\n  * 上限クラスタ数は出来ればもう少し緩和したかったが、クラスタ数が増えすぎると散布図が見にくくなる問題があるため、一旦今回のPRでは20に設定している\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/257\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 88,
    "deletions": 35,
    "changed_files": 2,
    "type": "pr"
  },
  {
    "id": 2979660696,
    "number": 263,
    "title": "client の package-lock.json に差分が出る課題の修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/263",
    "user": "shgtkshruch",
    "created_at": "2025-04-08T12:36:06Z",
    "merged_at": "2025-04-08T13:36:26Z",
    "body": "# 変更の概要\r\n- `npm i` 実行後に client の package-lock.json で差分が出ないようにしました\r\n- 新たに client に追加されたコードに Biome のフォーマットを適用しました\r\n\r\n# 変更の背景\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/pull/247/commits/3a7ad517ed90b3a121dd835fbb93d6d1c00277f5 の commit で ESLint を削除する修正がデグレしていたのでもとに戻しました\r\n- Biome のコードフォーマットをチェックする CI があっても良さそうなので、この後 issue だけ作ろうと思います 📝 \r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 320,
    "deletions": 3292,
    "changed_files": 5,
    "type": "pr"
  },
  {
    "id": 2979635707,
    "number": 262,
    "title": "client-admin に Biome を適用",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/262",
    "user": "shgtkshruch",
    "created_at": "2025-04-08T12:26:20Z",
    "merged_at": "2025-04-09T01:02:00Z",
    "body": "# 変更の概要\r\n- client-admin に Biome を適用しました\r\n\r\n# 変更の背景\r\n- 差分が大きいのでコミット単位でみていただけると良さそうです\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/4af790cd4bd43d37ea6ef118c9fad9b57fc33541 ESLint を削除\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/0e9e28da0793a9e2d03b6949caf5c632822e1f2b npm script に Biome のコマンドを追加\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/680a97801f1e5bef81c846ba4c3230627ce89869 Biome の format を適用（自動で修正できるもののみなので、コードの構造は変わっていない認識です）\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/d6bd0b4da71079b7437ad0f1082263f66a7bcc4c 自動で直せない format, lint エラーを修正（ここは手動で対応したので見てもらいたいところです）\r\n\r\n# 関連Issue\r\n- #84 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1173,
    "deletions": 4101,
    "changed_files": 32,
    "type": "pr"
  },
  {
    "id": 2979454383,
    "number": 261,
    "title": "Azure Blob Storageにローカルのレポートをuploadするscript",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/261",
    "user": "nishio",
    "created_at": "2025-04-08T11:13:03Z",
    "merged_at": "2025-04-08T12:23:08Z",
    "body": "# 変更の概要\r\n- Azure Blob Storageにローカルのレポートをuploadするscriptを追加した\r\n- 実環境で動作確認済み\r\n\r\n# 変更の背景\r\n- Azure Blob Storage導入後に生成されたレポートは永続化されるが、それ以前のものは別途Azure Blob Storageに入れる必要があるため\r\n\r\n# 関連Issue\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/260\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 541,
    "deletions": 0,
    "changed_files": 4,
    "type": "pr"
  },
  {
    "id": 2979232117,
    "number": 259,
    "title": "Azure.mdに環境変数の説明を追記",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/259",
    "user": "nasuka",
    "created_at": "2025-04-08T09:48:37Z",
    "merged_at": "2025-04-08T11:45:26Z",
    "body": "# 変更の概要\r\n* Azure.md内部に、Azure環境固有の環境変数について説明を追記\r\n  * 概要、設定例、許容される命名規則（文字）について追記\r\n* コンテナが停止するとレポートが削除される記載を削除 \r\n  * ストレージ連携でデータの永続化が実現したため\r\n\r\n# 変更の背景\r\n* ユーザー側でどのような名称を設定すべきか・どのような命名規則が許容されるのかわからないことがある\r\n  * 参考: https://github.com/digitaldemocracy2030/kouchou-ai/pull/228#issuecomment-2785746069\r\n    * >  ここでnaming conventionが分からなかったので調べた>>>\r\n\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 71,
    "deletions": 10,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2978849514,
    "number": 258,
    "title": "Fix: 静的ビルド時のパーミッションエラー修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/258",
    "user": "nishio",
    "created_at": "2025-04-08T07:20:09Z",
    "merged_at": "2025-04-08T13:42:37Z",
    "body": "# 静的ビルド時のパーミッションエラー修正\r\n\r\n## 問題\r\n静的ファイル出力（static build）を行う際、2回目以降にパーミッションエラーが発生する問題を修正しました。\r\nDockerコンテナ内でrootユーザーとしてファイルが生成されるため、ホスト側の通常ユーザーが`rm -rf out`でファイルを削除できなくなっていました。\r\n\r\n## 解決策\r\nDockerコンテナ起動時にホストと同じユーザーIDを指定する方法（ユーザー指定アプローチ）を実装しました。\r\n`docker compose run`コマンドに`--user $(shell id -u):$(shell id -g)`オプションを追加することで、\r\n生成されるファイルの所有者がホストユーザーになり、パーミッションエラーが発生しなくなります。\r\n\r\n## メリット\r\n- 根本的な解決策（原因を解決）\r\n- 生成されるファイルの所有者が最初からホストユーザーになる\r\n- セキュリティ的に優れている（最小権限の原則に従う）\r\n\r\nFixes #225\r\n\r\nLink to Devin run: https://app.devin.ai/sessions/b996b4b929424c5788a064bcafebf242\r\nRequested by: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2978728308,
    "number": 256,
    "title": "「パブコメモード」という名称を「CSV出力モード」に変更",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/256",
    "user": "ei-blue",
    "created_at": "2025-04-08T06:25:47Z",
    "merged_at": "2025-04-08T06:51:48Z",
    "body": "# 変更の概要\r\n- UI上及びコード上の説明において「パブコメモード」という言葉を「CSV出力モード」に変更\r\n- page.tsxのその他の変更は自動フォーマットによるもの\r\n\r\n# 変更の背景\r\n- 旧パブコメモードは元コメントと合わせてCSVでデータを出力する機能であり、必ずしもパブリックコメント分析だけに用途が限られるわけではないため。\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 19,
    "deletions": 19,
    "changed_files": 4,
    "type": "pr"
  },
  {
    "id": 2978450429,
    "number": 252,
    "title": "Fix issue #237: Add z-index to fullscreen chart container",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/252",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-08T02:46:13Z",
    "merged_at": "2025-04-08T08:14:59Z",
    "body": "全画面表示モードで背景要素が重なって表示される問題を修正しました。z-indexの設定が不足していたため、全画面表示用のコンテナに高いz-index値を追加しました。\n\nFixes #237\n\nLink to Devin run: https://app.devin.ai/sessions/9864e37baf8c414a882d0060f821be30\nRequested by: annyotaka@gmail.com",
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2976683462,
    "number": 249,
    "title": "client に Biome を適用",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/249",
    "user": "shgtkshruch",
    "created_at": "2025-04-07T12:21:33Z",
    "merged_at": "2025-04-08T11:41:37Z",
    "body": "# 変更の概要\r\n- client に Biome の lint と format を適用しました\r\n\r\n# 変更の背景\r\n- 差分が大きいので、コミット単位で見ていただけると良さそうです\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/ba19407ed69f2ca7d31eecdcf20aabb37bb1be15 ESLint を削除 \r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/6a641bfa8d9de8c97c6f4ddb15923fd40d482815 npm scirpt に Biome のコマンドを追加\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/f341c4db5bbc30e6744d937c3a1ebc8345304f38 Biome の format を適用（自動で修正できる分なので、コードの構造は変わっていない認識です）\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/3cae15cae82f203bb147a796eafd3af76371d1d8 自動で直せない format, lint エラーを修正（ここは手動でやっているので見てもらいたい部分です）\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/commit/4cfbfb7d2ffb379ffa5f2f054d1ba564691ae24e プロジェクトルートに Biome を追加したので、setup script でもルートで `npm install` する処理を追加\r\n- 動作確認したこと\r\n  - `npm run dev` でブラウザで動作すること\r\n  - `npm run build`, `npm run build:static` がエラーなく終了すること\r\n  \r\n# 関連Issue\r\n- #84 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 2070,
    "deletions": 4995,
    "changed_files": 55,
    "type": "pr"
  },
  {
    "id": 2976332198,
    "number": 247,
    "title": "[FEATURE] client/client-adminのテストをGitHub Actionsで実行する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/247",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-07T10:05:13Z",
    "merged_at": "2025-04-08T11:59:59Z",
    "body": "Issue #219 を解決します。\n\n# 変更内容\n- clientとclient-adminにJestのセットアップを追加\n- ユーティリティ関数（getApiBaseUrl, getClusterNum）のテストを実装\n- GitHub Actionsで自動テスト実行するためのワークフローを追加\n\n# 検証方法\n- ローカルでテストを実行し、パスすることを確認\n- PR作成後、GitHub Actionsが正常に実行されることを確認\n\nClose #219\n\nLink to Devin run: https://app.devin.ai/sessions/e3d45689784648ae809350c5a927f2ee\nRequested by: annyotaka@gmail.com",
    "additions": 13142,
    "deletions": 1633,
    "changed_files": 13,
    "type": "pr"
  },
  {
    "id": 2976319344,
    "number": 245,
    "title": "[FEATURE] レポート一覧に作成日時を追加する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/245",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-07T10:00:47Z",
    "merged_at": "2025-04-09T01:09:47Z",
    "body": "Issue #218 の対応: レポート一覧に作成日時を追加しました。\\n\\nLink to Devin run: https://app.devin.ai/sessions/b13628010677450a813d14ed748a51ca\\nRequested by: annyotaka@gmail.com",
    "additions": 9,
    "deletions": 0,
    "changed_files": 4,
    "type": "pr"
  },
  {
    "id": 2974802791,
    "number": 242,
    "title": "Biome の追加と dummy-server にフォーマットを適用",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/242",
    "user": "shgtkshruch",
    "created_at": "2025-04-06T08:41:59Z",
    "merged_at": "2025-04-06T22:19:16Z",
    "body": "# 変更の概要\r\n- Biome をプロジェクトルートにインストールしました\r\n  - Biome の設定は [idobata-analyst](https://github.com/digitaldemocracy2030/idobata-analyst/blob/main/biome.json) を参考にしつつ、ベーシックなものを設定しています\r\n- utils/dummy-server を ESLint -> Biome に置き換えてフォーマットを適用しました\r\n- VS Code の workspace settings 用のファイルを追加しました\r\n\r\n# 変更の背景\r\n- client, client-admin, utils/dummy-server で共通した設定を使うために、プロジェクトルートに Biome をインストールしました\r\n  - 既存の PR とコンフリクトしにくそうなのと、Biome の動作確認も兼ねて utils 以下にフォーマットを適用しました\r\n  - client, client-admin は後続の PR で対応するので、一旦 biome.json の ignore に追加しています\r\n  - server は Python のコードになるので ignore にしています\r\n- npm workspace 化するか迷ったのですが、もとの issue からスコープが大きくなりそうかなと思ったので、一旦やめておきました（対応した方がよければ合わせて対応するのでコメントいただけると :pray: ）\r\n\r\n# 関連Issue\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/84\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 566,
    "deletions": 4291,
    "changed_files": 15,
    "type": "pr"
  },
  {
    "id": 2974658733,
    "number": 240,
    "title": "clientの一覧画面でISRを有効化",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/240",
    "user": "nasuka",
    "created_at": "2025-04-06T03:30:36Z",
    "merged_at": "2025-04-06T22:18:01Z",
    "body": "# 変更の概要\r\n* clientの一覧画面でISRを有効化\r\n  * 5分毎に更新を実施\r\n  * これにより、作成した新規のレポートが一覧画面に表示されるようになった\r\n\r\n# 変更の背景\r\n* clientの一覧画面においては、ISRが設定されておらず、新規のレポートを作成してもbuildを再実行しないかぎり一覧画面に反映されなかった\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/212\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 3,
    "deletions": 0,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2974652077,
    "number": 239,
    "title": "「意見が含まれるコメント数」 -> 「コメント数」に文言を修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/239",
    "user": "nasuka",
    "created_at": "2025-04-06T03:13:37Z",
    "merged_at": "2025-04-06T03:26:34Z",
    "body": "# 変更の概要\r\nAnalysis上で、「意見が含まれるコメント数」 -> 「コメント数」に文言を修正\r\n\r\n# 変更の背景\r\n* 実装の実態として、「意見が含まれるコメント数」ではなく元データ内の単純な「コメント数」を計算しており、文言と実態が合っていない\r\n* また、件数を表示するうえでも、入力データ全体の件数が表示されている方が自然\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/238\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2973798076,
    "number": 234,
    "title": "意見グループ（クラスタ）数の値の変更を直接入力でも可能にする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/234",
    "user": "shingo-ohki",
    "created_at": "2025-04-05T03:14:43Z",
    "merged_at": "2025-04-06T00:09:11Z",
    "body": "# 変更の概要\r\n- タイトルの通り\r\n- 並列実行数についても見た目を揃えるために同様に修正\r\n\r\n# スクリーンショット\r\n![Screenshot from 2025-04-05 12-06-44](https://github.com/user-attachments/assets/7ea283c1-f25d-405a-a30e-ba8a298ecd97)\r\n\r\n# 変更の背景\r\n現状では大きく値を変更しようとするとボタンをたくさん押す必要があってユーザーに負担がかかるため\r\n\r\n# 関連Issue\r\n#222 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 78,
    "deletions": 21,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2971926630,
    "number": 233,
    "title": "[FEATURE]レポートの公開/非公開状態の設定 (#229)",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/233",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-04T10:14:57Z",
    "merged_at": "2025-04-07T07:25:13Z",
    "body": "# [FEATURE]レポートの公開/非公開状態の設定 (#229)\n\nこのPRでは、広聴AIのレポートの公開/非公開状態を切り替える機能を実装しています。管理者はレポートごとにトグルスイッチで公開/非公開を設定でき、公開中のレポートのみがクライアント側で表示されます。\n\n変更内容:\n- レポートスキーマに公開/非公開フラグを追加\n- APIエンドポイントで公開/非公開状態を切り替える機能を追加\n- クライアント側のエンドポイントで公開レポートのみを返すよう修正\n- 管理画面にトグルスイッチを追加\n\nLink to Devin run: https://app.devin.ai/sessions/5934f18249994900886ec0abe2360456\nRequested by: annyotaka\n",
    "additions": 79,
    "deletions": 10,
    "changed_files": 7,
    "type": "pr"
  },
  {
    "id": 2971908072,
    "number": 232,
    "title": "Implement report deletion feature (issue #230)",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/232",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-04T10:08:38Z",
    "merged_at": "2025-04-08T11:55:39Z",
    "body": "This PR implements the report deletion feature as described in issue #230.\n\n## Changes\n- Added DELETED status to ReportStatus enum\n- Created a new DELETE endpoint in admin_report.py\n- Modified report_status.py to filter deleted reports\n- Updated client-admin UI to enable report deletion\n\nFixes #230\n\nLink to Devin run: https://app.devin.ai/sessions/dc95c7c8dabb4dd7b02bdf6a4544c1fc\nRequested by: annyotaka@gmail.com",
    "additions": 57,
    "deletions": 7,
    "changed_files": 4,
    "type": "pr"
  },
  {
    "id": 2970065492,
    "number": 228,
    "title": "Azure Blob Storage連携機能の実装",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/228",
    "user": "nasuka",
    "created_at": "2025-04-03T16:01:04Z",
    "merged_at": "2025-04-08T09:04:48Z",
    "body": "# 変更の概要\r\n* Azure Blob Storageと連携する機能を実装し、Azure Container Apps環境においてレポート等のデータの永続化を実現した\r\n* アプリケーションコード・テストの実装と、Azureインフラ構築スクリプトの追加を実施した\r\n\r\n\r\n## 実装概要\r\n\r\n* レポート作成完了時に、当該レポートに関する生成物とreport_status.jsonをストレージにアップロードする\r\n  * 中間ファイルや最終的なresultファイルなど、当該レポートのoutputsディレクトリの配下にある全てのファイルをアップする\r\n* アプリ起動時にストレージから全レポートのファイル（outputs）とreport_status.jsonをダウンロードする\r\n  * レポートに関するファイルについては、jsonファイルのみダウンロードしている\r\n    * 中間生成物までDLするとサイズが重くなってしまい、結果の描画にはresult等のjsonがあれば十分なため\r\n\r\n\r\nまた、Azure Blob Storageの活用に伴って、Azureインフラ構築で以下のプロセスを追加している。\r\nこれにより `make azure-setup-all` でストレージの構築・連携を実現している。\r\n\r\n1. ストレージの作成（azure-create-storage）\r\n2. api containerへのマネージドIDの付与(azure-assign-managed-identity)\r\n2. api コンテナからストレージへのアクセス権限の付与(azure-assign-storage-access)\r\n\r\n\r\nContainer Appsからストレージへの認証は2種類あるが、今回はセキュリティが堅牢なMicrosoft Entra ID（旧Azure AD）による認証を採用\r\n\r\n参考:\r\nhttps://claude.ai/share/c6c6521f-f2aa-4088-b227-2864afa5c6df\r\n\r\n## 注意点\r\n* 本機能の実装によって、機能搭載後に出力したレポートはストレージ上に保存されますが、それ以前に出力したレポートは保存されません\r\n* 以前に出力したレポートを同期したい場合は以下の手順で同期することができます\r\n  * 1.レポート・ステータスファイルを以下のスクリプトで既存のアプリからexportする\r\n    * https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/scripts/fetch_reports.py\r\n  * 2.ステータスファイル・レポートの生成物をAzure Blob Storageに配置する\r\n    * 事前にストレージを作成しておく必要があります。`make azure-setup-all` で構築した場合は、一通り環境を構築した後に配置する必要があります。\r\n    * ファイルは以下の様に配置する必要があります\r\n      * レポートの関連ファイルは `outputs/{slug}` 配下に配置（ローカル環境と同じ）\r\n      * ステータスファイルは `status/report_status.json` として配置\r\n  * 3.apiコンテナの再起動\r\n    * ストレージからのファイル同期はAPIの起動時にのみ行われているため、apiコンテナを再起動する必要があります\r\n    * コンテナの再起動は `make azure-api-restart` で実行できます\r\n\r\n![image](https://github.com/user-attachments/assets/676de31c-b8a4-4a00-8140-771ed2cdf2ef)\r\n\r\n\r\n# 変更の背景\r\nAzure環境において、Container Appsでアプリケーションを動かした場合にデータの永続化ができず、レポートが消失してしまう問題があった\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/46\r\n\r\n# 動作確認結果\r\n\r\n- [x] 作成されたレポート関連ファイルおよびreport_statusが外部ストレージにアップされる\r\n- [x] apiのコンテナを停止 -> 再起動し、ストレージに保存されたファイルが再起動後のapiコンテナに同期されている\r\n- [x] STORAGE_TYPEが `local` or 設定されていない場合に問題なくレポート出力が実行できる\r\n- [x] `make azure-setup-all` で、Azure Blob Storage含めて全てのインフラが構築できる\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1460,
    "deletions": 30,
    "changed_files": 20,
    "type": "pr"
  },
  {
    "id": 2968531540,
    "number": 226,
    "title": "add column selection",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/226",
    "user": "ei-blue",
    "created_at": "2025-04-03T06:57:26Z",
    "merged_at": "2025-04-04T06:07:55Z",
    "body": "# 変更の概要\r\n- csv/スプレッドシートのアップロード/取得時にカラム名の一覧を取得してドロップダウンを作成\r\n- commentという名前を探し、ある場合はデフォルトでそれを選択（なければ「選択してください」が表示）\r\n- /admin/reportsエンドポイントに渡すコメントデータはそこで指定されたカラムのデータが使われる\r\n<img width=\"884\" alt=\"Screenshot 2025-04-02 at 23 08 05\" src=\"https://github.com/user-attachments/assets/7b9a7381-593f-444b-9bf3-e55864713c86\" />\r\n<img width=\"906\" alt=\"Screenshot 2025-04-02 at 23 08 15\" src=\"https://github.com/user-attachments/assets/c3ff9fe8-9a08-4730-a525-ce468937d442\" />\r\n\r\n# 変更の背景\r\n- すでにあるデータを分析する際、カラム名を手動でcommentに変更する手間を省ける\r\n\r\n\r\n# 関連Issue\r\n- Close #116 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 132,
    "deletions": 31,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2967761436,
    "number": 224,
    "title": "クラスタ見出しをanchorにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/224",
    "user": "shgtkshruch",
    "created_at": "2025-04-02T23:22:45Z",
    "merged_at": "2025-04-03T00:13:54Z",
    "body": "# 変更の概要\r\n-  レポートの詳細ページのクラスターの見出しにリンクをつけました\r\n\r\nhttps://github.com/user-attachments/assets/a885796d-6fd5-44f5-b70e-49efdce7ff99\r\n\r\n# 変更の背景\r\n- リンクの href, id 属性は、URL から意味が把握しやすいと思ったので見出しの日本語の文字列を設定しています\r\n  - レポートの個別ページに同じ見出しのクラスターは出てこないことを前提にしているので、認識違いがあればコメントいただけると :pray:\r\n- クリックできるとわかりやすいように hover 時にアイコンを表示しました\r\n\r\n# 関連Issue\r\n- fix: #112\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 20,
    "deletions": 3,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2963002553,
    "number": 217,
    "title": "レポート出力の進捗を表示",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/217",
    "user": "101ta28",
    "created_at": "2025-04-01T10:25:00Z",
    "merged_at": "2025-04-03T04:16:20Z",
    "body": "close #13 \r\n\r\n# 変更の概要\r\n- レポート出力の進捗をダッシュボード上で把握できるようにするため\r\n\r\n![output](https://github.com/user-attachments/assets/e09a651e-ae4d-4eee-a099-43671adbcc8b)\r\n\r\n# 変更の背景\r\n#13 \r\n\r\n# 関連Issue\r\n#13 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x]  CLAの内容を読み、同意しました",
    "additions": 298,
    "deletions": 143,
    "changed_files": 3,
    "type": "pr"
  },
  {
    "id": 2978436805,
    "number": 251,
    "title": "[FEATURE] GoogleAnalytics 対応 #54",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/251",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-08T02:32:53Z",
    "body": "GoogleAnalyticsを実装しました。\n\n環境変数`NEXT_PUBLIC_GA_MEASUREMENT_ID`を追加し、client と client-admin の両方のアプリケーションでGoogleAnalytics 4のトラッキングコードを実装しました。\n\n開発環境では自動的にGAが無効になるよう実装しています。\n\nLink to Devin run: https://app.devin.ai/sessions/bf89d99cdeb94897a6a5085d8e34826e\nRequested by: annyotaka@gmail.com",
    "additions": 1000,
    "deletions": 0,
    "changed_files": 11,
    "type": "pr"
  },
  {
    "id": 2976337956,
    "number": 248,
    "title": "[FEATURE] レポートの複製・再利用機能 (Issue #19)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/248",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-07T10:07:21Z",
    "body": "このPRはIssue #19の実装です。レポートの設定を複製・再利用する機能を追加します。\n\n## 変更内容\n- 管理画面に「既存レポートの再利用」オプションを追加\n- 既存レポートの設定を取得するAPIエンドポイントを追加\n- レポート生成時に複製元のレポートの中間成果物をコピーする機能を追加\n\n## リンク\n- Issue: #19\n- Link to Devin run: https://app.devin.ai/sessions/7f69c1c5eace4259828fdcd2cce6f06a\n\n## 検証方法\n1. 管理画面で「既存レポートの再利用」を選択\n2. 既存レポートを選択して設定を読み込む\n3. 設定を変更して新しいレポートを作成\n4. レポートが正常に生成されることを確認",
    "additions": 231,
    "deletions": 7,
    "changed_files": 5,
    "type": "pr"
  },
  {
    "id": 2976324699,
    "number": 246,
    "title": "[FEATURE] 1回のextractionで複数のcommentを処理する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/246",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-07T10:02:28Z",
    "body": "# 複数コメントを1回のextraction処理で処理する\n\n## 概要\nIssue #190 の実装です。1回のLLMリクエストで複数のコメントを同時に処理できるようにしました。これにより、処理速度の向上とOpenAI APIのレート制限の問題の緩和が期待できます。\n\n## 変更内容\n- extractionPromptを更新し、複数コメントを一度に処理できるフォーマットに変更\n- extraction.pyにバッチ処理のロジックを実装\n- parse_json_list.pyを拡張し、新しいJSONレスポンス形式に対応\n\n## テスト\n- 短いコメント（ツイートレベル）と長いコメント（公開コメントレベル）の両方でテスト\n- 従来の方法と比較して処理速度の向上を確認\n\nLink to Devin run: https://app.devin.ai/sessions/c9d31459eaed4fe9bc2274aaf699d893\nRequested by: annyotaka@gmail.com\n",
    "additions": 360,
    "deletions": 65,
    "changed_files": 5,
    "type": "pr"
  },
  {
    "id": 2976318527,
    "number": 244,
    "title": "[FEATURE] おすすめクラスタ数設定機能の実装 (#241)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/244",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-07T10:00:36Z",
    "body": "Issue #241 の実装を行いました。\n\n- 案0: README.mdとhow_to_use/README.mdに推奨クラスタ数の情報を追加\n- 案1: CSVアップロード後に推奨クラスタ数設定UIを追加\n- 計算方法: コメント数の立方根(∛n)を基準に計算\n\nGoogle Spreadsheetの部分は無視しています。\n\nテスト手順:\n1. CSVファイルをアップロード\n2. 推奨クラスタ数が表示されることを確認\n3. 「この設定にする」ボタンで設定が適用されることを確認\n\nLink to Devin run: https://app.devin.ai/sessions/4edce5fbbb4241d3b2c60118e98d4b8d\nRequested by: annyotaka@gmail.com",
    "additions": 82,
    "deletions": 1,
    "changed_files": 3,
    "type": "pr"
  },
  {
    "id": 2971855106,
    "number": 231,
    "title": "Test PR: Dummy change for verification",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/231",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-04T09:52:59Z",
    "body": "This is a test PR to verify access to the repository and PR creation functionality.\n\nLink to Devin run: https://app.devin.ai/sessions/6da4c845527d479989142984f4c0e5b1\nRequested by: annyotaka@gmail.com",
    "additions": 2,
    "deletions": 0,
    "changed_files": 1,
    "type": "pr"
  }
]