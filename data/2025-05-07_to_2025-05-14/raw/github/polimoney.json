[
  {
    "id": 3056803021,
    "number": 56,
    "title": "test",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/56",
    "user": "moai-redcap",
    "created_at": "2025-05-12T12:29:32Z",
    "closed_at": "2025-05-12T12:30:07Z",
    "body": "## 解決・改善したいこと\n\n<!-- この提案はどのようなものかを説明してください。また、どのような人がどのように嬉しい提案なのかを、できればユーザーを主語にして記載してください。 -->\n\n<!-- 対象画面の URL や関連する議論や資料の URL があれば、添付いただけると理解の助けになります。 -->\n\n## 具体的な実現方法・実装方法の概要（未記入でも構いません）\n",
    "type": "issue"
  },
  {
    "id": 3055733505,
    "number": 53,
    "title": "Issue→projectsテスト",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/53",
    "user": "moai-redcap",
    "created_at": "2025-05-12T06:03:01Z",
    "closed_at": "2025-05-12T06:03:29Z",
    "body": null,
    "type": "issue"
  },
  {
    "id": 3014047468,
    "number": 18,
    "title": "issue templateを用意する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/18",
    "user": "adust09",
    "created_at": "2025-04-23T13:35:15Z",
    "closed_at": "2025-05-12T12:27:55Z",
    "body": "**目的**\n- 新規参加者(開発者)のオンボーディングコストを下げる\n- 多くの開発者間のコミュニケーションコストを下げる\n\n**実装イメージ**\nkouchou-aiのテンプレを使えそう\nhttps://github.com/digitaldemocracy2030/kouchou-ai/tree/main/.github/ISSUE_TEMPLATE",
    "type": "issue"
  },
  {
    "id": 3014036500,
    "number": 17,
    "title": "データ引用元のURLを貼る",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/17",
    "user": "adust09",
    "created_at": "2025-04-23T13:31:23Z",
    "closed_at": "2025-05-10T07:45:11Z",
    "body": "**目的**\n- ソースを知りたいユーザーのUXを向上させる\n- Polimoney自体の透明性を向上させる\n\n**実装イメージ**\n画像のハイライト部分をクリックするとソースに飛ぶようにする\n<img width=\"1031\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f68044c3-213f-4460-bea2-e26b9226e9f8\" />\n\n**参考**\n政治資金収支報告書データベースでは似たような機能が実装されている\nex: \nhttps://political-finance-database.com/politician_detail/1744011775449x224006594647899970",
    "type": "issue"
  },
  {
    "id": 3008285375,
    "number": 12,
    "title": "LICENSE / CLAを書く",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/12",
    "user": "takahiroanno",
    "created_at": "2025-04-21T12:09:03Z",
    "closed_at": "2025-05-12T12:27:58Z",
    "body": "diitaldemocracy2030/kouchou-ai に準拠で良い",
    "type": "issue"
  },
  {
    "id": 3056009101,
    "number": 54,
    "title": "TypeScriptのフォーマッターの導入",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/54",
    "user": "dotneet",
    "created_at": "2025-05-12T08:00:00Z",
    "body": "biomeかprettierを導入してコードフォーマットが個々の環境に依存しないようにしたいです。\n[kouchou-ai](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/biome.json) では biome 使ってますし、eslintをはずして biome にするのが良さそうな気がしますがどうでしょう。\n\n",
    "type": "issue"
  },
  {
    "id": 3055431257,
    "number": 51,
    "title": "CONTRIBUTING.mdを作成する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/51",
    "user": "adust09",
    "created_at": "2025-05-12T02:04:44Z",
    "body": "CONTRIBUTING.mdとはOSSへコミットする際のissue作成やPR作成の手順を記した文書である。\nissue templateやPR templateが[用意](https://github.com/digitaldemocracy2030/polimoney/pull/49)されたので、コントリビューションガイドも提供したい。\n\n参考：https://zenn.dev/wakamsha/articles/encouragement-of-contributing-guide",
    "type": "issue"
  },
  {
    "id": 3046163479,
    "number": 46,
    "title": "検索結果のサムネイルを差し替える",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/46",
    "user": "adust09",
    "created_at": "2025-05-07T14:27:14Z",
    "body": "検索結果一覧に表示されるサムネイルが出井さんになっている\n当プロジェクトを公共性の高いものとするために別の画像に差し替えることが望ましい。\n\n![Image](https://github.com/user-attachments/assets/addd73ff-f66d-4c54-931a-f5c4c83c1e95)\n\n以下のような点から議論をスタートすると良さそう\n\n- 現段階で適当なサムネ画像があるか？\n- 現在のOGP画像で代替するか？\n- サムネイルやアイコンを新規デザインするか？\n\n",
    "type": "issue"
  },
  {
    "id": 3036597936,
    "number": 41,
    "title": "対内外向け[資料露出]",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/41",
    "user": "cKinu",
    "created_at": "2025-05-02T18:30:00Z",
    "updated_at": "2025-05-12T12:29:02Z",
    "body": "**発進方法案**\n**発信の目的:**\n認知度向上による利用者数、ボランティア数の増加\n**フォーマル発信**\n- ターゲット\n> - ユーザー、ビューアー共に\n- 露出先\n> - PRTIMESや公式Youtube\n- 何を\n> - ポンチ絵と営業資料\n- 目的\n> - 国民の信頼につながる、政治献金につながる、手軽に導入できるための流入間口を広げる\n\n**カジュアル発信**\n- ターゲット\n> - ビューアーに絞る場合\n> > - 新規、ネームのみ認知あり、認知あり興味を深めたいの3層に分けて添付資料を変えて発信\n> > - デジ民2030の紹介は全てに必ず入れる\n- 露出先\n> - X?\n- 何を\n> - ビューアーの層に合わせ添付資料変更\n- 目的\n> - ボランティア数の増加\n> - 政治資金の関心深度とツール利活用の向上\n\n備忘\n営業資料は、メールで国会議員一括送信という手も詳細詰める",
    "type": "issue"
  },
  {
    "id": 3036586980,
    "number": 40,
    "title": "対内外向け[資料作成]",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/40",
    "user": "cKinu",
    "created_at": "2025-05-02T18:22:55Z",
    "updated_at": "2025-05-12T12:28:49Z",
    "body": "**改善施策として資料作成をする目的:**\n- 内からの訴求内容の一律\n- 外からのツールを見た上での解釈揃え\n\n**目標:**\n- ユーザー\n> - 国民の信頼につながる、政治献金につながる、手軽に導入できる\n- ビューアー\n> - 政治資金の関心深度とツール利活用の向上、推し活政治版（献金する）\n\n**Todo:**\n作成ツール: figma, GoogleSlide\n- [ ] ポンチ絵　プロジェクト向け\n- [ ] 営業資料　ユーザー向け\n- [ ] プレゼン資料　ビューアー向け\n\n**各種資料作成（イメージ案）**\nShimizuさんスライドとサイトを元に、必要ポイントをそれぞれにフォーカスした資料を作成\n- ポンチ絵\n> - 他のプロジェクトを踏襲し手書きなどの簡潔版\n> - 担当のアイコンと立ち位置図をマトリクス表にペタペタ\n- 営業資料（ユーザー向け）\n> - ユーザーに刺さるメリット\n> - 利用条件（スプシ使ってね）\n> - 導入事例（ストーリー仕立て）\n- プレゼン資料（ビューアー向け）\n> - ユーザーへのメリット\n> - 自分ごとに出来るような仕掛け\n> - ストーリー仕立て\n> - よくあるXの漫画広告形式とか？（推し活想定に因んで）",
    "type": "issue"
  },
  {
    "id": 3031392868,
    "number": 34,
    "title": "Pythonのlinter、formatterを導入する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/34",
    "user": "tdaira",
    "created_at": "2025-04-30T14:02:35Z",
    "updated_at": "2025-05-14T04:38:13Z",
    "body": "- linter、formatterを導入する\n- 型チェック等はまず入れてみて少しずつオプションを増やしていく方針にする",
    "type": "issue"
  },
  {
    "id": 3031310787,
    "number": 31,
    "title": "議論：収支報告書に不記載(裏金)の情報について",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/31",
    "user": "nanocloudx",
    "created_at": "2025-04-30T13:35:30Z",
    "updated_at": "2025-05-14T04:51:12Z",
    "body": "現時点のポリマネーは収支報告書に記載されている内容を見やすくすることを目的としている\n元データである収支報告書に記載されていないものは当然掲載することができない\n不記載(裏金)の情報に対するアプローチ（？）をどうするかという意見があった",
    "type": "issue"
  },
  {
    "id": 3031283768,
    "number": 29,
    "title": "E2E動作確認（つなぎこみ）",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/29",
    "user": "nanocloudx",
    "created_at": "2025-04-30T13:26:32Z",
    "updated_at": "2025-05-14T03:40:27Z",
    "body": "精度は悪くても良いので（OCR結果が間違っていることを許容して）、Gemini読み込みからHTML出力までを繋ぎこむ\n",
    "type": "issue"
  },
  {
    "id": 3022720107,
    "number": 25,
    "title": "devcontainerを設定する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/25",
    "user": "adust09",
    "created_at": "2025-04-27T04:40:52Z",
    "updated_at": "2025-05-13T05:42:17Z",
    "body": "# Devcontainerの導入\n\n## 概要\n開発環境の統一とセットアップの簡略化のため、devcontainerを導入する\n\n## 目的\n- チーム全員が同じ開発環境で作業できるようにする\n- 新規開発者のオンボーディングを簡略化する\n- CI/CD環境との一貫性を確保する\n\n## タスク\n- [x] `.devcontainer`ディレクトリの作成\n- [x] `devcontainer.json`の設定\n  - Node.js 20の環境設定\n  - 必要なVS Code拡張機能の設定\n  - 自動フォーマットの設定\n  - etc\n- [x] `Dockerfile`の作成\n- [x] READMEの作成",
    "type": "issue"
  },
  {
    "id": 3017813904,
    "number": 20,
    "title": "収支報告書のフォーマット調査",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/20",
    "user": "shumizu418128",
    "created_at": "2025-04-24T16:28:40Z",
    "updated_at": "2025-05-14T03:41:46Z",
    "body": "## 背景\n政治資金収支報告書は、提出先（各都道府県の選挙管理委員会、総務省）や報告主体（政党、資金管理団体、その他の政治団体など）によってフォーマットが異なることが分かっています。\n\nこのフォーマットの多様性は、OCRによる報告書の自動読み取りを進める上で大きな障壁となっています。\n\n## 目的\n\n- **フォーマットの網羅的調査**: 全国の都道府県、国レベルで提出される収支報告書、および団体の種類（政党本部・支部、資金管理団体、その他の政治団体等）によるフォーマットの違いを調査し、実例を収集します。\n\n- **パターン化・分類**: 収集したフォーマットを分析し、共通点、相違点、特有のレイアウトなどを特定し、体系的にパターン化・分類します。\n\n- **課題の理解深化**: 報告書フォーマットの現状を把握することで、データ化における技術的課題や、報告書作成者（政治家側）・利用者（国民側）双方にとっての潜在的な課題（分かりにくさ、比較の難しさ等）への理解を深めます。\n\n- **OCR精度向上の基盤構築**: 特定されたフォーマットパターン情報を、将来的なデータ抽出ロジックの改善に活用します。\n\n## 具体的なタスク\n\n- **情報収集**:\n  - 各都道府県の選挙管理委員会、総務省のウェブサイト等を調査し、公開されている政治資金収支報告書のPDFファイルや様式テンプレートを収集します。（例: 「〇〇県 政治資金収支報告書」、「総務省 政治資金収支報告書」等のキーワードで検索）\n\n- **フォーマット分析**:\n  - 収集した報告書の構成要素（表紙、収入、支出、資産等の各項目、明細書など）を確認します。\n  - レイアウト、記載項目、様式番号（例: 様式その〇〇）の違いを比較・分析します。\n  - 特にOCR処理で問題となりそうな箇所（罫線の有無・種類、手書き箇所の多さ、特有の注釈など）に注目します。\n\n※ なんとなくの感想程度で構いません。**ハイレベルな文を書くより、収支報告書とかいう謎文書の手ごわさを理解するほうが大事**だと思います。\n\n- **結果の整理・文書化**:\n  - 特定したフォーマットパターンごとに、特徴、出典（都道府県/国、団体種類、年度）、該当する様式のサンプル画像（またはファイルへのリンク）を整理します。\n\n整理した情報は、**[TODO: 記録先未定 提案募集中]** に記録します。\n\n---\n\nめっちゃGeminiに手伝ってもらいましたが、このissueは一応 @shumizu418128 自分で書いています。\n本件は私のタスクに直結するので、現時点で本件の主担当は私 @shumizu418128 です。\n\npolimoneyのコンセプトに対する理解への貢献、取り組みやすさの観点から、これはgood first issueになると思います。",
    "type": "issue"
  },
  {
    "id": 3014175992,
    "number": 19,
    "title": "OCR（画像認識）の精度強化",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/19",
    "user": "shumizu418128",
    "created_at": "2025-04-23T14:10:03Z",
    "updated_at": "2025-05-14T06:17:11Z",
    "body": "ただのメモ\n4/23現在、OCR・Geminiまわりの担当は清水のみです\n \n### なるべく処理ログを残す\n  - どの座標をどんな文字と認識したのか記録\n  - 合計金額を計算し記録（「小計」の活用）\n  - 手書き文字・訂正印が邪魔で読みにくい部分を記録\n  - 備考などのイレギュラー対策の検討\n  - 必要に応じて画像をトリミング\n\n目標：バグ発生時の迅速な対応を実現する\n\n### json形式の統一\n  - DBとのやりとりはPinさん担当なので相談する\n  - 上記処理ログ含め残したい\n\n\n[参考：4/23 ミーティングログ](https://docs.google.com/document/d/19Kn6ekK3twMVcVaSyUgptvmfzrXEJezA6GXTbPXjm9M/edit?tab=t.0)",
    "type": "issue"
  },
  {
    "id": 2990309670,
    "number": 5,
    "title": "議員からの掲載許可に基づくデータ表示制御（オプトイン・アウト）機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/5",
    "user": "Olemi-llm-apprentice",
    "created_at": "2025-04-12T07:24:22Z",
    "updated_at": "2025-05-09T07:51:38Z",
    "body": "**背景:**\nPolimoney プロジェクトで扱う政治資金収支報告書のデータは機微情報を含む可能性があり、分析結果や元データの公開にあたっては、関連する議員等からの掲載許可が必要となるケースが想定されます。許可が得られた情報のみを適切に公開し、許可が得られていない情報は非公開とする運用が求められます。\n\n**課題:**\n現在のシステム（データ処理パイプライン、および将来的な表示インターフェース）には、議員や団体ごとの掲載許可状況に基づいてデータの公開範囲を制御する仕組みがありません。このため、許可が得られたタイミングで迅速かつ正確に情報を公開したり、逆に許可が得られていない情報を確実に非公開にしたりすることが困難です。\n\n**提案:**\n議員や政治団体からの掲載許可状況に応じて、関連するデータの公開/非公開を制御できるオプトイン・アウト機能を実装します。\n\n1.  **許可ステータス管理:**\n    *   各議員や団体、あるいは分析対象のデータセット（例: 特定の収支報告書に対応する JSON データ）に対して、掲載許可の有無を示すステータス（例: `publication_approved: true/false`, `opt_in_status: granted/pending/denied` など）を管理する仕組みを導入します。\n    *   このステータスをデータ自体（例: JSON ファイル内）に含めるか、別途管理データベースを用意するかを検討します。\n2.  **ステータス更新プロセス:**\n    *   議員等から掲載許可が得られた、あるいは取り下げられた場合に、上記ステータスを更新するためのプロセス（手動更新、管理ツール、API など）を定義・実装します。\n3.  **表示ロジックへの反映:**\n    *   データを利用して情報を表示するコンポーネント（例: Web アプリケーション、分析レポート生成ツールなど）において、この許可ステータスをチェックし、許可されているデータのみを表示（オプトイン）、または許可されていないデータを非表示（オプトアウト）にするロジックを組み込みます。\n4.  **デフォルト状態の定義:**\n    *   許可ステータスが未設定の場合のデフォルトの挙動（デフォルトで公開か非公開か）を明確に定義します。（通常はデフォルト非公開が安全）\n\n**期待される効果:**\n\n*   議員等からの掲載許可が得られたデータのみを、迅速かつ適切に公開できるようになる。\n*   許可が得られていない情報の意図しない公開を防ぎ、コンプライアンスを遵守できる。\n*   プロジェクトの透明性と信頼性を高める。\n\n**担当者:** (任意)\n**ラベル:** enhancement, feature, compliance, data privacy\n",
    "type": "issue"
  },
  {
    "id": 2990308342,
    "number": 4,
    "title": "総務省ウェブサイトからの政治資金収支報告書PDF自動取得機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/4",
    "user": "Olemi-llm-apprentice",
    "created_at": "2025-04-12T07:21:37Z",
    "updated_at": "2025-05-14T06:02:32Z",
    "body": "**背景:**\n政治資金収支報告書の分析には、まず総務省のウェブサイトから対象となる報告書の PDF ファイルを入手する必要があります。現在は、以下のページから手動で目的の団体を探し、PDF をダウンロードする必要があります。\n\n*   参照サイト: [政治資金収支報告書（令和6年11月29日公表（令和5年分定期公表））](https://www.soumu.go.jp/senkyo/seiji_s/seijishikin/reports/SS20241129/)\n\nこの手作業は、特に多数の団体を対象とする場合、非常に時間がかかり非効率です。\n\n**課題:**\n\n*   総務省のウェブサイト構造を解析し、目的の団体の報告書 PDF へのリンクを特定する必要がある。\n*   ウェブサイトは団体種別（政党本部、政党支部、資金管理団体など）や、あいうえお順のインデックスで構成されており、目的の団体を見つけるために複数のページをナビゲートする必要がある場合がある。\n*   手動でのダウンロードは時間と手間がかかる。\n\n**提案:**\n総務省のウェブサイトをクローリングし、指定された条件に基づいて政治資金収支報告書の PDF ファイルを自動でダウンロードするスクリプト機能を追加します。\n\n1.  **ウェブスクレイピングの実装:**\n    *   Python ライブラリ（例: `requests`, `BeautifulSoup4`）を使用して、上記の総務省のウェブサイトを解析します。\n2.  **対象指定機能:**\n    *   コマンドライン引数や設定ファイルで、ダウンロード対象とする報告書の公表年、団体種別（政党本部、支部、資金管理団体、その他の政治団体）、特定の団体名などを指定できるようにします。\n3.  **リンク探索とダウンロード:**\n    *   指定された条件に基づき、ウェブサイトのリンクをたどり、該当する団体の報告書 PDF へのリンクを特定します。\n    *   特定したリンクから PDF ファイルをダウンロードし、分かりやすい命名規則（例: `報告年_団体名_種別.pdf`）で指定されたディレクトリに保存します。\n4.  **負荷への配慮:**\n    *   総務省サーバーへの過度な負荷を避けるため、リクエスト間に適切な待機時間（例: `time.sleep()`）を設けます。また、総務省の `robots.txt` や利用規約を尊重します。\n\n**期待される効果:**\n政治資金収支報告書 PDF の収集プロセスが自動化され、分析作業の準備にかかる時間と手間が大幅に削減される。\n\n**担当者:** (任意)\n**ラベル:** enhancement, web scraping, data acquisition, automation",
    "type": "issue"
  },
  {
    "id": 2990306052,
    "number": 3,
    "title": "Gemini API呼び出しの並列化とエラーハンドリング強化（レートリミット対応）",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/3",
    "user": "Olemi-llm-apprentice",
    "created_at": "2025-04-12T07:16:30Z",
    "updated_at": "2025-05-12T10:11:44Z",
    "body": "**背景:**\n`analyze_image_gemini.py` は、1枚ずつ画像を Gemini API に送信して解析を実行します。多数の画像ページ（PDFから変換されたものなど）を処理する場合、この逐次処理は全体の完了までに非常に長い時間がかかります。また、API 呼び出しはネットワークエラーや API 側のレートリミット（利用制限）などにより失敗する可能性があります。\n\n**課題:**\n\n1.  **処理時間の長さ:** 多数の画像を処理する際の全体的なスループットが低い。\n2.  **レートリミットエラー:** Gemini API のレートリミットに達した場合、処理が中断してしまう。\n3.  **一時的なエラー:** ネットワークの不安定さなどによる一時的なエラーが発生した場合、処理が失敗してしまう。\n\n**提案:**\nスクリプトのパフォーマンスと安定性を向上させるために、以下の改善を実装します。\n\n1.  **並列処理の実装:**\n    *   複数の画像解析リクエストを同時に Gemini API へ送信できるように、並列処理（マルチスレッド、マルチプロセス、または非同期処理）を導入します。Python の `concurrent.futures` や `asyncio` ライブラリの活用を検討します。\n    *   並列度（同時に実行するリクエスト数）を設定可能にし、実行環境や API の制限に応じて調整できるようにします。\n2.  **レートリミット対応:**\n    *   Gemini API からレートリミットエラー（例: HTTP 429 Too Many Requests）が返された場合に、処理を即座に中断するのではなく、一定時間待機してからリクエストを再試行するロジック（例: Exponential Backoff）を実装します。\n3.  **リトライ処理の強化:**\n    *   レートリミット以外の特定の一時的なエラー（ネットワークエラーなど）に対しても、リトライ処理を実装します。\n4.  **エラーハンドリングの改善:**\n    *   リトライしても最終的に失敗したリクエストや、その他の予期せぬエラーが発生した場合でも、全体処理が停止しないようにエラーハンドリングを強化します。失敗した画像とその理由を記録し、後で確認できるようにします。\n\n**期待される効果:**\n\n*   複数の画像ファイルを処理する際の全体的な実行時間が大幅に短縮される。\n*   API のレートリミットや一時的なネットワークエラーに対する耐性が向上し、スクリプトの安定性が向上する。\n*   エラーが発生した場合でも、成功した処理は維持され、失敗した処理を特定しやすくなる。\n\n**担当者:** (任意)\n**ラベル:** enhancement, performance, error handling, api\n",
    "type": "issue"
  },
  {
    "id": 3061725351,
    "number": 58,
    "title": "update readme",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/58",
    "user": "dotneet",
    "created_at": "2025-05-14T03:48:23Z",
    "merged_at": "2025-05-14T04:02:21Z",
    "body": "# 変更の概要\r\n<!-- ここに変更の概要を記載してください -->\r\n\r\nnpm install できないため",
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3055668669,
    "number": 52,
    "title": "reactのレンダリング時の警告修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/52",
    "user": "dotneet",
    "created_at": "2025-05-12T05:22:48Z",
    "merged_at": "2025-05-13T05:52:24Z",
    "body": "id: '14-2' が重複していて警告が出ていて気になったので修正です。\r\n<img width=\"437\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3f2cb58f-e561-4fcf-8f92-56308f124477\" />\r\n",
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3051349155,
    "number": 49,
    "title": "cla追加, プルリク & issueのテンプレート追加,  自己アサイン機能追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/49",
    "user": "moai-redcap",
    "created_at": "2025-05-09T08:00:53Z",
    "merged_at": "2025-05-12T12:25:55Z",
    "body": "cla.mdの追加、\r\nプルリク, issueそれぞれのテンプレートを追加しました。\r\nまた、/assignで自己assignできるようにしました。\r\n#12 \r\n#18 ",
    "additions": 124,
    "deletions": 0,
    "changed_files": 5,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3044366868,
    "number": 44,
    "title": "gemini 2.5 pro preview 05-26 導入",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/44",
    "user": "shumizu418128",
    "created_at": "2025-05-07T00:44:04Z",
    "merged_at": "2025-05-13T05:50:27Z",
    "body": "[geminiにアップデートが入りました](https://developers.googleblog.com/en/gemini-2-5-pro-io-improved-coding-performance/)",
    "additions": 2,
    "deletions": 2,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3042795753,
    "number": 43,
    "title": "docs: Add Japanese translation of project documentation",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/43",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-06T13:09:18Z",
    "merged_at": "2025-05-13T05:48:55Z",
    "body": "# 日本語ドキュメントの追加\n\nこのPRでは、Polimoneyプロジェクトのドキュメントを日本語に翻訳し、`docs/wiki_ja.md`として追加しています。\n\n## 変更内容\n\n- プロジェクトの概要、構成、主要コンポーネント、および用語集を日本語に翻訳\n- `docs`ディレクトリを作成し、翻訳したドキュメントを追加\n\n## リンク\n\n- [Link to Devin run](https://app.devin.ai/sessions/ff9bd4a6b4e84c15b2fd837436438e1c)\n- 依頼者: obama00300@gmail.com\n",
    "additions": 962,
    "deletions": 0,
    "changed_files": 5,
    "co_author": "obama00300",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3041887247,
    "number": 42,
    "title": "Devin wikiコンテンツのドキュメント追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/42",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-05-06T07:55:38Z",
    "merged_at": "2025-05-13T05:48:07Z",
    "body": "# Devin wikiコンテンツのドキュメント追加\n\n## 概要\nこのPRでは、Devinとの協働に関するドキュメントをPolimoney用に追加しています。これらのファイルは、GitHub wikiが有効になった後にwikiコンテンツとして使用することができます。\n\n## 変更内容\n- `docs/DEVIN_COLLABORATION.md`: Devinとの協働方法に関するドキュメント\n- `docs/Home.md`: wikiのホームページ用テンプレート\n\n## GitHub wikiの有効化と設定方法\n現在、Polimoneyリポジトリにはwiki機能が無効になっています。以下の手順でwikiを有効にし、コンテンツを追加できます：\n\n1. リポジトリの設定ページ（Settings）に移動\n2. 「Features」セクションで「Wikis」を有効にする\n3. wikiページに移動し、コンテンツを追加\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/e3837c2614284fbc8c05d348af492ccc\n\n## Requested by\nobama00300@gmail.com\n",
    "additions": 65,
    "deletions": 0,
    "changed_files": 2,
    "co_author": "obama00300",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3035998733,
    "number": 39,
    "title": "収支報告書の表現に合わせて修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/39",
    "user": "shumizu418128",
    "created_at": "2025-05-02T13:14:05Z",
    "merged_at": "2025-05-14T07:09:56Z",
    "body": "tsでの表現：翌年度への繰越\r\ngemini & 収支報告書での表現：翌年への繰越額\r\n前年も同様\r\n\r\n収支報告書の表記に合わせたほうがGemini出力を流すうえでラクだと思うので、修正させていただきたくPRを書きました。",
    "additions": 11,
    "deletions": 11,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3022668292,
    "number": 24,
    "title": "update readme",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/24",
    "user": "adust09",
    "created_at": "2025-04-27T04:05:02Z",
    "merged_at": "2025-05-13T05:46:06Z",
    "body": "AIに書かせたREADMEであり、一部コマンドは私の方でまだ検証できていません。\n",
    "additions": 27,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3061868835,
    "number": 59,
    "title": "pythonにruff, pyrightを導入",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/59",
    "user": "dotneet",
    "created_at": "2025-05-14T05:35:22Z",
    "body": "# 変更の概要\r\n<!-- ここに変更の概要を記載してください -->\r\n - type checkerの導入(pyright)\r\n - linter, formatterの導入(ruff)\r\n - CIでの上記のチェック\r\n\r\nruffのルールはいったん適用なしにしてます。\r\nかなりエラーが多いので全部有効にして ignore で対処する方法も使いづらいため。\r\n\r\n# スクリーンショット\r\n<!-- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください -->\r\n\r\n# 変更の背景\r\n<!-- ここに変更が必要となった背景を記載してください -->\r\n\r\n - コードの保守性向上のため\r\n\r\n# 関連Issue\r\n<!-- 関連するIssueのリンクをこちらに記載してください -->\r\n\r\n - #34\r\n\r\n# CLAへの同意\r\n本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/idobata/blob/main/CLA.md)に同意することが必須です。\r\n\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました\r\n",
    "additions": 131,
    "deletions": 4,
    "changed_files": 4,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3056958785,
    "number": 57,
    "title": "Biome + lefthookの導入",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/57",
    "user": "dotneet",
    "created_at": "2025-05-12T13:20:22Z",
    "body": "# 変更の概要\r\n<!-- ここに変更の概要を記載してください -->\r\n\r\nfix #54 \r\n\r\n - Biomeとlefthookの導入\r\n - ESLintの削除(BiomeにLint機能があるため)\r\n - anyがエラーになってしまうので、いったん warn にしてあります。anyへの対応は進めるとしても別途PRでよいかと思い、いったんそこは保留にしてます。\r\n\r\nフォーマット後サイトがちゃんと動くことを確認済みです。\r\n\r\n# スクリーンショット\r\n<!-- UIの変更を伴う場合は、変更前後のスクリーンショットもしくはgif画像をこちらに記載してください -->\r\n\r\n# 変更の背景\r\n<!-- ここに変更が必要となった背景を記載してください -->\r\n\r\nフォーマッターがなく個々人の環境でソースのフォーマットが変わってしまうため。\r\n\r\n# 関連Issue\r\n<!-- 関連するIssueのリンクをこちらに記載してください -->\r\n\r\n - #54 \r\n\r\n# CLAへの同意\r\n本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/idobata/blob/main/CLA.md)に同意することが必須です。\r\n\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました\r\n",
    "additions": 2010,
    "deletions": 4847,
    "changed_files": 31,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3056531675,
    "number": 55,
    "title": "analyze_image_gemini.py のエラーハンドリング改善",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/55",
    "user": "dotneet",
    "created_at": "2025-05-12T10:48:11Z",
    "body": " - #3 関連の対応です。すべてが終わったわけではありません。エラーハンドリングのみの対応です。\r\n - loggingの導入(printもloggingに切り替え)\r\n - 一部のエラーを最大5回まで指数バックオフでリトライするように変更\r\n - エラーが発生した項目は error_log.json に出力して、すべての実行完了後に確認可能\r\n\r\n下記、確認済みです。\r\n・リトライが実行されること\r\n・エラーのアイテムが error_log.json に吐き出されること\r\n・これまで通り正常に画像からJSONファイルに変換できること\r\n",
    "additions": 201,
    "deletions": 43,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3054290153,
    "number": 50,
    "title": "pinact runでバージョンをコミットハッシュにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/50",
    "user": "hatsu38",
    "created_at": "2025-05-10T15:49:14Z",
    "body": "- git tagは変更可能なためセキュリティのリスクもあります\r\n- 先日 [tj-actions/changed-files](https://github.com/tj-actions/changed-files) ではいくつものタグが特定の悪意ある コミットハッシュに置き換えられてしまう事案がありました\r\n  - https://www.stepsecurity.io/blog/harden-runner-detection-tj-actions-changed-files-action-is-compromised\r\n- GitHub CI/CD実践ガイドという本 にも、gitのコミットタグは可変なため、コミットハッシュで固定するのを推奨しています\r\n- そこで  [pinact run](https://github.com/suzuki-shunsuke/pinact) コマンドを実行してバージョンをコミットハッシュに置き換えました\r\n\r\n\r\nコミットハッシュによって最新のパッチバージョンを利用するためにはバージョンアップの必要がありますが、dependabot  などでそれほど不可なくバージョンの更新はしていけると思います。\r\nその面倒さ以上に、セキュリティリスクの高さが上まると考えて、PRを提出しました。\r\n",
    "additions": 9,
    "deletions": 9,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3046292352,
    "number": 48,
    "title": "E2E - merge_jsons.py変更",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/48",
    "user": "shumizu418128",
    "created_at": "2025-05-07T15:02:55Z",
    "body": "#47 に関連して、Geminiのプロンプトを変更したことに伴う出力jsonの変更を反映し、うまくjsonファイルをmergeするためのコードです。\r\n\r\n一番最後のjsonファイルから、年度を読み取る(宣誓書の年)と15行目に書かれていますが、必ずしも宣誓書は最後のページであるという確認はとれていません（ほとんどの場合最後のようです）\r\nここは今後改修の必要があるかもしれません",
    "additions": 33,
    "deletions": 10,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3046166683,
    "number": 47,
    "title": "E2E - Geminiプロンプト変更",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/47",
    "user": "shumizu418128",
    "created_at": "2025-05-07T14:28:14Z",
    "body": "converter.tsの形式に合わせた形で、Geminiに出力させることがねらいです。\r\n\r\n現在、収支報告書をGeminiに読ませてjson出力させ、それらをまとめたall.jsonを作っても、converter.tsで形式エラーが発生している状況です。\r\nこれを解決するために、まずはGeminiにconverter.tsの想定する形式（= sample_input.jsonの形式）にさせることをねらいとしています。\r\n[新しいプロンプトを利用して出力したものはこちらです](https://github.com/shumizu418128/polimoney/blob/test-only/output_json/05teiki-jimin_365_page_02.json)\r\n\r\nなお、新しいプロンプトを使って作ったjsonファイルたちをそのままmerge_jsons.pyにかけると、エラーが出てマージできません。merge_jsons.pyの想定外の形式になってしまうためです。\r\nかといってGeminiのプロンプトをこのまま変更せず（＝このプルリクをmergeしない）、merge_jsons.pyの変更のみでconverter.tsの想定する形式に持っていくことはできません。converter.tsにとって必要な情報が不足しているためです。\r\n\r\nまずGeminiにconverter.tsの想定する形式を出力させ、後ほどmerge_jsons.pyのプルリクを出し、最終的にall.jsonをconverter.tsの想定する形式にする考えです。\r\n\r\nよろしくお願いします。",
    "additions": 56,
    "deletions": 56,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3045253696,
    "number": 45,
    "title": "DevContainer configuration with Dockerfile, README, and VS Code settings",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/45",
    "user": "adust09",
    "created_at": "2025-05-07T08:59:38Z",
    "body": "#25 \r\n立ち上げとlocalhostの接続まで確認済みです。\r\n利用するextensionなどは議論の余地があると思います。",
    "additions": 135,
    "deletions": 0,
    "changed_files": 4,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3035855455,
    "number": 38,
    "title": "all.jsonをsample_input.json形式に変換するスクリプト",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/38",
    "user": "hagi5",
    "created_at": "2025-05-02T11:55:29Z",
    "updated_at": "2025-05-09T09:51:13Z",
    "body": "## 目的\r\nhttps://github.com/digitaldemocracy2030/polimoney/issues/29 のall.jsonをdata/sample_input.json っぽいデータに変換する\r\n\r\n### 補足\r\nカテゴリの分類のためにページ番号が欲しかったので all.json をページごとのデータにsplitしています\r\n[all_page2.json](https://github.com/user-attachments/files/20012673/all_page2.json)\r\n\r\n## 使い方\r\n```shell\r\npython tools/convert.py tools/merged_files/all_page2.json -o output.json\r\n````\r\n## 出力サンプル\r\n[output.json](https://github.com/user-attachments/files/20012442/output.json)\r\n\r\n## レビューしていただきたい点\r\n\r\n- 出力サンプルが最低限使えるものかどうか\r\n  - ここをもっとこうしてほしいなど指摘があればお願いします\r\n- all_page2.jsonにページ番号を含めたことの是非\r\n",
    "additions": 276,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  }
]