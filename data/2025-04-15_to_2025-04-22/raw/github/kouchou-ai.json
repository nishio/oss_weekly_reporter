[
  {
    "id": 3009048885,
    "number": 355,
    "title": "[BUG]Dockerコンテナでのazureモジュールインポートエラー",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/355",
    "user": "nishio",
    "created_at": "2025-04-21T18:40:37Z",
    "closed_at": "2025-04-22T04:25:55Z",
    "body": "下記のDevinの提案する解決策が妥当かどうかわからないのでコメントが欲しいです\n\n## 問題の説明\nローカル環境（Macbook上のDocker Desktop）でDocker Composeを使用して起動した際に、以下のエラーが発生しています：\n\n```\nModuleNotFoundError: No module named 'azure'\n```\n\nこのエラーは`storage.py`ファイルでAzureモジュールが無条件にインポートされているために発生しています。実際には`STORAGE_TYPE=local`（デフォルト設定）の場合、Azureモジュールは使用されないにもかかわらず、常にインポートが試行されています。\n\n## 原因\n`server/src/services/storage.py`ファイルの先頭で、以下のようにAzureモジュールを無条件にインポートしています：\n\n```python\nfrom azure.core.exceptions import ResourceNotFoundError\nfrom azure.identity import DefaultAzureCredential\nfrom azure.storage.blob import BlobServiceClient\n```\n\nしかし、実際にAzureモジュールが使用されるのは`STORAGE_TYPE=azure_blob`が設定されている場合のみです。ローカル開発環境では通常`STORAGE_TYPE=local`が使用されるため、Azureモジュールは不要です。\n\n## 解決プラン\n\n1. `storage.py`ファイルを修正し、Azureモジュールのインポートを条件付きにする\n2. Azureモジュールのインポートを`AzureBlobStorageService`クラス内に移動し、このクラスが実際に使用される場合のみインポートされるようにする\n3. `ResourceNotFoundError`の例外処理を修正し、型名で確認するように変更する\n\n## 修正案\n\n```python\n# storage.pyの先頭部分を修正\nimport os\nfrom abc import ABC, abstractmethod\nfrom pathlib import Path\n\nfrom src.config import settings\nfrom src.utils.logger import setup_logger\n\nlogger = setup_logger()\n```\n\n```python\n# AzureBlobStorageServiceクラスの__init__メソッドを修正\ndef __init__(self):\n    \"\"\"AzureBlobStorageServiceのコンストラクタ\n\n    設定からAzure Blob Storageの接続情報を取得し、クライアントを初期化します。\n    Azureモジュールの読み込みはこのクラスが必要な場合のみ行います。\n    \"\"\"\n    # Azure関連のモジュールを必要なときのみインポート\n    from azure.core.exceptions import ResourceNotFoundError  # noqa: F401\n    from azure.identity import DefaultAzureCredential\n    from azure.storage.blob import BlobServiceClient\n    \n    self.blob_service_client = BlobServiceClient(\n        account_url=settings.azure_blob_storage_account_url,\n        credential=DefaultAzureCredential(),\n    )\n    self.container_client = self.blob_service_client.get_container_client(\n        settings.AZURE_BLOB_STORAGE_CONTAINER_NAME\n    )\n```\n\nこの修正により、ローカル開発環境ではAzureパッケージがインストールされていなくても、`STORAGE_TYPE=local`の場合にアプリケーションが正常に起動できるようになります。\n",
    "type": "issue"
  },
  {
    "id": 3007870628,
    "number": 347,
    "title": "[REFACTOR] broadlistening.pngが重い",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/347",
    "user": "mtane0412",
    "created_at": "2025-04-21T08:13:32Z",
    "closed_at": "2025-04-21T13:07:57Z",
    "body": "# 現在の問題点\nbroadlistening.pngが1.2MBで表示されている。\n低速環境やモバイル通信などで問題のあるサイズ。\n![](https://i.gyazo.com/95c3d41fe7fd1bd576e0e3a2fe89624e.png)\n\n# 提案内容\n画像はNextImageを使用して最適化して表示するようにする\nhttps://chakra-ui.com/docs/components/image#nextjs-image",
    "type": "issue"
  },
  {
    "id": 3006863891,
    "number": 343,
    "title": "[BUG] レポート数が多いときにstatic buildのOGP画像生成でエラーが出る",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/343",
    "user": "mtane0412",
    "created_at": "2025-04-20T07:31:13Z",
    "closed_at": "2025-04-20T12:23:33Z",
    "body": "### 概要\n\nレポート数が一定数を超えた状態で静的サイト出力を行うと、OGP画像の生成時にAPI通信エラー（fetch failed）が発生し、ビルドが失敗することがあります。\n\n問題を確認している時点での静的ページ数\nGenerating static pages (26/26)\n\n### 再現手順\n\n1. レポートをたくさん作る\n2. `make client-build-static` で静的サイト出力\n3.  ビルドプロセス中、 /app/[slug]/opengraph-image.png ルートのプリレンダリング段階で TypeError: fetch failed を伴うエラーが発生し、ビルドが途中で終了する\n\n### 期待する動作\n\nレポートの数に関係なく静的サイト出力できる\n\n### スクリーンショット・ログ\n\n一例。毎回エラーが起きるレポートページのslugは様々で、ごくまれに全部出力が成功することもある。\n\n```shell\n(3.12.0) mtane0412@mtane0412 kouchou-ai % make client-build-static\nrm -rf out\ndocker compose up -d api\n[+] Running 2/2\n ✔ Network kouchou-ai_app-network  Created                                                 0.0s \n ✔ Container kouchou-ai-api-1      Started                                                 0.2s \ndocker compose run --rm -v /Users/mtane0412/dev/kouchou-ai/server:/server -v /Users/mtane0412/dev/kouchou-ai/out:/app/dist client sh -c \"npm run build:static && cp -r out/* dist\"\n[+] Creating 1/0\n ✔ Container kouchou-ai-api-1  Running                                                     0.0s \n> kouchou-ai-client@0.1.0 prebuild:static\n> npm run copy-image && NEXT_PUBLIC_OUTPUT_MODE=export npm run rename-file\n> kouchou-ai-client@0.1.0 copy-image\n> node scripts/copy-image.mjs\nCopied from default: icon.png\nCopied from default: ogp.png\nCopied from default: reporter.png\n✅ All images copied successfully.\n> kouchou-ai-client@0.1.0 rename-file\n> node scripts/rename-file.mjs rename\nRenamed: app/[slug]/opengraph-image.tsx → _opengraph-image.tsx\n> kouchou-ai-client@0.1.0 build:static\n> NEXT_PUBLIC_OUTPUT_MODE=export next build\n\n   ▲ Next.js 15.2.3\n\n   Creating an optimized production build ...\n ✓ Compiled successfully\n ✓ Linting and checking validity of types    \n ✓ Collecting page data    \n\nError occurred prerendering page \"/794f022e-2086-48ca-8e49-d442049627c0/opengraph-image.png\". Read more: https://nextjs.org/docs/messages/prerender-error\n\nTypeError: fetch failed\n    at node:internal/deps/undici/undici:13502:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at listOnTimeout (node:internal/timers:555:9)\n    at process.processTimers (node:internal/timers:529:7)\n    at async Promise.all (index 0)\n    at async g (/app/.next/server/app/[slug]/opengraph-image.png/route.js:1:924)\n    at async to.do (/app/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:18:18556)\n    at async to.handle (/app/node_modules/next/dist/compiled/next-server/app-route.runtime.prod.js:18:23632)\n    at async exportAppRoute (/app/node_modules/next/dist/export/routes/app-route.js:94:26)\nExport encountered an error on /[slug]/opengraph-image.png/route: /794f022e-2086-48ca-8e49-d442049627c0/opengraph-image.png, exiting the build.\n ⨯ Next.js build worker exited with code: 1 and signal: null\nnpm notice\nnpm notice New major version of npm available! 10.9.2 -> 11.3.0\nnpm notice Changelog: https://github.com/npm/cli/releases/tag/v11.3.0\nnpm notice To update run: npm install -g npm@11.3.0\nnpm notice\nmake: *** [client-build-static] Error 1\n```\n\n### その他\n\n修正投げます。",
    "type": "issue"
  },
  {
    "id": 3003989815,
    "number": 327,
    "title": "[FEATURE]Scatterにおいてラベルの表示/非表示を選択できるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/327",
    "user": "nasuka",
    "created_at": "2025-04-18T05:09:15Z",
    "closed_at": "2025-04-21T15:36:24Z",
    "body": "# 背景\n* 意見グループ数が増えるとラベルが重なって見にくくなるという問題がある\n* この問題があるため、意見グループを一定以上に増やすことが難しい\n\n\n# 提案内容\n* ラベルの表示/非表示を設定できるようにする\n  * 表示の場合は全ラベルを表示し、非表示の場合はどのラベルも表示しない",
    "type": "issue"
  },
  {
    "id": 3002951870,
    "number": 325,
    "title": "[BUG]Azure Storage連携をしている場合にパブコメモードのCSVファイルがDLできなくなる",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/325",
    "user": "nasuka",
    "created_at": "2025-04-17T16:26:03Z",
    "closed_at": "2025-04-17T17:00:06Z",
    "body": "### 概要\nAzure Storage連携をしている際に、スクショ部分のCSVファイルがDLできない\n\n![Image](https://github.com/user-attachments/assets/893a2ac4-d4f4-4ae5-8cc1-e77c8c68ccbe)\n\nストレージ連携をしている場合は、ストレージに出力ファイル等をアップロードをした後に容量節約のために不要なファイルを削除しているが、その際に当該のCSVファイルも削除されてしまっているためDLできなくなっている。\n",
    "type": "issue"
  },
  {
    "id": 3001177093,
    "number": 317,
    "title": "[FEATURE] 作成日時がUTCで出力される",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/317",
    "user": "mtane0412",
    "created_at": "2025-04-17T02:03:03Z",
    "closed_at": "2025-04-17T16:58:41Z",
    "body": "# 背景\n- macOSでdockerを使用してセットアップした環境では、レポートの作成日時がUTCで表示されている\n- 非技術者がいつデータを作成したのかという点で混乱しそう\n\n# 提案内容\n- タイムゾーン設定を追加する\n- デフォルトタイムゾーンを日本時間にする",
    "type": "issue"
  },
  {
    "id": 2990962155,
    "number": 300,
    "title": "[FEATURE]Windowsユーザの利用環境構築",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/300",
    "user": "nishio",
    "created_at": "2025-04-13T03:36:08Z",
    "closed_at": "2025-04-19T10:24:04Z",
    "body": "# 背景\n\nWindowsユーザーがkouchou-aiを利用する際、現在は複数のセットアップ方法（WSL2+Docker、Docker単体、生環境）があり、開発者ではなくただ使いたいユーザーにとって環境構築が難しい状況です。特に環境変数の設定やパスの問題が発生しやすく、環境ごとの違いが多くてトラブルシューティングも困難です。\n\n# 提案内容\n\nDocker-outside-of-Docker（DooD）方式を使用して、Windowsユーザー向けのセットアップを簡素化します。\n\n## ユーザストーリー\n- Docker Desktopをインストール\n- zipでrepoをダウンロード\n- OpenAI APIキーを取得して$5くらいチャージする\n- setup_win.batを実行\n- ブラウザでアクセス可能になる\n\n## 実装方法\nsetup_win.batがDocker環境内にUbuntuコンテナを作成し、その後の作業は全てDocker内で実行します。具体的には：\n\n1. OpenAI APIキーの入力プロンプトを表示\n2. 環境変数を自動設定\n3. docker composeでサービスを起動\n\n## メリット\n- WSL2の複雑な設定が不要\n- 環境変数の問題を回避\n- Windowsの環境の違いによる問題を解消\n- コマンドラインの知識が不要\n\n## 技術的詳細\n- ホストのDockerソケットをマウント（/var/run/docker.sock）\n- 必要なポート（3000, 4000, 8000）をマッピング\n- 環境変数を適切に設定\n\nこれにより、Windowsユーザーでも簡単にkouchou-aiを利用できるようになります。\n",
    "type": "issue"
  },
  {
    "id": 2990925334,
    "number": 297,
    "title": "[FEATURE]CSVダウンロード時の文字化け (Windows)",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/297",
    "user": "nishio",
    "created_at": "2025-04-13T01:36:52Z",
    "closed_at": "2025-04-19T08:08:04Z",
    "body": "# 背景\nAdmin DashboardからレポートデータをCSV形式でダウンロードすると、WindowsのExcelなどで開いた際に文字化けが発生する。\n\n「Dashboard reportsのCSVファイルをダウンロードしたら、Windowsでは文字化けする」\n\n\n# 提案内容\n(解決策) CSVファイルを生成する際に、文字コードをUTF-8 BOM (Byte Order Mark) 付きで出力するなどのオプションを選択可能にする。\n\n",
    "type": "issue"
  },
  {
    "id": 2990813561,
    "number": 286,
    "title": "Windows環境でのセットアップの困難さ低減",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/286",
    "user": "nishio",
    "created_at": "2025-04-12T23:58:34Z",
    "closed_at": "2025-04-19T10:16:46Z",
    "body": "READMEがUNIX系前提であり、WindowsユーザーはDocker/Gitのインストール、パス設定、改行コード問題などで躓きやすい。\n\nfrom 4/12 meetup\n>「WindowsユーザーはDocker Desktopのダウンロードからはじまる」\n「GithubのREADMEは現在UNIX系前提?」\n「Git for Windowsのダウンロード」\n「'git' は、内部コマンドまたは外部コマンド、操作可能なプログラムまたはバッチ ファイルとして認識されていません。」\n「パスを通すという困難な作業」\n「entrypoint.shの5行目でエラー。改行コードの関係」\n\n(解決策)\n\nWindows向けのセットアップ手順（Docker, Gitインストール、パス設定含む）をREADMEに詳細に追記する。\n\n改行コード問題を回避するため、リポジトリに .gitattributes ファイルを設定する。「これは.gitattributesで解決可能？(たねのぶ)」「可能です」\n\nクローン時に git clone --config core.autocrlf=false ... を実行するよう案内する。",
    "type": "issue"
  },
  {
    "id": 2987317166,
    "number": 278,
    "title": "[BUG]階層図を全画面表示にすると一番右上の要約文が「全画面終了」ボタンの後ろに隠れてしまう",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/278",
    "user": "masatosasano2",
    "created_at": "2025-04-11T01:26:15Z",
    "closed_at": "2025-04-15T03:37:25Z",
    "body": "### 概要\n\n全画面表示の「全画面終了」ボタンの後ろに要素の要約文が一部隠れてしまい、読めないことがある。\n\n### 再現手順\n\n1. レポート画面を開く\n2. 「階層図」chartに切り替える\n3. 「全画面表示」ボタンを押す\n4. 一番右上のパネルにマウスカーソルを重ねる\n\n発生条件：正確な条件は未調査。他のchat（全体図、濃い意見グループ）でもノードの配置によっては発生しそう。\n\n### 期待する動作\n\n要約文が隠れないで欲しいです。\n\n修正されるにあたって以下の点が満たされてほしいのですが、具体的な修正案はありません。\n・画面右上に要素が密集していても問題ないようにする\n　（なので、おそらく「要約文を要素の左上に出す」ではNG）\n・「全画面終了」ボタンが隠れてしまい見つけられないことを防ぐ\n　（なので、おそらく「要約文を最前面に出す」ではNG）\n\n### スクリーンショット・ログ\n\n![Image](https://github.com/user-attachments/assets/d0fbad20-e890-4901-b39f-1ebc3aaae5d2)\n",
    "type": "issue"
  },
  {
    "id": 2979691677,
    "number": 264,
    "title": "[REFACTOR] GitHub Actions で Biome の lint, format のチェックを実行する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/264",
    "user": "shgtkshruch",
    "created_at": "2025-04-08T12:47:44Z",
    "closed_at": "2025-04-19T06:28:03Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- #84 で Biome を導入しましたが、format, lint エラーがあるコードがプルリクエストに含まれていても気づく仕組みが現状では整っていません\n- Biome の lint, format を適用しないコードが取り込まれると、コード全体の統一性が落ちるのと、Biome を適用した他のプルリクエストでコードの差分が出る可能性があります\n  - 本来のプルリクエストとは関係のない差分が出ることで、レビューの負荷が上がりそう\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- client, client admin のコードの修正を含むプルリクエストを作成したら、CI で Biome の format, lint のチェックを実行する\n  - [公式で提供している GitHub Actions と `biome ci`](https://biomejs.dev/recipes/continuous-integration/) コマンドが利用できるかもしれません",
    "type": "issue"
  },
  {
    "id": 2974877378,
    "number": 243,
    "title": "初期設定時のentrypoint.shエラー",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/243",
    "user": "nasuka",
    "created_at": "2025-04-06T11:02:11Z",
    "closed_at": "2025-04-16T04:17:52Z",
    "body": "## バグの内容\n初期設定時にentrypoint.shエラーが出たため、ChatGPTに解決策を聞いたものとなります。\nhttp://localhost:3000/　http://localhost:4000/のページは見れるようになりました。\n環境がWindows10で、PowerShell 5.xです。\n\n【エラー内容①】\nclient-1 exited with code 0\n/entrypoint.sh: line 5: syntax error: unexpected \"fi\" (expecting \"then\")\n\n●エラーの意味：\nclient（レポート表示画面）の起動時に、entrypoint.sh という起動スクリプトの中に文法ミスがあります\n\n正確には：\nif 文が書いてあるけど、その中に then がない\nそのまま fi（if の終わり）に到達して、エラーになってる\n\n●修正案１（？）\nif [ \"$NODE_ENV\" = \"production\" ]; then\n  npm run start\nelse\n  npm run dev\nfi\n\n●修正案２（？）\n#!/bin/sh\n# 起動時に全て削除した上でbuildしなおす\nif [ -d \".next\" ]; then\n  rm -rf .next\nfi  \n\n# build時にAPIサーバーを参照するため、APIサーバーの起動を待ってからbuildを行う\nnpm run build\nexec npm run start\n\n●修正案３（？）\nWindowsメモ帳が改行コードをCRLF（\\r\\n）にしてしまうせいで、Docker内で「: not found」や syntax error: unexpected \"fi\" が出る。\n✅ 対処方法（メモ帳ユーザーでもOK）\nPowerShellで改行コードをLFに変換する（推奨）\n以下を PowerShell で kouchou-ai フォルダ内で実行：\n＜PowerShell＞\n手順１（PowerShell 7.x対応）\ncd ~\\kouchou-ai\n(Get-Content .\\client\\entrypoint.sh) -join \"`n\" | Set-Content -NoByteOrderMark -Encoding utf8 .\\client\\entrypoint.sh\n\n手順１修正版コマンド（PowerShell 5.x対応）\n(Get-Content .\\client\\entrypoint.sh) -join \"`n\" | Set-Content -Encoding UTF8 .\\client\\entrypoint.sh\n手順２\ndocker-compose down\ndocker-compose up --build\n\n\n\n\n\n\n【エラー内容②】\nclient-1 | ./entrypoint.sh: line 1: ﻿#!/bin/sh: not found\nこの「﻿」は見えないBOM文字。Windowsのメモ帳で保存した .sh ファイルはUTF-8 with BOMになりやすい。\n手順１：entrypoint.sh の最初の行のBOMを完全に除去する\n●修正案②ー１（PowerShell 7.x対応）\nGet-Content .\\client\\entrypoint.sh | Out-File -Encoding ASCII -NoNewline .\\client\\entrypoint.sh\n●修正案②ー２（PowerShell 7.x対応）\nGet-Content .\\client\\entrypoint.sh | Set-Content -Encoding UTF8 -NoByteOrderMark .\\client\\entrypoint.sh\n●修正案②ー３（PowerShell 5.x対応）\n[System.IO.File]::WriteAllLines('.\\client\\entrypoint.sh', [System.IO.File]::ReadAllLines('.\\client\\entrypoint.sh'), (New-Object System.Text.UTF8Encoding($false)))\n\n\n手順２：フルリセットして再起動\ndocker-compose down --volumes --remove-orphans\ndocker-compose build --no-cache\ndocker-compose up\n\n\n---\nこちらのイシューはGoogle Form経由で投稿されたものです",
    "type": "issue"
  },
  {
    "id": 2962680964,
    "number": 214,
    "title": "[FEATURE]Azureのデプロイ更新作業をMakefileにまとめる",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/214",
    "user": "nishio",
    "created_at": "2025-04-01T08:22:16Z",
    "closed_at": "2025-04-17T16:29:26Z",
    "body": "# 背景\n作業が複雑なため\n\n## chat log\nnishio\n最新版でAzureにデプロイされているものを更新しようとしたのですが、色々トラブって結局できませんでした。 makeでazure-login azure-build azure-acr-login-auto azure-push make azure-config-update make azure-fix-client-adminまでやったのですが見た目が変わらなくて、何がいけなかったのかなぁと思っています。\ntruego\n上記だと、clien-admin コンテナは新しいもので起動しますが、client と api のコンテナは古いまま（イメージは新しくなったけどコンテナは古いもので起動したまま）になりそうですね。 azure-fix-client-admin の処理の中の以下の部分（古いイメージのコンテナを停止して、新しく push されたイメージでコンテナを起動する）と同様のことを client, api コンテナでもやる必要がありそうな気がしました。\n```\naz containerapp update --name client-admin --resource-group $(AZURE_RESOURCE_GROUP) --min-replicas 0 && \\ echo '>>> 再度スケールアップ...' && \\ sleep 5 && \\ az containerapp update --name client-admin --resource-group $(AZURE_RESOURCE_GROUP) --min-replicas 1\"\n```\n\nnishio\napiサーバを再起動したらレポートが全部消えたので無事コンテナの更新ができたようです:爆笑: Spreadsheetを読む機能が増えてたのでソースコードの更新は成功、問題はレポートの復元だけ\n\n\n# 提案内容\nMakefileにターゲットとしてまとめる\n",
    "type": "issue"
  },
  {
    "id": 2945694291,
    "number": 175,
    "title": "[DOCUMENT] Azure である程度の期間運用する際に必要な項目を追加する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/175",
    "user": "shingo-ohki",
    "created_at": "2025-03-25T08:21:14Z",
    "closed_at": "2025-04-19T06:55:21Z",
    "body": "# 現在の問題点\n- 最初に構築するときのことしかケアできていない\n- 何らかの理由(環境変数を更新した、新機能が使いたくてコードを更新した、ロゴを設定した、など)でコンテナを作り直すときにはまりどころがある\n\n> フルでmakeしちゃうと新しいACRが作られちゃうのか？→.env.azure.generatedに書き出されたACR名を.env.azureに転記していなかったので毎回生成されていた\nfrom https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1742889861058199?thread_ts=1742886821.947769&cid=C08F7JZPD63\n\n> コンテナを再起動して生成済みレポートが消える\n> ソースコードが更新されて新機能が追加されたらみんな新機能を使いたくて作り直しをすると思いますけど、それでレポートが全部消えてたら泣かれるかもw\n> 分析して「よし静的HTMLを生成して公開しよう、そのためにはロゴを入れて更新」で分析結果が消える\nfrom https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1742889178309719\n\n# 提案内容\n\n> 環境変数を変更したい時とか、ソースコードをupdateしたい時のためのマニュアルがあればいい",
    "type": "issue"
  },
  {
    "id": 2945685679,
    "number": 174,
    "title": "[FEATURE] 生成するレポートを永続化できるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/174",
    "user": "shingo-ohki",
    "created_at": "2025-03-25T08:17:16Z",
    "closed_at": "2025-04-19T06:14:43Z",
    "body": "# 背景\n（特に Azure 環境では）コンテナをつくり直すとそれまでに生成したレポートが消えてしまう\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1742889178309719\n\n# 提案内容\n例えば、\n1. レポート生成時に永続化できるようにする（Azure のストレージサービスや Google drive など?） ",
    "type": "issue"
  },
  {
    "id": 2930293296,
    "number": 96,
    "title": "[FEATURE]50件の小さいデータで試した場合に濃いクラスタ抽出で見た目が変わらない問題の解決",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/96",
    "user": "nishio",
    "created_at": "2025-03-19T02:41:35Z",
    "closed_at": "2025-04-17T16:28:56Z",
    "body": "# 背景\n50件の小さいデータで試した場合に濃いクラスタ抽出で見た目が変わらないことに混乱する\n\n\n# 提案内容\n\n案1:\n\n>濃いクラスタ抽出で見た目が変わらないのはデータが少なすぎて実行されてないからか？そういう時にはボタンを非表示にしたいかも。クリックして変わらないのは混乱させる\n\nこの方法が良いかはわからない",
    "type": "issue"
  },
  {
    "id": 2926991813,
    "number": 80,
    "title": "(情報整理)Azureについて",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/80",
    "user": "nishio",
    "created_at": "2025-03-18T03:33:26Z",
    "closed_at": "2025-04-19T06:08:16Z",
    "body": "自治体や大企業などを中心にAzureを使いたいというニーズがある。\n\nこれを分解整理する\n\n- 1: ✅ OpenAIのAPIを直接叩くのではなくAzure OpenAI Serviceを使いたい( #89)\n- 2: ✅ Azureでホストしたい(#94)\n- 3: Azure Container Appsでホストしている場合にソースコードのアップデートをすると既存のレポートが消えてしまう問題の解決\n\n- x: Azureでのセットアップガイド ( #133 #175)\n\n## 3に関して\n\n- https://github.com/digitaldemocracy2030/kouchou-ai/pull/180 で消失を防いでいるが部分的解決に過ぎない\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/214 で更新時に自動的に保存する方針にした\n- これらをビルドに含めることができれば実は解決なのでは？という気もする https://github.com/digitaldemocracy2030/kouchou-ai/issues/216\n\n- 王道の解決方法はストレージ接続の #174 #46 だと思うが、デフォルトでONにしないなら「ストレージOFFで始めて試して、いいレポートができたので保存したくなったので更新しようとして消える」というバターンが発生することのケアが必要",
    "type": "issue"
  },
  {
    "id": 3008680112,
    "number": 350,
    "title": "[REFACTOR] client-admin/app/create/page.tsx のリファクタリング",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/350",
    "user": "mtane0412",
    "created_at": "2025-04-21T15:26:43Z",
    "body": "# 現在の問題点\n- client-admin/app/create/page.tsx が1200行を超えている\n- LLMも読むのに苦労している\n\n# 提案内容\ncomponentやhookを分離する",
    "type": "issue"
  },
  {
    "id": 3007630765,
    "number": 346,
    "title": "(実験) 同一の内容が大量に投稿される問題への対処法",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/346",
    "user": "nasuka",
    "created_at": "2025-04-21T05:54:34Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/345\n上記のIssueに紐づく実験のIssue\n\n以下元Issueの背景を転載\n* [パブコメの大量投稿](https://x.com/takahiroanno/status/1914151807443718381) によって、入力データの中に似通った内容が大量に含まれる場合がある\n* これによって、以下の問題が起きる\n  * 1.フロントの処理負荷が高くなる\n    * 現在の設計では、数万件〜規模のデータは描画の負荷が高くPCによっては正常に表示できない可能性がある\n  * 2.バックエンドの処理負荷・コストが高くなる\n    * レポート出力処理の際のクラスタリングの計算負荷が高くなる・extraction処理にかかるLLM APIのコストが高くなる\n  * 3.ユーザーの認知負荷が高くなる\n    * 今の形式でクラスタリングや可視化を行うと、スパム的な意見が意見全体の大半を占めるために、本来着目したい意見が目立たなくなってしまう可能性がある\n\n\n# 提案内容\n* 類似する意見をあらかじめまとめたうえで、まとめた後の意見を広聴AIの分析にかける。\n  * まとめた後の意見が表示されるようになることで、フロントの処理負荷が下がり、またユーザーの認知負荷も下がる\n* まとめ方には幾つかのアプローチがありそう。\ne.g. クラスタリングでまとめる、LLMでまとめる、そのハイブリッド等\n\n↑は問題解決の一つのアプローチの案として記載していますが、他にアプローチがあれば随時コメントにご記載ください。\n\n## 想定する進め方\n* 実験データの選定（or 作成）\n* 実験データに対して、アルゴリズムを適用し、アウトプットを確認\n  * * @nishio , @nasuka （+ 時間があれば@takahiroanno も）あたりは確認しておけると良さそう\n* 問題なさそうであれば機能実装の検討に移る\n\n\n",
    "type": "issue"
  },
  {
    "id": 3007613196,
    "number": 345,
    "title": "（情報整理）同一の内容が大量に投稿される問題への対処法",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/345",
    "user": "nasuka",
    "created_at": "2025-04-21T05:40:51Z",
    "body": "# 背景\n* [パブコメの大量投稿](https://x.com/takahiroanno/status/1914151807443718381) によって、入力データの中に似通った内容が大量に含まれる場合がある\n* これによって、以下の問題が起きる\n  * 1.フロントの処理負荷が高くなる\n    * 現在の設計では、数万件〜規模のデータは描画の負荷が高くPCによっては正常に表示できない可能性がある\n  * 2.バックエンドの処理負荷・コストが高くなる\n    * レポート出力処理の際のクラスタリングの計算負荷が高くなる・extraction処理にかかるLLM APIのコストが高くなる\n  * 3.ユーザーの認知負荷が高くなる\n    * 今の形式でクラスタリングや可視化を行うと、スパム的な意見が意見全体の大半を占めるために、本来着目したい意見が目立たなくなってしまう可能性がある\n\n\n# 進め方\n* アルゴリズムの改善によって上記の問題を解決するかを検討する。\n* いきなり機能を実装するのではなく、プロダクトとは独立して実験スクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n* 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n```\n1: 独立したスクリプトとして機能するものを作れるが実験\n2: それをapiサーバに統合するか検討\n3: それをどんなGUIでユーザに見せるか検討\nという流れがスムーズかなと思いました\n```",
    "type": "issue"
  },
  {
    "id": 3006586222,
    "number": 342,
    "title": "[FEATURE]文脈をふまえた生データの整形",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/342",
    "user": "masatosasano2",
    "created_at": "2025-04-19T18:09:28Z",
    "body": "# 背景\n例えばXの投稿を元にクラスタリングする場合、今だと生の投稿がそのままクラスタリング対象となっている。\nしかし、返信元の投稿、引用元の投稿、1つ前の投稿、同時に貼られている画像/音声/URLなどの文脈を踏まえないと内容の解釈の正確性が落ちる。\n\n# 提案内容\nクラスタリングの前処理として生のデータに文脈情報を付与したい。\n例えば、「〇〇すべき」という投稿に対してついた「反対」という返信は単独だと意味不明だが、「〇〇すべきでない」などと整形しておけば処理しやすくなる。\n",
    "type": "issue"
  },
  {
    "id": 3006474334,
    "number": 341,
    "title": "[FEATURE] レポートの限定公開",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/341",
    "user": "mtane0412",
    "created_at": "2025-04-19T14:49:51Z",
    "body": "# 背景\n- レポートの公開ステータスは公開と非公開で、非公開にした場合、管理者であってもレポートページを参照することができない\n- 面白いレポートができたので他人に共有したいが、一般に広く公開したいわけではないものがある。既に作成したデータも公開しているので、部分公開しようと思うと手間がかかる。\n\n\n# 提案内容\n- Youtubeの限定公開のように、URLを知っている人だけがアクセスできるレポートページの状態を作る\n- 単純にトップページからリンクされないように出力すればできる？",
    "type": "issue"
  },
  {
    "id": 3006247223,
    "number": 339,
    "title": "[FEATURE]同義語マップがほしい",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/339",
    "user": "masatosasano2",
    "created_at": "2025-04-19T06:48:31Z",
    "body": "# 背景\n\n- 一般的なLLMが学習していない特殊な同義語が色々ありそう（スラング、愛称、蔑称、プロパガンダ用の言い換えなど）\n- 単なる略称などの表記ゆれもカバーできてない可能性がある\n\n# 提案内容\n\n- 同義語マップを差し込めるようにする\n- デフォルトマップを用意し、育てていきたい\n- ユーザー用マップの情報を得て適宜デフォルトマップに反映したい（要人間判断）",
    "type": "issue"
  },
  {
    "id": 3006200638,
    "number": 337,
    "title": "[FEATURE] 「全体図」と「階層図」の意見グループの色を揃える",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/337",
    "user": "shingo-ohki",
    "created_at": "2025-04-19T05:17:29Z",
    "body": "# 背景\n「全体図」から「階層図」に切り替えた時に、注目していた意見グループを見失いがち（もちろん文字を読めば分かる）\n\nfrom 2025.4.19 広聴AIもくもく会\n\n\n# 提案内容\n「全体図」と「階層図」の意見グループの色を揃えてはどうか？",
    "type": "issue"
  },
  {
    "id": 3004393459,
    "number": 333,
    "title": "[FEATURE] static exportしたHTMLファイルをwebサーバーなしで閲覧できるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/333",
    "user": "nasuka",
    "created_at": "2025-04-18T08:28:41Z",
    "body": "# 背景\n* static exportしたhtmlファイルについて、現在はwebサーバーにhtmlを配置しないと閲覧できないという問題がある。\n  * 添付したスクショの様にエラーが発生し、データ・スクリプト・画像等が読み込めない\n* この問題により、閲覧する際にWebサーバーが必須となるためレポートを共有するハードルが高い\n\n![Image](https://github.com/user-attachments/assets/40e25d38-31d3-4517-90e2-d3e2bb14b7cf)\n\n# 提案内容\nWebサーバーなしで閲覧できるhtmlファイルを作成できるようにする。\n自分がフロントに余り詳しくなく、上記を実現するための具体的なアプローチを思いつく方はコメントいただけると助かります。\n",
    "type": "issue"
  },
  {
    "id": 3004071958,
    "number": 330,
    "title": "[FEATURE]第一階層の意見グループ数の上限を増やす",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/330",
    "user": "nasuka",
    "created_at": "2025-04-18T05:59:54Z",
    "body": "# 背景\n* 現在、全体図などの散布図において意見グループの個数上限は20となっている\n  * ラベルが重なってしまう問題があったため上限を20にしていたが、この問題は回避策のPR（ https://github.com/digitaldemocracy2030/kouchou-ai/pull/329 ）が出されている\n\n# 提案内容\n* グループ数の上限を40に増やす\n* グループのカラーバリエーションも20 -> 40に増やす",
    "type": "issue"
  },
  {
    "id": 3004009762,
    "number": 328,
    "title": "[FEATURE] レポートのタイトルを変更できるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/328",
    "user": "mtane0412",
    "created_at": "2025-04-18T05:21:40Z",
    "body": "# 背景\n現在最初に設定したタイトルの変更は管理画面からはできない(という認識)。\n\nクラスタ設定を間違えたり、Rate Limitが発生して不完全なレポートでも出力例として残したい場合などに、タイトルを変更してわかりやすく管理したい。\n\n# 提案内容\nレポート一のオプションボタンからタイトルを編集できるようにする\n\n![](https://i.gyazo.com/45b10370a28fd77f8ed520ec8bc7f702.png)",
    "type": "issue"
  },
  {
    "id": 3002618758,
    "number": 324,
    "title": "[FEATURE]ファクトチェックロジックの実験",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/324",
    "user": "masatosasano2",
    "created_at": "2025-04-17T14:09:02Z",
    "body": "# 背景\n各サービスでファクトチェックが必要とされている。\nファクトチェック処理は共通化できるので、本Issueはその共通処理を実験するためのIssueとする。\n処理のコードをどこに置くべきかはidobata側のリポジトリの統一後に検討する。\n\n# 関連Issue\n\n1. https://github.com/digitaldemocracy2030/kouchou-ai/issues/170\n2. https://github.com/digitaldemocracy2030/idobata-analyst/issues/97\n3. https://github.com/digitaldemocracy2030/idobata-discourse-agent/issues/51\n\n# 関連Issue1から抜粋\n\n<img width=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5968bb66-9070-4a84-b0cb-170205f319e5\" />\n\n# 提案内容\n\n- 実装方針：どこかで議論されていたとおり怪しいものは弾かずOKにして、明確に偽情報と判断した場合のみ弾く。\n- 準備：偽情報を含みそうな適当なデータセットを用意し、人力で正解データを作る。\n- 実験概要：以下のコストや精度を比較する。他のアプローチがあれば随時試す。\n    - 既存のファクトチェックサービスで偽と判定された場合のみNGとする\n    - いくつかの信用できる情報源を指定し、そこから取得できる事実から偽と判定された場合のみNGとする\n    - 単純なWeb検索の結果から偽と判定された場合のみNGとする\n    - DeepResearch的な仕組を自作し、それに偽と判定された場合のみNGとする\n    - 既存のDeepResearch系のサービスで偽と判定された場合のみNGとする",
    "type": "issue"
  },
  {
    "id": 3002279558,
    "number": 323,
    "title": "[FEATURE] レポートの多言語対応",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/323",
    "user": "mtane0412",
    "created_at": "2025-04-17T11:57:43Z",
    "body": "# 背景\nSteamのレビューデータで遊んでいるときに、コメントは多言語でLLMも読めるが、最後のレポートでも元言語で表示されるために多言語混在状態となり、人間が読みづらい問題があるかなと思いました。\n実運用場面では、異なる言語を話す住民に対して同一の調査を実施できるようになるというストーリーがありそうだなと思いました。\n\n\n# 提案内容\nPol.isのようなレポート出力時の翻訳機能をつける\n出力言語を選択できるようにする",
    "type": "issue"
  },
  {
    "id": 3001208233,
    "number": 318,
    "title": "[FEATURE] 意見を抽出できなかったときのエラーハンドリング",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/318",
    "user": "mtane0412",
    "created_at": "2025-04-17T02:28:08Z",
    "body": "# 背景\nXのポストやSteamのレビューなどで試しているときに、extractionの段階で大量の `ERROR:root:Task <Future at 0xffff7d57f470 state=finished raised RuntimeError> failed with error: JSON list not found` が出ます。\nおそらくコメントの中から意見を抽出できないことが多いと推測。(違ったら教えて下さい。)\n\n実運用ではまとまった意見のデータが使われると思いますが、レポート作成者が「抽出段階でよくわからないエラーが出ている」という体験がありそうかなと思いました。\n\n#315 が実装された場合に向けてログのノイズを減少させる。\n\n# 提案内容\n意見が抽出できなかった場合、元コメントと併記して意見が抽出できなかったことをログ出力する。",
    "type": "issue"
  },
  {
    "id": 2999437812,
    "number": 315,
    "title": "[FEATURE]エラーログをファイルに出力する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/315",
    "user": "nasuka",
    "created_at": "2025-04-16T12:06:28Z",
    "body": "# 背景\n* 自治体の担当者などが広聴AIを動かしてエラーがおきた際に、どのようなエラーが起きているのかを広聴AI開発サイドに伝えてもらいたいが、担当者側でエラーログを確認するのが難しい\n\n\n# 提案内容\n* エラーログをファイルに出力するようにする\n  * エラーが起きた場合は、ファイルに書き出された内容を伝えてもらう or ファイルの内容をそのまま教えてもらう\n\n広聴AIでsentryを用意し、エラーログをそちらに集約する案も出たが、機微情報が含まれることが懸念される可能性がある。上述した方式であれば、機微情報は担当者側で削除した上でエラーログを連携してもらうことが可能。",
    "type": "issue"
  },
  {
    "id": 2995192689,
    "number": 310,
    "title": "[FEATURE] LLMが出力した結果の手動修正機能がほしい",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/310",
    "user": "nasuka",
    "created_at": "2025-04-15T05:38:53Z",
    "body": "# 背景\n* LLMが出力したクラスタ名や説明、argumentが適切でない場合がある\n  * e.g.\n    * 公開するのに不適切な単語や表現がクラスタ名に含まれている\n    * 他のクラスタと同一の内容がクラスタ名に含まれている\n* このようなケースにおいては、LLMのアウトプットを見た後に人間が手動で文言を修正したい\n\n# 提案内容\nLLMが出力したテキスト（クラスタタイトル・説明・概要・argument）について、手動で編集する画面をadminに設け、レポートに編集内容を反映する\n\n\n(admin)\n* 上記の編集画面を設ける\n  * 編集後のデータを編集用のendpointに送る\n\n(api)\n* 編集用のendpointを実装する\n  * リクエストで受け取ったデータを各種中間ファイル（args.csv等）に保存\n  * hierarchical_aggregation.pyを再度実行し、更新後のデータでhierarchical_result.jsonを保存する\n\nそもそも全要素を編集できるようにするかというのは議論の余地がある。やるとしても、まずはクラスタ名のみを対象にするなど、部分的に始めていくのが良さそう。\nまた、透明性担保のために編集履歴を残すようにするかも議論の余地がある。",
    "type": "issue"
  },
  {
    "id": 2994589288,
    "number": 308,
    "title": "[FEATURE] HTML フォーム入力による広聴 AI システムの簡易デプロイ機能",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/308",
    "user": "shingo-ohki",
    "created_at": "2025-04-15T00:11:32Z",
    "body": "# 背景\n\n先日のハッカソンに参加して、改めて広聴 AI の導入について技術的なハードルの高さとその導入サポートにに課題がありそうだと感じました。\n\n#300 によって Windows 環境でのセットアップは大きく改善されますが、\n- PC へのソフトウェアインストール自体が難しい場合もある\n- Azure 環境の構築に make コマンドが必要（WSL2 などのセットアップ含む）\n\nといった点が、導入の障壁として残っている（そこまで現段階で対応するかどうかは議論の余地あり）と考えています。\n\n# 提案内容\n\n## 概要\nHTML フォーム + Azure Functions（または Azure に限らず同等のことが実現できる環境） のセットを提供することで、ユーザーがフォームに必要な情報（Azure 認証情報、OpenAI API キーなど）を入力するだけで、自動的に自身の Azure 環境上に広聴 AI の環境を構築できる仕組みを提供します。\n\n## 想定構成\n\n![Image](https://github.com/user-attachments/assets/cab67945-f74a-49d6-8650-88249f766d57)\n\n- static form(HTML フォーム)\n  - Azure Storage の Static Web Hosting に設置\n  - 必要な認証情報や設定項目を入力\n- Azure Functions\n  - 入力された情報をもとに、Azure 上に必要なリソース（Container Apps 等）を作成・デプロイ\n\n※フォームと Functions はセットで提供され、ユーザー操作は基本的にフォーム入力のみで完結\n\n## 構築される環境\n- 広聴 AI のシステム（Azure Container Apps による server, client, client-admin 構成）\n- 利用料金はユーザーの Azure アカウントにて発生\n- Static HTML と Azure Functions はプロジェクト側または第三者がホスティング（マネージドサービスかつ無料枠の想定、要検証）\n\n# 利点\n- PC 操作に不慣れな方でも数ステップで導入が可能\n- コマンド操作・ローカル環境構築が不要\n- ユーザーごとの環境依存によるトラブル発生率の低下\n- 実証実験・テスト環境など、導入コストを下げたい場面での展開が容易\n- サポート負担の軽減\n\n# 懸念点・検討課題\n- そもそもこのニーズはあるか？今やるべきか？\n- フォーム経由で機微情報（Azure 認証情報、OpenAI API キーなど）を扱うこと\n- Azure アカウントの事前取得が必要\n- Static HTML + Azure Functions をプロジェクトとしてホスティングできるか？",
    "type": "issue"
  },
  {
    "id": 2991203616,
    "number": 306,
    "title": "[FEATURE]「全体図」「濃い意見グループ」のUI/UX改善",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/306",
    "user": "masatosasano2",
    "created_at": "2025-04-13T11:20:06Z",
    "updated_at": "2025-04-16T16:30:36Z",
    "body": "# 背景\n\n操作しててたまたま以下に気づいたが、見ただけでは分からない。\n・範囲指定（ドラッグ）すると拡大できること\n・拡大した状態から元の倍率に戻すにはダブルクリックすること\n\n濃い意見グループで上がってきているクラスタが第一階層？のクラスタのどれに属すのかがわからない。\n\n# 提案内容\n\nズームについて\n- ヒントアイコンで操作方法のヒントを表示する\n- ズームイン/アウトの操作ボタンを用意する（ドラッグでパンできないので、上下左右の移動ボタンも必要？）\n- 表示モードや全画面に切り替えたときに表示がリセットされないように Issue #290 を参考に状態保持を実装する\n\n濃い意見グループについて\n- ラベルか色で表現する？",
    "type": "issue"
  },
  {
    "id": 2991091837,
    "number": 304,
    "title": "[FEATURE]CSVアップロード時にコメント列を自動で特定してほしい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/304",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:59:09Z",
    "updated_at": "2025-04-19T05:36:31Z",
    "body": "# 背景\nコメント列の指定の一手間を減らしたい\n\n# 提案内容\n- コメントの列名が「コメント」「comment」「意見」「要望」「投稿」などであったらデフォルトでその列を指定してほしい\n- 候補の列名はハードコードで一定カバーし、マッチしなかったらLLMに一番それっぽいのを選んでほしい\n- 列が1つしかなかったらそれをコメント列と判定してほしい\n- 数値/日付型でない列が1つしかなかったらそれをコメント列と判定してほしい",
    "type": "issue"
  },
  {
    "id": 2991091474,
    "number": 303,
    "title": "[FEATURE]CSVアップロード時にデフォルトでクラスタ数が設定されてほしい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/303",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:58:07Z",
    "updated_at": "2025-04-20T07:39:00Z",
    "body": "# 背景\nクラスタ数の設定の一手間を減らしたい\n\n# 提案内容\n- クラスタ数について「この設定にする」を押さないと推奨設定通りにならず、そのことが詳細画面を開かないとわかりにくい\n- クラスタ数のデフォルト値より小さい件数のCSVを取り込んだ時、先に進もうとするとアラートが出てくれるのは嬉しいが、それなら最初から推奨設定をセットして欲しい\n",
    "type": "issue"
  },
  {
    "id": 2991086810,
    "number": 302,
    "title": "[FEATURE]「公開」ボタンを押した時の効果を分かりやすくする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/302",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:51:12Z",
    "updated_at": "2025-04-19T06:05:02Z",
    "body": "# 背景\nキャプションが「公開」の状態のボタンを押すと非公開になり、「非公開」の状態のボタンを押すと公開になる。\nキャプションの意味は現在の状態であってボタンを押した時に発生するアクションではないので間違ってはいないのだが、\nclient-adminでもclientでも大抵のボタンのキャプションは押した時のアクションに近いので、やや紛らわしい。\n\n# 提案内容\n- 案1：マウスオーバー中のみ「非公開にする」「公開にする」などのヒントを表示する\n- 案2：マウスオーバー中のみ逆の状態の見た目にする\n- 案3：ボタンからスイッチに変える\n- 案4：ボタンからチェックボックスに変える　＊この場合、「非公開にする」チェックの方が自然かも",
    "type": "issue"
  },
  {
    "id": 2990914996,
    "number": 296,
    "title": "[FEATURE]LLM出力形式の揺らぎによる抽出エラー",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/296",
    "user": "nishio",
    "created_at": "2025-04-13T01:22:24Z",
    "updated_at": "2025-04-21T15:11:43Z",
    "body": "# 背景\nLLMからの応答が、プロンプトで期待したJSON形式（例: 文字列リスト [str]）と異なる形式（例: オブジェクトリスト [{“意見”:str, “トピック”:str}]）で返ってくることがあり、データ抽出が失敗したり、抽出される意見数が少なくなったりする。\n\n「Rate limitかと思われた抽出データが少ない事例の一つにおいて、JSON List[str]ではなく[{“意見”:str, “トピック”:str}]が返っていたせい(nishio)」\n「これのせいで抽出されるデータが減るのは困るし、それに多分ユーザは気づけなくて「こんなもんか〜」となりそう」\n\n# 解決策\n\nプロンプトを改善し、出力形式の指示をより明確かつ堅牢にする。\n\nLLMからの応答をパースする際に、期待する形式以外もある程度許容する、またはエラーハンドリングを強化して異常を検知できるようにする。",
    "type": "issue"
  },
  {
    "id": 2990911889,
    "number": 295,
    "title": "OpenAI API Rate Limit関連の問題",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/295",
    "user": "nishio",
    "created_at": "2025-04-13T01:19:38Z",
    "updated_at": "2025-04-18T04:23:42Z",
    "body": "## 課題\n\n広聴AIのレポート生成プロセスにおいて、OpenAI API の Rate Limit (利用制限) に起因する問題が複数発生しています。\n\n1.  **Rate Limit によるエラー頻発 (特にTier1ユーザー):**\n    *   OpenAI API を使い始めたばかりのユーザー (Usage tier が Tier 0 や Tier 1) は、分間あたりのリクエスト数 (RPM) やトークン数 (TPM) の制限が非常に厳しいです。\n    *   そのため、数百件程度のコメントデータであっても、レポート生成中に RateLimitError (HTTPステータスコード 429) が頻発し、処理が遅延したり失敗したりします。\n    > 「OpenAI始めたばかりだとTier1問題」\n    > 「300コメント程度でもrate limitが出る」\n    > (大量のRateLimitErrorログ引用: `ERROR:root:Task ... failed with error: Error code: 429 - {'error': {'message': 'Rate limit reached for gpt-4o-mini ...` )\n\n2.  **Rate Limit エラー発生時の不完全なレポート生成:**\n    *   現在の実装では、Rate Limit エラーが発生しても、処理は停止せず続行されます。\n    *   リトライが上限に達した場合、該当部分のデータ取得（例: クラスタラベルの生成）がスキップされ、結果として一部の情報が欠落した「不完全なレポート」がエラー表示なく生成されてしまうことがあります。\n    *   ユーザーは、Rate Limit が原因であることや、レポートが不完全であることに気づきにくい状態です。\n    > 「エラーでラベル名が取得できませんでしたが複数現れた」\n    > 「今回のケースでは、ラベル名のみ生成に失敗していた」\n    > 「rate limit errorが出るもののうごいているので、処理は正常にされたと思っていましたが、どうやらリトライされず一部エラーになったまま処理が終了されちゃったみたいです」\n    > 「中途半端に抽出されたレポートができるのは不適切なので、rate limitの時にエラーとしてスルーしないようにする必要がある(nishio)」\n\n## 解決策案\n\n**1. Rate Limit エラー頻発への対策:**\n\n*   **指数バックオフ付きリトライ処理の実装:** API呼び出し部分で RateLimitError (429) を検知した場合、待機時間を指数関数的に増やしながら、複数回（上限を設定して）API呼び出しを再試行する処理を実装します。\n*   **ドキュメントでの周知:** README などに以下の情報を記載します。\n    *   OpenAI API の Rate Limit の存在と Tier システムについて。\n    *   自分のアカウントの Tier と Limit を確認する方法（OpenAI Platform の設定画面へのリンク）。\n    *   Tier を上げるための条件（例: 一定額の支払いと利用期間）と公式ドキュメントへのリンク。「Rate limits - OpenAI API」「RateLimitError | OpenAI Help Center」\n*   **(検討) 代替APIへの対応:** OpenRouter など、Rate Limit が比較的緩い、または管理しやすい API サービスへの対応を検討します。「OpenRouter APIにするのも候補の一つ。」\n*   **(検討) 意図的な待機時間の挿入:** API リクエスト間に短い sleep を入れることで、瞬間的なリクエスト集中を緩和します。\n\n**2. 不完全なレポート生成の防止:**\n\n*   **エラーハンドリングの強化:** Rate Limit エラーが発生し、上記のリトライ処理を行っても成功しない場合は、**処理をスキップせずにレポート生成プロセス全体を明確なエラーとして中断・失敗させる**ように修正します。これにより、ユーザーは問題発生を確実に認識でき、不完全なデータが出力されることを防ぎます。\n    *   リトライ回数には上限を設定し、無限ループ（や無限課金）を防ぎます。「無限リトライはしないので(元データがおかしい時に無限にお金を使う)3回くらい試して先に進んでるかと(nishio)」",
    "type": "issue"
  },
  {
    "id": 2990889159,
    "number": 294,
    "title": "[FEATURE]ラベルが多い時の重なりの問題",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/294",
    "user": "nishio",
    "created_at": "2025-04-13T00:59:47Z",
    "updated_at": "2025-04-16T10:48:29Z",
    "body": "## 課題\n\n広聴AIのレポート画面に表示されるプロットグラフにおいて、分析によって生成されたクラスタ（意見グループ）の数が多い場合に、各クラスタを示すラベルが互いに重なり合ってしまい、判読が困難になるという問題があります。\n\n特に、自治体での利用など、詳細な分析のためにクラスタを細かく分ける傾向がある場合に、この見にくさが顕著になります。\n> 「自治体的には、クラスタを細かく分ける方向の議論が強い。」\n> 「UIの観点で、プロットグラフがそれに対応していけるとよさそう。」\n> 「ラベルは重なって見にくくならないようにできるとか」\n\n現状のままでは、せっかく詳細に分類された意見グループの内容を、グラフ上で直感的に把握することが難しくなっています。\n\n## 解決策案\n\nグラフ上でのラベルの重なりを軽減し、視認性を向上させるために、以下のいずれか、または組み合わせによる改善策を検討します。\n\n*   **ラベル表示の選択的ON/OFF:** ユーザーが表示したいラベルを選択したり、一定数以上のラベルはデフォルトで非表示にする機能を追加する。\n    > 「ラベル全部は表示しない設定」\n*   **重なり回避アルゴリズムの導入:** ラベルの位置を自動的に調整し、重なりを最小限に抑えるアルゴリズムを実装する。\n*   **インタラクティブなラベル操作:** ユーザーがグラフ上でラベルをドラッグ＆ドロップして任意の位置に移動できるようにする。\n*   **ズームレベルに応じた表示制御:** グラフの拡大率に応じて、表示するラベルの数を調整する（例: 縮小時は主要なラベルのみ表示）。",
    "type": "issue"
  },
  {
    "id": 2990887157,
    "number": 293,
    "title": "[FEATURE]レポート表示画面上で、使用したプロンプトを直接編集可能にする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/293",
    "user": "nishio",
    "created_at": "2025-04-13T00:58:21Z",
    "updated_at": "2025-04-15T03:22:53Z",
    "body": "## 課題\n\n現在、生成された広聴AIレポートの内容（特に要約文言など）に不満があり修正したい場合、以下の手順を踏む必要があり、手間と時間がかかります。\n\n1.  Admin Dashboard画面に戻る。\n2.  対象のレポートを探して複製する。\n3.  複製したレポートの設定（主にプロンプト）を調整する。\n4.  再度レポート生成を実行する。\n\n> 「ユーザーとして、広聴AIレポート画面で出力された成果物に不満があり作り直したい場合に、手間と時間がかかる（Admin Dashboard画面に戻り、レポートを複製し、文言調整を行う。1度の修正ごとにレポートが1枚のレポートを生成する必要がある）」\n\n特に、プロンプトの微調整を繰り返して最適な出力結果を得たい場合、この往復作業は大きな負担となります。\n\n## 提案\n\nレポート表示画面（例: `http://localhost:5173/reports/{report_id}`）に、そのレポート生成に使用されたプロンプトを表示し、**直接編集および更新（再生成）** できる機能を追加します。\n\n**具体的な流れ:**\n\n1.  レポート表示画面の下部など（例: 現状「分析手順」が表示されている箇所）に、編集可能なプロンプト入力欄を表示する。\n2.  ユーザー（※後述の権限者のみ）がプロンプトを編集する。\n3.  「更新して再生成」のようなボタンをクリックすると、編集後のプロンプトを使用してレポートの再生成処理が開始される。\n4.  レポート表示画面が更新され、新しい結果が表示される。\n\nこれにより、Admin Dashboardに戻ることなく、試行錯誤しながらレポートの質を効率的に向上させることが可能になります。（参考: TTTCTurboのレポート画面における同様の機能）\n> 「TOBE：利用したプロンプトを編集、更新できる（参考TTTCTurboのレポート画面）」\n\n## 考慮事項\n\n*   **権限管理:** 広聴AIでは、レポートの作成権限を持つユーザーと閲覧権限のみを持つユーザーが存在する想定です。プロンプトの編集・再生成機能は、**レポート作成権限を持つユーザーのみ**が利用できるように制限する必要があります。閲覧権限のみのユーザーには、プロンプトの表示は行うかもしれませんが、編集・再生成ボタンは表示しない、または無効化するなどの制御が必要です。\n*   **コスト:** レポートの再生成にもLLM APIのコストが発生するため、実行前に確認を促すなどのUI上の配慮が必要になる可能性があります。\n*   **UI/UX:** プロンプト編集エリアのデザイン、再生成中のステータス表示方法などを検討する必要があります。\n",
    "type": "issue"
  },
  {
    "id": 2990880118,
    "number": 292,
    "title": "[DOCUMENT]OpenAI APIの課金設定に関する混乱",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/292",
    "user": "nishio",
    "created_at": "2025-04-13T00:52:56Z",
    "updated_at": "2025-04-19T10:33:53Z",
    "body": "# 現在の問題点\n非エンジニアにとって、OpenAI APIキーの取得と課金設定（クレジット購入）が必要であることが分かりにくく、ChatGPT Plusと混同しやすい。設定不備によりQuota超過エラー (429) が発生する。\n\n「OpenAIの課金の設定してなかった」\n「Error code: 429 - 'You exceeded your current quota, please check your plan and billing details.'」\n「非エンジニアの場合、環境を設定した際にOpenAI APIに課金するというステップがわからない(たねのぶ)」\n「OpenAIに課金=ChatGPT Plusだと思う人もいる」\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n(解決策) READMEに、OpenAI APIキーの取得手順と、ChatGPT Plusとは別にAPI利用のためのクレジット購入（支払い方法登録）が必要であることを明記する。Quota超過エラーの意味と対処法も説明する。\n",
    "type": "issue"
  },
  {
    "id": 2990878839,
    "number": 291,
    "title": "[DOCUMENT].envファイルの不可視問題 (Mac Finder)",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/291",
    "user": "nishio",
    "created_at": "2025-04-13T00:51:49Z",
    "updated_at": "2025-04-19T10:33:32Z",
    "body": "# 現在の問題点\nMacのFinderでは .env ファイルがデフォルトで非表示のため、cp example.env .env を実行した後、ファイルを見つけられないユーザーがいる。\n\n「.env見つからない」\n「Sampleからコピーしてきたとき、それをVScodeで開こうとするときに見つからない」\n「隠しファイルをfinderで開こうとしていた」\n\n\n# 提案内容\n\nREADMEで、FinderではなくVSCodeなどのエディタでプロジェクトフォルダを開いて .env ファイルを編集することを推奨する。「実はFinder経由でどうこうするよりVSCodeでフォルダを開いてしまうほうが良かった」\n",
    "type": "issue"
  },
  {
    "id": 2990876385,
    "number": 290,
    "title": "[FEATURE]階層図のUI/UX改善",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/290",
    "user": "nishio",
    "created_at": "2025-04-13T00:49:58Z",
    "updated_at": "2025-04-16T16:31:25Z",
    "body": "# 背景\n階層図の操作性や情報表示に改善の余地がある (クリック操作の分かりにくさ、表示リセット、親子関係不明瞭、命名規則、戻るボタン欠如)。\n\nfrom 4/12 meetup\n>「階層図のギミックを確認、初見でクリックによって深層に移動できることがわからなかった。」\n「全体図、濃い意見グループ、階層図を行き来するときに階層図の表示がリセットされなくなるとうれしい。」\n「濃い意見グループで上がってきているクラスタが第一階層？のクラスタのどれに属すのかがわかるとうれしい。」\n「階層図の第一階層？第二階層の名前が決まっていると嬉しい。」\n「「１階層前に戻る」ボタンがあると助かります」\n\n# 提案内容\n(解決策) クリック操作のガイド表示、表示状態の保持、親子関係の明示（例: パンくずリスト）、階層命名規則の明確化、戻るボタンの追加など、UIを改善する。\n",
    "type": "issue"
  },
  {
    "id": 2990845213,
    "number": 289,
    "title": "[FEATURE]exe形式での配布によるインストール簡略化",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/289",
    "user": "nishio",
    "created_at": "2025-04-13T00:24:58Z",
    "updated_at": "2025-04-18T02:33:57Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n現状の広聴AIはDockerとGitの知識・インストールが前提となっており、特にITスキルやセキュリティ制限のある自治体ユーザーにとっては導入のハードルが高い。\n\n>「Dockerのインストールが認められてない（情シス部門の理解が必要）」「自治体関係者の中でのアーリーアダプターたちが試す際に、最初の①リポジトリをクローン」段階で既にかなり大きなハードルになっている。」\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n\n(解決策案) アプリケーションを単一の実行ファイル（.exe形式）にパッケージ化し、DockerやGitのインストール、コマンドライン操作を不要にすることを検討する。\n\n>「exe化は難しいだろうか？(たねのぶ)」。\n\nこれにより、ダブルクリック等で簡単に起動でき、非エンジニアやセキュリティ制限のある環境でも利用しやすくなる可能性がある。ただし、技術的な実現可能性や配布ファイルサイズなどの課題も考慮する必要がある。\n\n\n(nishioコメント) DockerやGitを「インストールできるが難しい」のケースには有効かも。「Dockerのインストールが認められてない」の場合、広聴AI.exeが作られたところでそれのインストールが認められないのではという気がする。",
    "type": "issue"
  },
  {
    "id": 2990818818,
    "number": 287,
    "title": "[DOCUMENT]Windows向けのセットアップ手順",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/287",
    "user": "nishio",
    "created_at": "2025-04-13T00:02:52Z",
    "updated_at": "2025-04-19T10:17:49Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n## 課題\n\n現在の `README.md` は主にUNIX系（Linux, macOS）環境を前提としており、Windowsユーザーが広聴AIをセットアップする際に特有の課題に直面することが多いです。\n\n*   **必須ツールのインストールと設定:** Docker DesktopやGit for Windowsのインストール、特に環境変数Pathの設定 (`'git' は、内部コマンドまたは外部コマンド...`) やWSL連携で躓く可能性がある。\n*   **改行コードの問題:** クローン時に適切に対応しないと、シェルスクリプト (`entrypoint.sh`) 実行時にエラーが発生する。\n*   **コマンドの違い:** `cp` コマンドなど、コマンドプロンプトとPowerShellでの違いに戸惑う可能性がある。\n*   **隠しファイル:** `.env` ファイルがデフォルトで非表示のため、作成・編集時に混乱が生じやすい。\n*   **Docker関連のエラー:** `npm ci` エラー、ポート競合 (`port is already allocated`)、証明書エラーなど、Windows環境固有または頻出する可能性のあるエラーへの対処法が不明確。\n\nこれらの問題により、特に非エンジニアやITスキルに不安のあるWindowsユーザーにとって、導入のハードルが高くなっています。「WindowsユーザーはDocker Desktopのダウンロードからはじまる」「GithubのREADMEは現在UNIX系前提?」「'git' は、内部コマンドまたは外部コマンド...」「パスを通すという困難な作業」「entrypoint.shの5行目でエラー。改行コードの関係」「.env見つからない」「Powershellでないとないかも。cmdではない」\n\n## 提案\n\nWindowsユーザー向けの専用セットアップガイドを `README.md` に追記、または別ドキュメントとして作成する。\n\n**含めるべき内容:**\n\n1.  **必要なソフトウェア:**\n    *   Docker Desktop (インストール方法、wingetコマンド例、注意点: セキュリティポリシー、WSL/ログインエラー)\n    *   Git for Windows (インストール方法、wingetコマンド例、**Path設定の重要性**、確認方法)\n    *   (推奨) テキストエディタ (VSCodeなど)\n2.  **セットアップ手順:**\n    *   リポジトリのクローン (**`--config core.autocrlf=false`** オプションの明記)\n    *   `.env` ファイルの作成 (Windowsコマンド: `copy` / `cp`、**隠しファイル問題**とVSCodeでの編集推奨)\n    *   アプリケーションの起動 (**`docker compose up`** コマンドの明記、初回ビルド時間について)\n3.  **よくある問題と対処法 (Windows向け):**\n    *   `git` コマンドが見つからない → Path設定の確認\n    *   `entrypoint.sh` エラー → 改行コード問題の確認と再クローン\n    *   `npm ci` エラー → (現状考えられる原因や再試行)\n    *   証明書エラー → セキュリティソフトの確認\n    *   ポート競合エラー → 他コンテナ停止 or ポート変更\n    *   `.env` ファイルが見つからない → 隠しファイル設定 or VSCode利用\n    *   コマンドの違い (`cp` vs `copy`)\n4.  **トラブルシューティングTips:**\n    *   エラーメッセージをLLMに質問するなどの自助努力の方法提示\n\nこれにより、Windowsユーザーがスムーズにセットアップを完了できるよう支援し、利用者の裾野を広げることを目指します。\n\n# 仮原稿\n## はじめに\nこのドキュメントは、Windows環境で広聴AIのセットアップを行うユーザー向けの手順と注意点をまとめたものです。現在の公式READMEは主にUNIX系（Linux, macOS）環境を前提としているため、Windows特有の考慮事項があります。\n\n## 必要なソフトウェア\nセットアップには以下のソフトウェアが必要です。事前にインストールしてください。\n\n1.  **Docker Desktop:**\n    *   公式サイトからダウンロードしてインストールします。\n    *   `winget install -e --id Docker.DockerDesktop` コマンドでもインストール可能です。\n    *   インストール後、Docker Desktopを起動し、必要な初期設定（WSL連携など）を完了させてください。\n    *   **注意:** 自治体PCなどでは、セキュリティポリシーによりインストールが許可されていない場合があります。情報システム部門にご確認ください。\n    *   **注意:** Googleアカウントでのログイン時やWSLアップデート時にエラーが発生することが報告されています。エラーメッセージに従って対処するか、IT管理者に相談してください。「Docker、Googleアカウントにてログイン時にエラー。」「wsl update failed: update failed: updating wsl: exit code: 1...」\n\n2.  **Git for Windows:**\n    *   公式サイトからインストーラーをダウンロードしてインストールします。「Git for Windows Portable」ではなく、通常のインストーラー版を使用してください。\n    *   `winget install -e --id Git.Git` コマンドでもインストール可能です。\n    *   **重要:** インストール中に「Adjusting your PATH environment」の項目で、「Git from the command line and also from 3rd-party software」を選択することを推奨します。これにより、コマンドプロンプトやPowerShellから `git` コマンドが利用可能になります。\n    *   **パス設定確認:** インストール後、コマンドプロンプトまたはPowerShellを開き、`git --version` を実行してバージョン情報が表示されればOKです。表示されない場合（「'git' は、内部コマンドまたは外部コマンド...として認識されていません。」エラー）、環境変数のPathにGitの実行ファイルパス（例: `C:\\Program Files\\Git\\cmd`）を手動で追加する必要があります。「パスを通すという困難な作業」 - 不明な場合はChatGPT等で「Windows 環境変数 パス 通し方」などで検索・質問してください。\n\n3.  **(推奨) テキストエディタ:**\n    *   VSCodeなどのテキストエディタがあると、設定ファイルの編集に便利です。\n\n## セットアップ手順\n\n1.  **リポジトリのクローン (改行コード問題対策):**\n    *   コマンドプロンプトまたはPowerShellを開き、作業したいディレクトリに移動します。\n    *   以下のコマンドを実行して、リポジトリをクローンします。`--config core.autocrlf=false` オプションは、WindowsとLinux/macOS間の改行コードの違いによるエラー (`entrypoint.sh` 関連など) を防ぐために重要です。\n        ```bash\n        git clone --config core.autocrlf=false https://github.com/digitaldemocracy2030/kouchou-ai.git\n        ```\n    *   クローンした `kouchou-ai` ディレクトリに移動します。\n        ```bash\n        cd kouchou-ai\n        ```\n\n2.  **環境設定ファイルの作成:**\n    *   `example.env` ファイルをコピーして `.env` ファイルを作成します。PowerShellでは以下のコマンドで実行できます。\n        ```powershell\n        cp example.env .env\n        ```\n        (コマンドプロンプトの場合は `copy example.env .env`)\n    *   **注意:** `.env` は隠しファイル属性が付くことがあります。Windowsのエクスプローラーで表示されない場合は、「表示」タブ -> 「隠しファイル」にチェックを入れるか、VSCodeなどのエディタで `kouchou-ai` フォルダを開いて `.env` ファイルを編集してください。「.env見つからない」「隠しファイルをfinderで開こうとしていた」\n    *   `.env` ファイルを開き、OpenAI APIキーなどの必要な設定値を記述します。\n\n3.  **アプリケーションの起動:**\n    *   Docker Desktopが起動していることを確認します。\n    *   `kouchou-ai` ディレクトリ内で、以下のコマンドを実行します。**ハイフンなしの `docker compose up` を使用してください。**\n        ```bash\n        docker compose up\n        ```\n    *   初回起動時は、Dockerイメージのダウンロードとビルドに時間がかかります（数分～十数分程度）。「Docker imageがない状態でdocker compose upすると500s以上かかる」\n    *   ビルドと起動が正常に完了すると、ログの最後に `Application startup complete.` のようなメッセージが表示され、Webブラウザで `http://localhost:3000` (Admin Dashboard) と `http://localhost:5173` (レポート画面) にアクセスできるようになります。\n\n## よくある問題と対処法\n\n*   **`git` コマンドが見つからない:**\n    *   Git for Windowsのインストール時にパス設定が適切に行われなかった可能性があります。上記「必要なソフトウェア」のGitの項目を確認し、環境変数Pathを修正してください。\n*   **`entrypoint.sh` 関連のエラー:**\n    *   改行コードの問題である可能性が高いです。上記「リポジトリのクローン」の手順に従い、`--config core.autocrlf=false` オプション付きでクローンし直してください。\n*   **`docker compose up` 中の `npm ci` エラー:**\n    *   `[client-admin builder ... ] RUN npm ci` でエラーが発生する場合があります。(ログ参照) 根本的な解決策はログに記載されていませんが、ネットワーク環境やDockerのリソース割り当てなどが影響している可能性があります。時間をおいて再試行するか、Docker Desktopの設定を見直してください。\n*   **`docker compose up` 中の証明書エラー (`uv` など):**\n    *   会社のセキュリティソフトなどがDocker内の通信をブロックしている可能性があります。「自治体のセキュリティによってuvのインストール時に証明書エラーがおきた」一時的にセキュリティソフトを無効にするか、Docker関連の通信を許可する設定を行ってください。\n*   **`Bind for 0.0.0.0:3000 failed: port is already allocated` エラー:**\n    *   ポート3000が他のアプリケーション（他のDockerコンテナ等）によって既に使用されています。「原因：3000ポートをすでに使っているdocker containerが立ち上がっていた」他のアプリケーションを停止するか、`.env` ファイルで `APP_PORT` を別の番号（例: `3001`）に変更してください。\n*   **`.env` ファイルが見つからない/編集できない:**\n    *   隠しファイルになっている可能性があります。上記「環境設定ファイルの作成」の注意点を確認してください。VSCodeでフォルダを開くのが確実です。\n*   **コマンドプロンプトで `cp` コマンドが使えない:**\n    *   `cp` はPowerShellのコマンドです。コマンドプロンプトでは `copy` を使用してください。もしくはPowerShellを起動して作業してください。「Powershellでないとないかも。cmdではない」\n\n## トラブルシューティングTips\n*   エラーが発生した場合、表示されたエラーメッセージ全体をコピーし、ChatGPTなどのLLMに貼り付けて「このエラーの原因と解決策を教えてください」と質問すると、具体的な解決策が見つかることがあります。「エラーが出たら内容張り付けて「エラーでた助けて」といえばほぼほぼ解決もしてくれます。」\n",
    "type": "issue"
  },
  {
    "id": 2990635491,
    "number": 283,
    "title": "[BUG]ScatterChartの全画面表示で要約文が「全画面終了」ボタンの後ろに隠れないようにする処理が不安定",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/283",
    "user": "masatosasano2",
    "created_at": "2025-04-12T18:36:39Z",
    "updated_at": "2025-04-15T03:39:37Z",
    "body": "### 概要\nIssue #278 が PR #282 で修正されたが、以下の課題が残ったため本Issueに切り出された。\n\nPR #282 の修正内容\n![Image](https://github.com/user-attachments/assets/a7a1bd58-febe-4993-a49a-2612b1c90ec9)\n\n残課題\n![Image](https://github.com/user-attachments/assets/3d080c1d-1502-4b09-8aca-fb2c1fdb9e52)\n\n### 再現手順\n\n1. 「全体図」または「濃い意見グループ」モードを選択する\n2. 「全画面表示」ボタンを押す\n3. ブラウザのサイズを極力小さくする\n4. 画面上部の、右端より少し左側あたりでマウスを動かし続ける\n\n### 期待する動作\n\n要約文が「全画面終了」ボタンの後ろに隠れない（正確には、隠れたままにならない）ようにする\n",
    "type": "issue"
  },
  {
    "id": 2987877642,
    "number": 280,
    "title": "[FEATURE] テスト用のパブコメデータをCSV化する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/280",
    "user": "ei-blue",
    "created_at": "2025-04-11T07:59:01Z",
    "updated_at": "2025-04-21T08:45:26Z",
    "body": "コードには直接関係ないですが、TODOメモとしてイシューにしておきます。\n（これはFeatureじゃなくてDocumentなんですかね？）\n\n# 背景\n- 自治体での活用を想定して、CSVモード（パブコメモード）を実装した\n- 大量のデータに対してクラスタリングが適切に機能することを確認するため、実際のパブコメデータに対して実験を行いたい\n- そのためのデータ整備をする必要\n\n# 提案内容\n- 最近の件数多めのパブコメとして、以下の資料に含まれる意見をCSVにする\n- やり方はなんでもあり。Pythonを練習したい人にもいいかも。\n環境省\n[除去土壌](https://public-comment.e-gov.go.jp/servlet/Public?CLASSNAME=PCM1040&id=195240105&Mode=1)\n経産省\n[第７次エネルギー基本計画](https://public-comment.e-gov.go.jp/pcm/1040?CLASSNAME=PCM1040&id=620224019&Mode=1)\n内閣府\n[「「新型インフルエンザ等対策政府行動計画」（案）](https://public-comment.e-gov.go.jp/servlet/Public?CLASSNAME=PCM1040&id=060512703&Mode=1)",
    "type": "issue"
  },
  {
    "id": 2982893942,
    "number": 271,
    "title": "[DOCUMENT] 静的ファイルのホスティング手順のドキュメント化",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/271",
    "user": "nasuka",
    "created_at": "2025-04-09T13:48:25Z",
    "updated_at": "2025-04-19T08:57:57Z",
    "body": "# 現在の問題点\n* static exportで出力したhtmlファイルを、ユーザー（出力者）がどのようにホスティングすべきかわからないことがある\n  * ホスティングには一定のソフトウェアエンジニアリングの知識が必要\n\n# 提案内容\nホスティング方法に関するマニュアルを記載する\nホスティングするサービスの候補としては以下がありそう？\n\n* Github Pages\n  * issue起票済み\n    * https://github.com/digitaldemocracy2030/kouchou-ai/issues/235\n  * 無料で利用可能  \n  * 認証がかけられないのがネックになる可能性がある\n* Netlify\n  * 認証をかけられる & 設定も比較的容易なので、Netlifyを採用できる組織・ユーザーであれば、機能としては恐らくこちらが要件に適しているケースは多そう\n  * ただし、そもそも利用者側でNetlifyを契約できない可能性がある\n* AWS/Azure\n  * 元々これらのクラウドサービスを契約しているのであれば、利用者側での導入は最も容易だと思われるが、設定としてはGithub Pages/Netlifyよりも複雑になりそう\n\n\nAWS/Azureでのニーズがどの程度あるのか見えていないので、一旦Github Pages/Netlifyあたりの手順をまとめられると良さそう？",
    "type": "issue"
  },
  {
    "id": 2981664009,
    "number": 269,
    "title": "（アルゴリズム検証） 広聴AIで出力したクラスタのタイトルが抽象的になる問題の解決",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/269",
    "user": "nasuka",
    "created_at": "2025-04-09T06:22:31Z",
    "updated_at": "2025-04-16T08:03:33Z",
    "body": "# 背景\n広聴AIで出力した第一階層のクラスタタイトルが、TTTCのタイトルと比べて具体性に欠けるという声がある。\n \n衆院選のデータセットでクラスタタイトルを出力した例を以下に記載する。クラスタ数はどちらも15で設定している。\n本来はクラスタに属するデータ点との整合性なども含めて議論するのが理想だが、こちらではクラスタの抽象度についてのみ議論する。\n\n### TTTCの出力結果\nレポートのURL: https://news.ntv.co.jp/static/shugiinsenkyo2024/closed-1027/index.html\n\n選挙結果への関心と不安\n立憲民主党の支持増加と自民党への批判\n過半数割れの可能性と連立政権の模索\n投票率と市民参加の重要性\n候補者の当選とその影響\n選挙特番のエンタメ化\n国民民主党と立憲民主党の議席増加への注目\n議員の落選に対する反応\n石破氏の責任問題\n政権交代の可能性\n地域別支持動向\n和歌山2区の選挙結果\n選挙結果の誤報や虚偽情報への懸念\nれいわ新選組の躍進と支持拡大への関心\n出口調査結果への関心と懐疑\n\n\n### 広聴AIの出力結果\n\n選挙結果と政治倫理に対する多様な反応と期待\n地域別選挙動向と多様な反応\n選挙に対する多様な関心と報道の影響\n選挙参加と投票率に関する多様な視点と期待\n選挙における政党の躍進と略称問題に対する多様な反応\n衆院選結果に対する多様な反応と政治的期待\n選挙における政党批判と有権者の多様な視点\n選挙報道とスポーツ中継の視聴体験とメディアの役割\n選挙結果の信頼性と世襲政治に対する多様な反応\n日本の政治再編と選挙結果の影響\n石破政権の持続性と自民党の未来に対する懸念と期待\n日本の政治情勢における政党支持の変動とその影響\n衆院選後の政治的再編と連立政権の行方\nれいわ新選組の議席増加に対する多様な反応と期待\n選挙における政権交代と地域政党の影響に関する多様な視点\n\n\n感覚的だが、TTTCの出力結果が具体的な行動・現象や固有名詞（個人名・政党名等）がクラスタ名に含まれる傾向がある一方で、広聴AIの方は抽象性の高いタイトルがついているケースが多い。\n一概にどちらが悪いといえるものはないが、実用性を考えるとTTTC程度の抽象度で記載されている方が有用な場合がある。\n\nなお、o3-miniでも評価したが、同様の評価が記載されている。\nhttps://chatgpt.com/share/67f60d38-43b4-800f-a20f-3836dbfa4518\n\n![Image](https://github.com/user-attachments/assets/00a6bc92-5a48-4237-8da8-72be1dfbc1e5)\n\nこのような差分が生まれる要因として、以下が想定される。\n\n* クラスタリングアルゴリズムの違い\n  * 広聴AIではk-meansで第二階層のクラスタを形成した後にクラスタをマージして第一階層を形成するが、TTTCではspectral clusteringでクラスタを形成する\n* クラスタリング時に用いる埋め込みの次元の違い\n    * 広聴AIではUMAP後の2次元でクラスタリングを行っているが、TTTCでは元のembeddingでクラスタリングを行っている\n      * 二次元空間上で飛び地ができるのを防ぐために広聴AIではこのような実装となっている\n* プロンプトの違い\n  * （アルゴリズムの違いに依存する話だが）広聴AIでは、第二階層のクラスタのタイトル・説明と、サンプリングしたクラスタに属するデータのテキストの情報に基づいて第一階層のタイトル・説明を生成している。一方でTTTCでは、下層のクラスタタイトル・説明を用いていない。\n    * 下層のクラスタのタイトル・説明を包含するように指示しているため、抽象的なタイトルが生成されている可能性がある。\n\n\n# 提案内容\nプロンプトレベルでの修正と、アルゴリズムレベルでの修正がある。\n\n## プロンプトレベルでの修正\n1. デフォルトプロンプトの文言のチューニング・修正\n2. プロンプトに入力する情報の修正\n    例. 下層のタイトル・説明は含めずに、純粋にデータ点の情報だけ入力して第一階層のタイトル・説明を生成する\n\n\n## アルゴリズムレベルでの修正\n1. 元の埋込を用いてクラスタリングする\n2. k-means以外のアルゴリズム（spectral clustering, hdbscan）を採用する\n",
    "type": "issue"
  },
  {
    "id": 2973973916,
    "number": 235,
    "title": "[DOCUMENT] README に GitHub Pages で公開する手順を記載する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/235",
    "user": "shgtkshruch",
    "created_at": "2025-04-05T07:07:57Z",
    "updated_at": "2025-04-21T13:57:35Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- client を static build して GitHub Pages で公開する場合、ビルドしたファイルをアップロードすると一部のコードが動かない\n  - 原因: GitHub Pages で動いている Jekyll が `_` から始まるファイルやディレクトリを無視するため、static build 後の `_next` 以下のファイルが 404 になる\n    - https://github.blog/news-insights/the-library/bypassing-jekyll-on-github-pages/\n  - `.nojekyll` というファイルをルートに置くと動くようになるが、この挙動は知らない人が多そうで GitHub Pages で公開する人が同じ罠にハマる可能性がある\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- README の静的ファイル出力のセクションに、GitHub Pages で公開する場合の手順を記載する\n  - ルートに `.nojekyll` ファイルを追加することもここに記載する",
    "type": "issue"
  },
  {
    "id": 2966115761,
    "number": 220,
    "title": "[FEATURE] frontからstaticなHTMLファイルをexportしてDownloadできるようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/220",
    "user": "takahiroanno",
    "created_at": "2025-04-02T11:43:27Z",
    "updated_at": "2025-04-21T12:34:11Z",
    "body": "# 背景\n* static exportが実装されたが、現在はCLIで実行することしかできず、Webアプリ上で実行できない\n  * `make client-build-static` を実行するとCLIではstatic exportができる\n  * 参考\n    * https://github.com/digitaldemocracy2030/kouchou-ai/pull/198\n    * https://github.com/digitaldemocracy2030/kouchou-ai/pull/195\n\n\n# 提案内容\n* adminの一覧画面で、static exportを実行できるようにする",
    "type": "issue"
  },
  {
    "id": 2945409451,
    "number": 170,
    "title": "[FEATURE]ファクトチェック機能の実装",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/170",
    "user": "nasuka",
    "created_at": "2025-03-25T06:18:39Z",
    "updated_at": "2025-04-17T14:14:26Z",
    "body": "# 背景\n* 入力ファイル内のコメントが虚偽の場合がある\n  * e.g. 「◯◯という人物が✗✗という発言をしていたが大変嘆かわしい」というコメントがあったとして、現状ではこのコメントの真偽に関わらずコメントが分析結果に組み込まれてしまう\n\n# 提案内容\n* 個別のコメント（or 意見）についてファクトチェックを行う\n* クラスタリングやクラスタ説明文の生成時にファクトチェックの結果を組み込み\n  * 組み込む方法はいくつかパターンがありそう\n    * 1. 虚偽と判定されたargumentはクラスタ生成以降のプロセスで除外する\n    * 2. クラスタタイトルや説明文生成時に、argumentのテキストだけでなくファクトチェックの結果（真偽）も入力して生成を行う\n    * 3. 散布図上でargumentをホバー表示する際に、虚偽の疑いがあるargumentはそのことが分かるように表示を変える\n  * ↑は一例だが、実現方針の具体化からassigneeの方にやっていただけるとありがたい\n\n# 進め方\n* いきなり機能を実装するのではなく、プロダクトとは独立してスクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n  * 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、実験結果より自動評価が機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n",
    "type": "issue"
  },
  {
    "id": 2945124654,
    "number": 144,
    "title": "[FEATURE]LLMによるクラスタ品質の自動評価（実験）",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/144",
    "user": "nasuka",
    "created_at": "2025-03-25T03:36:54Z",
    "updated_at": "2025-04-16T08:24:30Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/143\n\n* こちらのイシューは上記のサブイシュー\n\n\n# 提案内容\n* LLMによるクラスタ品質の自動評価の実験を行う\n  * 出力されたクラスタタイトル・説明文・所属データ点の情報に基づいて、LLMでクラスタの品質を評価する\n* どのようなアプローチで評価するかは、assigneeの方におまかせする\n  * 例としては、例えば以下のような評価項目のスコアをLLMで出力するようなアプローチがある\n    * クラスタ内部の一貫性評価\n      * クラスタタイトル・説明文・所属データのテキストを入力し、一貫性を100点満点でスコアリングする\n    * クラスタ外部との分離度の評価\n      * クラスタAの情報（タイトルや所属データ等）と、重心の距離が最もAに近いクラスタBの情報をLLMに入力し、分離度を出力する\n",
    "type": "issue"
  },
  {
    "id": 2938766428,
    "number": 121,
    "title": "[BUG]縦長画面での散布図の表示がおかしい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/121",
    "user": "nishio",
    "created_at": "2025-03-21T15:32:58Z",
    "updated_at": "2025-04-21T15:37:37Z",
    "body": "### 概要\n\n<img width=\"453\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c20dbff2-454c-4b23-bf8b-973bcc6c96fd\" />\n\n\n横長の時の表示:\n<img width=\"1512\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1b7a062a-5413-4d24-b5f3-91cb81059d07\" />\n\n<!-- バグの簡潔な説明をお願いします -->\n\n### 再現手順\n\n1. 縦長画面で見る\n\n### 期待する動作\n\n- 理論的な理想を言うと、そもそもアスペクト比は1:1であるべき\n- 一方でそれにこだわって徹底した場合にみやすさが損なわれるのも問題がある\n- 縦長画面で見た場合はラベルの幅との干渉でアスペクト比が大きく狂っているのでそこだけでも直すか？\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2935293806,
    "number": 113,
    "title": "[REFACTOR] 濃いクラスタのアイコン変更",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/113",
    "user": "nishio",
    "created_at": "2025-03-20T12:20:30Z",
    "updated_at": "2025-04-22T05:54:23Z",
    "body": "# 現在の問題点\n\n<img width=\"249\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bc626d04-e7c0-4245-9b01-e762d433a434\" />\n\n濃いクラスタのアイコンは特に意味はなくこれになっている\n\n\n# 提案内容\n\n多分叩き台の案がないとどう変えたらいいかの議論もできないと思うので雑に描いておく\n\n![Image](https://github.com/user-attachments/assets/9e46dfd6-71d4-4c2b-bbd5-1c79220c8d80)\n\nアイコンとしてデザインできるかは度外視して描くとこんな感じで「全体像」は全体にたくさんの点が散らばっており、「濃いクラスタ」はぎゅっとした「濃い」「密度の高い」塊がいくつかある感じ",
    "type": "issue"
  },
  {
    "id": 2934407416,
    "number": 104,
    "title": "[FEATURE] ツールの利用状況を知る仕組み",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/104",
    "user": "shingo-ohki",
    "created_at": "2025-03-20T07:42:15Z",
    "updated_at": "2025-04-21T15:16:55Z",
    "body": "# 背景\nこのツールが様々なところで使われるようになった際に、現状想定している利用方法（各利用者がツールの環境を作って利用する）の場合、このツールの実際の利用状況を知る手段が少ない\n\n\n# 提案内容\n例えば、あらかじめドキュメントなどで説明した上で、レポート生成を行うたびに Google Analytics が設定された特定のURLにリクエスト（生成するレポートについての情報は含まない、ツールを使ったということが分かる情報のみ）を飛ばすようにしておくと、そのアクセス解析を行うことで、いつどこでレポート生成が行われたかを知ることができ、このツールの利用状況が得られるようになり、その情報を広報活動や開発に活用できる\n\nというのはどうでしょうか？",
    "type": "issue"
  },
  {
    "id": 2922751037,
    "number": 55,
    "title": "[FEATURE] 濃いクラスタのしきい値のデフォルト値をレポートごとに設定できるようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/55",
    "user": "nanocloudx",
    "created_at": "2025-03-16T03:55:36Z",
    "updated_at": "2025-04-21T15:51:42Z",
    "body": "# 背景\n現在の濃いクラスタのしきい値のデフォルト値はレポートごとに一律で固定値（上位20%・最小5件以上）となっている。\nレポート出力者が、出力結果を確認した上で、しきい値のデフォルト値を変更できると良い\n\n# 提案内容\n- client-admin にて、出力済みのレポートに対して、デフォルトのしきい値を追加保存できるようにする\n- client では濃いクラスタの初期表示が、レポート出力者の指定したしきい値になるようにする",
    "type": "issue"
  },
  {
    "id": 2899402452,
    "number": 24,
    "title": "[FEATURE]濃いクラスタを表示している際は、クラスタの説明文も濃いクラスタに合わせたい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/24",
    "user": "nasuka",
    "created_at": "2025-03-06T05:36:37Z",
    "updated_at": "2025-04-21T14:08:13Z",
    "body": "# 背景\n* 現状は濃いクラスタ表示した際も、全体図と同じクラスタの説明文が並んでいる（最上位層のクラスタが並んでいる）\n  * 添付画像のように、現状は散布図上のタイトルと下部のタイトルが整合しない\n![Image](https://github.com/user-attachments/assets/27fde824-7e69-4c3d-8f0a-475ca265b20d)\n\n# 提案内容\n* 「濃いクラスタ」が選択されている場合はそれらの説明文を表示したい\n  * フィルタされているクラスタの解説文のみをページ下部に表示する\n\n\n\n\n",
    "type": "issue"
  },
  {
    "id": 2893959131,
    "number": 19,
    "title": "[FEATURE]レポートの複製・再利用機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/19",
    "user": "nasuka",
    "created_at": "2025-03-04T11:38:39Z",
    "updated_at": "2025-04-21T14:27:19Z",
    "body": "# 背景\n* 設定を少しだけ変えて実行したいケースがある\n  * 例えばクラスタ数だけ変えるなど\n\n\n# 提案内容\n* レポートの設定複製機能を実装する\n\n\n# 機能の提供価値\n* LLM APIコストの削減\n  * レポート出力までのステップを途中から実行できるようになるためAPIのコストを削減できる\n* レポート出力の高速化",
    "type": "issue"
  },
  {
    "id": 2893835579,
    "number": 11,
    "title": "[FEATURE]レポート出力にかかる時間の目安を記載する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/11",
    "user": "nasuka",
    "created_at": "2025-03-04T10:59:48Z",
    "updated_at": "2025-04-21T14:16:15Z",
    "body": "# 背景\n* レポート出力までに何分程度かかるのかがユーザー目線でわからない\n\n\n# 提案内容\n* 実行時間の目安を記載する\n",
    "type": "issue"
  },
  {
    "id": 3008364816,
    "number": 349,
    "title": "broadlistening.pngの圧縮",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/349",
    "user": "mtane0412",
    "created_at": "2025-04-21T12:58:17Z",
    "merged_at": "2025-04-21T13:07:56Z",
    "body": "# 変更の概要\r\n- broadlistening.pngをImageoptimを用いて圧縮した(1.2MB → 283kB)\r\n\r\n```zsh\r\ni Running ImageOptim...\r\n✓ broadlistening.png was: 1.2MB now: 293kB saving: 911kB (75.69%)\r\n✓ TOTAL was: 1.2MB now: 293kB saving: 911kB (75.69%)\r\n✓ Finished\r\n```\r\n\r\n## 圧縮前\r\n<img width=\"1576\" alt=\"broadlistening_before\" src=\"https://github.com/user-attachments/assets/e9c45061-8e25-45e6-8a64-4d49e142d0a6\" />\r\n\r\n## 圧縮後\r\n![broadlistening](https://github.com/user-attachments/assets/82fde9c9-8f3d-4487-8e13-c48e04235053)\r\n\r\n\r\n# 変更の背景\r\n- ブロードリスニングのイメージ図が1.2MBと大きいサイズで、低速環境やモバイル環境にフレンドリーではなかった\r\n- next/imageなどを用いた最適化は静的サイト出力に用いることができない\r\n- 静的サイトビルド時に圧縮をかけるなどの方法もあるが、現時点で大きな画像はこの1ファイルのみなので単純に元画像を圧縮すれば済む\r\n\r\n# 関連Issue\r\n #347 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 0,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008324936,
    "number": 348,
    "title": "make azure-cleanup 時に確認メッセージを出す",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/348",
    "user": "shingo-ohki",
    "created_at": "2025-04-21T12:33:30Z",
    "merged_at": "2025-04-21T14:11:58Z",
    "body": "# 変更の概要\r\n- make azure-cleanup 時に確認メッセージを出すようにします\r\n\r\n# 変更の背景\r\n- make azure-cleaup は、作成した Azure 環境をすべて削除するコマンドのため、誤って実行したときのために確認メッセージを出したほうがよいのではないか？と思いました\r\n- 別件の作業時に make azure-cleanup を実行する機会があり、その際に気が付きました\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 7,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3006866301,
    "number": 344,
    "title": "Bug修正: static build時のOGP画像のリトライ処理を実装",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/344",
    "user": "mtane0412",
    "created_at": "2025-04-20T07:37:21Z",
    "merged_at": "2025-04-20T12:23:23Z",
    "body": "# 変更の概要\r\n静的サイト出力時のOGP画像生成の安定化。`OpImage` 関数内のAPIデータ取得処理にリトライ機構を追加します。\r\n\r\n# 変更の背景\r\n現在の静的サイト出力（`make client-build-static`）において、特にレポート数が多い場合に、OGP画像生成プロセス（`client/app/[slug]/opengraph-image.png/route.ts` から呼ばれる `OpImage` 関数）がAPIからのデータ取得に失敗し（`Workspace failed`）、ビルドが中断される問題が確認されています。\r\n\r\nこの問題は、Next.jsの静的エクスポートが複数のOGP画像を並列で生成する際に、起動したばかりのAPIサービスへの同時多数アクセスが集中し、APIがリクエストを処理しきれない、あるいは一時的な通信エラーが発生することが原因と推測されます。エラーは非決定的（ランダム）に発生し、処理対象のレポート数が多いほど顕著になります。\r\n\r\nこの変更は、APIの準備が整う前のアクセスや、瞬間的な高負荷による一時的な通信失敗を吸収するため、`client/app/[slug]/_op-image.tsx` 内のAPI fetchにリトライ処理を導入することで、静的サイト出力の安定性を向上させることを目的としています。\r\n\r\n# 関連Issue\r\n#343 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 38,
    "deletions": 3,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3006443813,
    "number": 340,
    "title": "shingo-ohkiさんをメンテナーに追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/340",
    "user": "nasuka",
    "created_at": "2025-04-19T13:45:38Z",
    "merged_at": "2025-04-19T13:45:58Z",
    "body": "# 変更の概要\r\n* @shingo-ohki さんがメンテナーになったのでドキュメントを追記\r\n\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 5,
    "deletions": 4,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004658274,
    "number": 335,
    "title": "CSVアップロード時におすすめクラスタ数をデフォルトとして設定する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/335",
    "user": "mtane0412",
    "created_at": "2025-04-18T10:29:25Z",
    "merged_at": "2025-04-21T06:19:19Z",
    "body": "# 変更の概要\r\n- レポート作成画面の「おすすめクラスタ数設定」を「現在のクラスタ数設定」に変更\r\n- 「この設定にする」ボタンを削除(変更は詳細設定の方で行う)\r\n- 詳細設定を変更すると「現在のクラスタ数設定」と連動するようにした(一旦現在のUIをそこまで崩さないようにする措置)\r\n- 何らかの原因でおすすめクラスタ数設定がnullの場合は初期値の5→50となる\r\n- ドキュメントの関連の説明部分を仕様変更に合うように変更\r\n\r\n連動動作の動画: \r\n![](https://i.gyazo.com/e748bd74f25f9c98e1d541bf73b61487.gif)\r\n\r\n作成されたレポートへの反映を確認:\r\n![](https://i.gyazo.com/cf3a64e9830985b2eb395b7f6b1f5dcc.png)\r\n\r\n\r\n# 変更の背景\r\n- クラスタ数の設定の一手間を減らしたい\r\n- 現在のクラスタ数設定が詳細設定を開くまでわからない\r\n- この設定にするボタンを押しても反映されているかわからない\r\n\r\nクラスタ数設定のUIは検討する余地があるが、別スコープとして一旦変更案をあげた。\r\n\r\n# 関連Issue\r\n#303\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 386,
    "deletions": 165,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004094750,
    "number": 332,
    "title": "[FEATURE] 意見グループのカラーバリエーションを20から40に増やす",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/332",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-18T06:11:11Z",
    "merged_at": "2025-04-18T06:25:46Z",
    "body": "# 概要\nIssue #330 の対応として、意見グループのカラーバリエーションを20から40に増やしました。\n\n## 変更内容\n- `client/components/charts/ScatterChart.tsx` の `softColors` 配列に20色を追加\n- 既存の色合いと被らないように新しい色を選定\n\n## 関連Issue\nCloses #330\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/13cf7d9312e1499bbeda7a28e54f55af\nRequested by: nsk.smn@gmail.com\n",
    "additions": 20,
    "deletions": 0,
    "changed_files": 1,
    "co_author": "nsk.smn",
    "requester": "nsk.smn",
    "type": "pr"
  },
  {
    "id": 3004030475,
    "number": 329,
    "title": "意見グループのタイトルの表示/非表示を設定する項目を実装",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/329",
    "user": "nasuka",
    "created_at": "2025-04-18T05:38:30Z",
    "merged_at": "2025-04-21T15:36:23Z",
    "body": "# 変更の概要\r\n* 意見グループのタイトルの表示/非表示を設定する項目を実装\r\n  * 元々あった「濃い意見グループ設定」のモーダルを「表示設定」に改名し、その中にトグルスイッチを配置している\r\n* 表示がONの場合は全てのタイトルが表示され、OFFの場合はどのクラスタのタイトルも表示されない\r\n  * ON/OFFの状態は全画面表示の際も引き継がれる\r\n\r\n\r\n設定モーダル\r\n![image](https://github.com/user-attachments/assets/474f7635-a3e3-4a26-94d0-004c3e6aec4d)\r\n\r\n\r\n動作イメージ\r\n![a3e20d4504a83d9a139a4953257cb8db](https://github.com/user-attachments/assets/a5c21b07-488b-4fa6-9046-3290901e1e15)\r\n\r\n\r\n\r\n# 変更の背景\r\n- 意見グループ数が増えるとラベルが重なって見にくくなるという問題がある\r\n  - この問題があるため、意見グループを一定以上に増やすことが難しい\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/327\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 92,
    "deletions": 22,
    "changed_files": 6,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3002966419,
    "number": 326,
    "title": "CSVダウンロード機能に用いるcsvを、Azure Blob Storage連携時の削除対象から除外",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/326",
    "user": "nasuka",
    "created_at": "2025-04-17T16:33:35Z",
    "merged_at": "2025-04-17T17:00:05Z",
    "body": "# 変更の概要\r\n* CSVダウンロード機能に用いるcsv( `final_result_with_comments.csv` )を、Azure Blob Storage連携時の削除対象から除外\r\n  * 従来は誤って削除対象になっていた\r\n* アプリ起動時の同期対象に同ファイルを含めるよう修正\r\n\r\n# 変更の背景\r\nストレージ連携をしている場合は、ストレージに出力ファイル等をアップロードをした後に容量節約のために不要なファイルを削除しているが、その際に当該のCSVファイルも削除されてしまっているためDLできなくなっていた。\r\n当該ファイルはAzure Blob Storage上には保存されているが、アプリ起動時の同期対象からも外れておりアプリ上には存在しないため、アプリの再起動やコンテナの更新を行った場合もDLできなくなっていた。\r\nストレージにはcsvは保管されているので、今回の修正を反映した上でアプリ（コンテナ）を再起動すれば、以降はCSVをDLできるようになる。\r\n\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/325\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 9,
    "deletions": 8,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3002219397,
    "number": 322,
    "title": "レポート作成時にISR関連の注意書きを追加する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/322",
    "user": "mtane0412",
    "created_at": "2025-04-17T11:30:55Z",
    "merged_at": "2025-04-17T14:37:44Z",
    "body": "# 変更の概要\r\n以下の注意書きをAlertコンポーネントでレポート作成ボタンの上に追加 ([@nasuka案](https://github.com/digitaldemocracy2030/kouchou-ai/issues/61#issuecomment-2795883061)) \r\n- レポートの作成には数分から数十分程度の時間がかかります\r\n- 作成が完了したレポートが一覧画面に反映されるまで5分程度かかります\r\n\r\n![](https://i.gyazo.com/334fa5543cea24e5512c14b4d941d02a.png)\r\n\r\n# 変更の背景\r\n> 新しいレポートが生成されてから、閲覧可能になるまでの間には約５分のラグがある\r\n> これは client で ISR を行っており、この頻度を 300sec にしているのが原因（この仕組み自体は問題ない認識）\r\n> この仕組みを知らないとレポート作成者が迷ってしまうので、５分遅れる旨を client-admin に書くとよさそう\r\n\r\n# 関連Issue\r\n#61 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 106,
    "deletions": 0,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3002072268,
    "number": 321,
    "title": "CSVダウンロードにBOM付きオプションを追加する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/321",
    "user": "mtane0412",
    "created_at": "2025-04-17T10:21:24Z",
    "merged_at": "2025-04-17T16:09:46Z",
    "body": "# 変更の概要\r\n- CSVダウンロードボタンを押してCSVをダウンロードするのを、Popoverを表示して通常CSVとUTF-8 BOM (Byte Order Mark) 付きのCSVを選んでダウンロードできるようにした\r\n- 通常のCSVは「CSV」で、BOM付きは「CSV for Excel (Windows)」とした\r\n- UTF-8 BoM付きCSVは `original-name_excel.csv` のような形式でダウンロードする\r\n\r\n![](https://i.gyazo.com/c900123a1fdd45ee8ced48243eba6aa4.png)\r\n\r\n# 変更の背景\r\n- WindowsユーザーがExcelを開くとBOM付きでないCSVは文字化けする問題がある\r\n- 「UTF-8 BOM」という表記は非技術者に伝わりづらいため、CSV for Excel (Windows)と表現した。\r\n\r\n# 関連Issue\r\n#297\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 110,
    "deletions": 42,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3001422724,
    "number": 320,
    "title": "レポート作成日時にtimezoneをつけて保存",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/320",
    "user": "nasuka",
    "created_at": "2025-04-17T05:05:34Z",
    "merged_at": "2025-04-17T16:58:40Z",
    "body": "# 変更の概要\r\n- レポート作成日時対してtimezone（UTC）つきで保存するように変更\r\n  - これにより、レポートの一覧画面でJSTで作成日時が表示されるようになる（従来はUTCだった）\r\n# 変更の背景\r\n- 従来の保存形式ではtimezoneの情報が付加されていなかった\r\n  - フロント側ではJSTに変換して日時を表示するようになっているが、保存されている元データにtimezoneの情報がないためUTCのまま表示されていた\r\n    - 今回の実装のスコープにはしていないが、本来的にはJST固定ではなく閲覧しているブラウザの環境情報等からtimezoneを読み取った上で時刻表示するのが望ましい（現状日本以外ではそこまで使われないと思われるので対応していない）\r\n\r\n\r\n注意点として、以前のバージョンで出力したレポートについては引き続きUTCのまま時刻が表示される。\r\n（timezoneなしの作成日時が保存されている場合にtimezoneつきに変換する処理を入れれば対応可能ではあるが、実装が若干増えるのに対してインパクトが見合わないように思ったので対応していない）\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/317\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 2,
    "deletions": 2,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3001394675,
    "number": 319,
    "title": "ラベリングのデフォルトプロンプトをアップデート",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/319",
    "user": "nasuka",
    "created_at": "2025-04-17T04:41:43Z",
    "merged_at": "2025-04-17T08:06:05Z",
    "body": "# 変更の概要\r\n* 初期ラベリング・統合ラベリングのプロンプトをアップデート\r\n  * 従来のプロンプトは抽象的なタイトルがつけられがちだったので、より具体性のあるタイトルをつけるようにプロンプトをアップデート\r\n\r\n新プロンプト・旧プロンプトの結果比較はこちら\r\nhttps://docs.google.com/spreadsheets/d/1xjZ48M-haKk1y6znsuMeverotwAw-kBJjTtCcQ0qpP8/edit?gid=1478680723#gid=1478680723\r\n\r\n# 変更の背景\r\n* 広聴AIで出力した第一階層のクラスタタイトルが、TTTCのタイトルと比べて具体性に欠ているという声があった\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/269\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 25,
    "deletions": 17,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2999963716,
    "number": 316,
    "title": "レポート一覧のクリック可能範囲を広げる(#207)",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/316",
    "user": "mtane0412",
    "created_at": "2025-04-16T15:11:44Z",
    "merged_at": "2025-04-16T16:34:54Z",
    "body": "# 変更の概要\r\n- レポート一覧画面で各カードにマウスオーバーするとカードがグレーになり、中央に「レポートを表示」というボックスが表示される\r\n- カード全体(既存のボタンを除く)をクリックするとレポートが開く\r\n- 既存のレポートページへ飛ぶアイコンは削除\r\n\r\n![](https://i.gyazo.com/f4b591f63332a0d3bc21741c95e6b581.jpg)\r\n\r\n# 変更の背景\r\n- 初見のユーザーがどこをクリックしていいか分からない問題があった\r\n- マウスオーバー効果でクリッカブルであることが分からない層にも伝わるように「レポートを表示」を出すようにした\r\n- 既存のレポート表示ボタンは重複するので削除した\r\n\r\n# 関連Issue\r\n#207 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 56,
    "deletions": 13,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2998210511,
    "number": 314,
    "title": "改行コード混在の解消のため .gitattributes を追加（#243 対応）",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/314",
    "user": "take365",
    "created_at": "2025-04-16T03:07:22Z",
    "merged_at": "2025-04-16T04:17:35Z",
    "body": "# 変更の概要\r\n\r\n- `.gitattributes` を追加し、改行コード（LF / CRLF）をファイル種別ごとに明示的に制御するようにしました。\r\n\r\n# 変更の背景\r\n\r\n- Windows環境での利用時、Git の自動変換（`core.autocrlf`）やエディタの設定により `.sh` ファイルが CRLF になってしまい、\r\n  POSIXシェルで構文エラー（\"unexpected 'fi' (expecting 'then')\"）が発生するケースがありました。\r\n- これは entrypoint.sh の構文の問題ではなく、改行コードが Windows形式（CRLF）で保存されたことが原因です。\r\n- `.gitattributes` によって `*.sh` は LF、`*.bat` や `*.cmd` は CRLF に固定することで、OS間の不整合を防ぎます。\r\n\r\n# 関連Issue\r\n\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/243\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/286\r\n# CLAへの同意\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 2,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2998186696,
    "number": 313,
    "title": "Windowsユーザの利用環境構築 #300　の調整",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/313",
    "user": "take365",
    "created_at": "2025-04-16T02:49:17Z",
    "merged_at": "2025-04-16T04:17:06Z",
    "body": "# 変更の概要\r\nsetup_win.bat の文言を英語化し、Docker起動時の挙動を --build に変更\r\n起動・停止用の補助バッチファイル（start_win.bat, stop_win.bat）を追加\r\n運用手順を含めたガイド（windows-setup.md）を追記\r\n\r\n# 変更の背景\r\nリンクが切れている部分があった(sample.envとずれていた）\r\n日本語の影響で処理が異常になった。かといってSJISにするとwebで化ける\r\ndocker compose up -d では.env の変更が反映されないことがあるため、初回実行時から --build を使うように変更\r\nコマンド操作が苦手な非エンジニアの利用者向けに、クリックだけで起動・停止できるバッチファイルを用意\r\nその利用手順を windows-setup.md に明記し、運用しやすい形にしました\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/300\r\n\r\n\r\n- [x ] CLAの内容を読み、同意しました",
    "additions": 50,
    "deletions": 20,
    "changed_files": 4,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2995792597,
    "number": 312,
    "title": "濃いクラスタ抽出で対象となるクラスタがない時にはボタンをdisabledにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/312",
    "user": "nishio",
    "created_at": "2025-04-15T09:31:15Z",
    "merged_at": "2025-04-15T09:51:35Z",
    "body": "# 変更の背景+概要\r\n\r\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1743685246693499\r\n>少ないデータに「濃い意見グループ」分析をかけた時に何が起こるか\r\n>- getDenseClusters関数が末端グループを対象に濃度でのフィルタリングをする。この時「最小クラスタサイズ」の制約があるのでみんな小さすぎる時はフィルター結果が空になる。このフィルターは末端グループだけフィルターし、親グループはそのまま残す仕組みになっている。\r\n>- フィルターされた結果を受け取ったChartコンポーネントは、チャートの種類選択が「濃い意見グループ」の時、データから一番深いグループを計算してそのレベルのグループを表示する。このとき「本来の末端グループがすべてフィルターされてる」ことで、上位のグループが表示されてしまう\r\n>- 修正案: getDenseClustersが「フィルター結果がemptyか」のbooleanをセットで返すようにし、emptyな時には「濃い意見グループ」のボタンをdisabledにする\r\n\r\n# 関連Issue\r\n- #96\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 103,
    "deletions": 26,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2995775673,
    "number": 311,
    "title": "レビュアー向けのガイドラインを追記",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/311",
    "user": "nasuka",
    "created_at": "2025-04-15T09:25:07Z",
    "merged_at": "2025-04-15T09:47:10Z",
    "body": "# 変更の概要\r\nレビュアー向けのガイドラインを追記し、DevinのPRに関する取り扱いルールを記載\r\n\r\n\r\n# 変更の背景\r\nDevinのPRについて、レビュアー側がどのようなアクションを起こすべきかわからず戸惑う場面があった\r\n\r\n引用\r\n```\r\nDevinによるPR、作成中で裏で人間と議論してるのか、一旦終わって他人のレビューを待ってるのか区別つかないのでトリガー引いた人がコメントしてからレビューするとかなんかいい感じの運用方針が必要な気がする\r\n```\r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 16,
    "deletions": 0,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2989659375,
    "number": 282,
    "title": "fix issue #278 : 要約文が「全画面終了」ボタンの後ろに隠れないようにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/282",
    "user": "masatosasano2",
    "created_at": "2025-04-11T20:22:05Z",
    "merged_at": "2025-04-15T02:11:36Z",
    "body": "# 変更の背景\r\n全画面表示の「全画面終了」ボタンの後ろに要素の要約文が一部隠れてしまい、読めないことがある。\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/278\r\n\r\n# 変更の概要\r\n- `client/components/charts/ScatterChart.tsx` と`client/components/charts/TreemapChart.tsx` の props に `onHover` 用のfunctionを追加。 `onHover` が有効であることは以下で確認： https://github.com/plotly/react-plotly.js/blob/master/src/factory.js\r\n- `client/components/report/Chart.tsx` に `onHover` 用のfunctionを実装。内容は「全画面終了ボタンと要約文の吹き出しが重なる場合に重ならなくなる位置まで吹き出しを下方向にずらす」。\r\n\r\n# 動作確認結果\r\n○\r\n- 全画面表示でない場合は挙動が変わらない\r\n- 要約文がボタンに隠れない場合は挙動が変わらない\r\n- 要約文がボタンに隠れる場合は、一番右上の要素でなくとも被らなくなるまで要約文が下方向にずれる\r\n- 下方向にずれた場合、要約文の背景が吹き出し型であれば吹き出しの先端だけ元の位置に紐づく\r\n\r\n△\r\n- `ScatterChart` の場合、マウス移動のたびに `onHover` と `onUnhover` が交互に発火されるのだが、 `onHover` のたびに要約文が再描画され、本修正の位置ずらしがリセットされてしまう。そのため、 `ScatterChart` ではsetTimeoutで位置ずらしを実行するタイミングを遅らせている。これにより概ね意図通り動作するようになったが、マウスの動かし具合によっては戻ってしまうこともある。ReactのイベントとしてはonMouseMoveなどほしいものが発火されていないので、これ以上精度を上げるには独自にmousemoveイベントなどを作成する必要があるが、効果の割に影響範囲調査含めて実装コストが高そうなので、Issue [#283](https://github.com/digitaldemocracy2030/kouchou-ai/issues/283) に分離する。\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 51,
    "deletions": 3,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2962689394,
    "number": 215,
    "title": "Azureの更新のためのターゲットを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/215",
    "user": "nishio",
    "created_at": "2025-04-01T08:25:51Z",
    "merged_at": "2025-04-17T14:50:50Z",
    "body": "# 変更の背景\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/214\r\n\r\n# 変更の概要\r\n- Azureの更新のためのターゲットを追加\r\n\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/214\r\n\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 67,
    "deletions": 18,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008963725,
    "number": 354,
    "title": "add ruff setting on .vscode/settings.json",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/354",
    "user": "nishio",
    "created_at": "2025-04-21T17:55:52Z",
    "body": "# 変更の背景/概要\r\n- Biomeの設定は書かれているがRuffの設定は書かれていない、書いたほうがいい？\r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 12,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008956836,
    "number": 353,
    "title": "[REFACTOR] langchainの依存を削除する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/353",
    "user": "nishio",
    "created_at": "2025-04-21T17:52:06Z",
    "body": "## 変更内容\r\n\r\n- `server/broadlistening/pipeline/services/llm.py`: langchainのOpenAIEmbeddingsを直接OpenAI SDKの呼び出しに置き換え\r\n- `server/broadlistening/pipeline/utils.py`: langchainのメッセージスキーマを直接OpenAI SDKの形式に置き換え\r\n- `server/pyproject.toml`: langchain関連の依存関係を削除\r\n\r\n## 関連Issue\r\n\r\nCloses #58\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 20,
    "deletions": 16,
    "changed_files": 4,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008901452,
    "number": 352,
    "title": "LLM出力形式の揺らぎによる抽出エラーの修正",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/352",
    "user": "nishio",
    "created_at": "2025-04-21T17:21:42Z",
    "body": "# LLM出力形式の揺らぎによる抽出エラーの修正\r\n\r\n## 問題点\r\nLLMからの応答が、プロンプトで期待した形式（例：文字列リスト `[str]`）と異なる形式（例：オブジェクトリスト `[{意見:\"str\", トピック:\"str\"}]`）で返ってくることがあり、データ抽出が失敗したり、抽出される意見数が少なくなったりする問題を修正しました。\r\n\r\n## 修正内容\r\n1. **プロンプトの改善**：\r\n   - 出力形式をより明確に指定するようプロンプトを更新\r\n   - 期待される出力形式の例をより詳細に提示\r\n\r\n2. **構造化出力の活用**：\r\n   - is_json=Trueオプションを使用して、JSON形式の応答を強制\r\n\r\n3. **エラーハンドリングの強化**：\r\n   - 異なる形式の応答にも対応できるよう、パース処理を改善\r\n   - オブジェクトリスト形式からの文字列抽出ロジックを追加\r\n  \r\n\r\n# 関連Issue\r\n- #296\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 84,
    "deletions": 13,
    "changed_files": 4,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008743423,
    "number": 351,
    "title": "client-admin/app/create/page.tsx のリファクタリング",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/351",
    "user": "mtane0412",
    "created_at": "2025-04-21T15:56:09Z",
    "body": "# 変更の概要\r\n\r\nこのPRでは、レポート生成ページ（client-admin/app/create/page.tsx）のリファクタリングを行いました。今後の機能追加や保守性を考慮し、コードの可読性と保守性を向上させることを目的としています。\r\n\r\n## 1. 状態管理の整理\r\n関連する状態を各カスタムフックにまとめました\r\n- useBasicInfo: 基本情報（タイトル、調査概要、ID）\r\n- useInputData: 入力データ（CSVファイル、スプレッドシート）\r\n- useAISettings: AIモデル設定（モデル、並列実行数、出力モード）\r\n- useClusterSettings: クラスタ設定\r\n- usePromptSettings: プロンプト設定\r\n\r\n## 2. コンポーネントの分割\r\nUIを独立したコンポーネントに分割しました\r\n- BasicInfoSection: 基本情報入力セクション\r\n- AISettingsSection: AI詳細設定セクション\r\n- WarningSection: 警告メッセージセクション\r\n- ClusterSettingsSection: クラスタ設定セクション\r\n- CommentColumnSelector: コメントカラム選択コンポーネント\r\n- CsvFileTab: CSVファイル入力タブ\r\n- SpreadsheetTab: スプレッドシート入力タブ\r\n\r\n## 3. ロジックの分離\r\nビジネスロジックをUIから分離しました\r\n- api/report.ts: レポート作成API\r\n- api/spreadsheet.ts: スプレッドシートAPI\r\n- utils/validation.ts: バリデーション関数\r\n- utils/error-handler.ts: エラーハンドリング関数\r\n\r\n## 4. 型定義の整理\r\n型定義を types/index.ts にまとめました\r\n\r\n# 変更の背景\r\n- client-admin/app/create/page.tsxが1200行を超えており、LLMが読むのに苦労していた\r\n\r\n# 関連Issue\r\n#350\r\n\r\n# その他\r\n\r\nRooで別のに取り掛かっていたら読み込みに相当苦労していたので一旦リファクタリングさせてみました。\r\nNext.jsのベストプラクティス的な知識は弱いので、お手数ですが確認よろしくお願いします。\r\nあとテスト方法もよくわかっておらず、手動でCSVとかを試して確認しているくらいです。\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1485,
    "deletions": 1110,
    "changed_files": 18,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3006209488,
    "number": 338,
    "title": "REVALIDATE周りの設定をAzureのセットアップスクリプトに追加",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/338",
    "user": "nasuka",
    "created_at": "2025-04-19T05:36:24Z",
    "body": "# 変更の概要\r\n* REVALIDATE_URLをcliで取得し、環境変数にセットした上でアップデートをかけるように修正\r\n* .envにREVALIDATE_SECRETが存在しない場合は `azure-update-deployment` を実施しないよう修正\r\n\r\n# 変更の背景\r\n\r\n上記の実装に伴って、AzureのセットアップスクリプトでREVALIDATE周りの修正が必要\r\nこのPRは、https://github.com/digitaldemocracy2030/kouchou-ai/pull/336 と同時にmergeを行う\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/328\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 12,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004792022,
    "number": 336,
    "title": "レポート一覧からタイトルと調査概要を変更可能にする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/336",
    "user": "mtane0412",
    "created_at": "2025-04-18T11:54:54Z",
    "body": "# 変更の概要\r\n- レポート編集機能の追加\r\n  - 管理画面でレポートのタイトルと説明文を編集できる機能を実装\r\n  - 編集用のダイアログUIを追加\r\n  - 更新成功時のトースト通知を実装\r\n- バックエンド側の対応\r\n  - レポートメタデータ更新用のAPIエンドポイントを追加 (/admin/reports/{slug}/metadata)\r\n  - メタデータ更新用のスキーマ ReportMetadataUpdate を追加\r\n  - レポート情報を更新する処理 update_report_metadata 関数を実装\r\n  \r\n ![](https://i.gyazo.com/0cfb203326cdda1f11289dd5b048eb09.gif)\r\n\r\n# 変更の背景\r\n- 最初に設定したタイトルや調査概要を変更することができなかった\r\n\r\n# 関連Issue\r\n#328\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 332,
    "deletions": 4,
    "changed_files": 7,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004424050,
    "number": 334,
    "title": "第1階層の意見グループ数の上限を 20 -> 40に増加",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/334",
    "user": "nasuka",
    "created_at": "2025-04-18T08:42:15Z",
    "body": "# 変更の概要\r\n- 第1階層の意見グループ数の上限を 20 -> 40に増やした\r\n\r\n# 変更の背景\r\n* 現在、全体図などの散布図において意見グループの個数上限は20となっている\r\n  * ラベルが重なってしまう問題があったため上限を20にしていたが、この問題は回避策のPR（ https://github.com/digitaldemocracy2030/kouchou-ai/pull/329 ）が出されている\r\n\r\n# 備考\r\n https://github.com/digitaldemocracy2030/kouchou-ai/pull/329 がmergeされた後にmergeする\r\n特に論点ないと思われるので、self mergeします\r\n\r\n# 関連Issue\r\nclose https://github.com/digitaldemocracy2030/kouchou-ai/issues/330\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 3,
    "deletions": 3,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004072776,
    "number": 331,
    "title": "OpenAI API Rate Limit対策の実装",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/331",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-18T06:00:08Z",
    "body": "# OpenAI API Rate Limit対策の実装\n\n## 概要\nIssue #295 に記載されている問題を解決するため、OpenAI APIのRate Limit (429) エラーに対して指数バックオフ付きリトライ処理を実装しました。\n\n## 変更内容\n- tenacityライブラリを使用して、OpenAI APIのRate Limit (429) エラーに対する指数バックオフ付きリトライ処理を実装\n- `request_to_openai`と`request_to_azure_chatcompletion`関数に対してリトライデコレータを追加\n- エラー発生時のログ出力を追加\n- リトライ設定：\n  - 最大3回のリトライ\n  - 指数バックオフ（初期2秒、最大60秒）\n  - RateLimitErrorとAPIStatusErrorに対してリトライ\n\n## テスト\n- 実装後の動作確認を行いました\n\nLink to Devin run: https://app.devin.ai/sessions/67c2a06784d74e068af3a03c787f2394\nRequested by: nsk.smn@gmail.com\n",
    "additions": 395,
    "deletions": 26,
    "changed_files": 2,
    "co_author": "nsk.smn",
    "requester": "nsk.smn",
    "type": "pr"
  },
  {
    "id": 2995172973,
    "number": 309,
    "title": "静的ファイルエクスポート機能の追加 (#220)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/309",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-15T05:29:02Z",
    "body": "# 静的ファイルエクスポート機能の追加\n\nIssue: #220\n\n## 変更内容\n- clientアプリに静的ファイル出力用APIエンドポイント（/api/static-export）を追加\n- client-adminアプリの一覧画面に「全レポートをエクスポート」ボタンを追加\n- ボタンクリック時にclientの/api/static-exportエンドポイントを呼び出し、静的ビルドを実行\n- 生成されたZIPファイルをダウンロードする機能を実装\n\n## テスト方法\n- clientアプリの/api/static-exportエンドポイントにアクセスし、静的ビルドが実行されZIPファイルがダウンロードされることを確認\n- client-adminアプリの一覧画面の「全レポートをエクスポート」ボタンをクリックし、静的ビルドが実行されZIPファイルがダウンロードされることを確認\n\nLink to Devin run: https://app.devin.ai/sessions/c429bebcd84540059a6560b3dad3db7a\n",
    "additions": 194,
    "deletions": 10,
    "changed_files": 11,
    "co_author": "nsk.smn",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 2990972837,
    "number": 301,
    "title": "Windows環境でのセットアップ簡素化 (Issue #300)",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/301",
    "user": "nishio",
    "created_at": "2025-04-13T04:02:24Z",
    "updated_at": "2025-04-16T03:17:42Z",
    "body": "## 概要\r\n\r\nこのPRはIssue #300に対応し、Windows環境でのkouchou-aiのセットアップを簡素化するための実装を提供します。\r\n\r\n## 実装内容\r\n\r\n1. `setup_win.bat` - Windowsユーザー向けセットアップスクリプト\r\n   - Docker Desktopの起動確認\r\n   - OpenAI APIキーの入力プロンプト\r\n   - 環境変数の自動設定\r\n   - docker composeによるサービス起動\r\n\r\n2. `docs/windows-setup.md` - Windows環境でのセットアップ手順ドキュメント\r\n   - 前提条件の説明\r\n   - Docker Desktopのインストール手順\r\n   - リポジトリのダウンロード方法\r\n   - OpenAI APIキーの取得方法\r\n   - セットアップの実行手順\r\n   - トラブルシューティング\r\n\r\n## ユーザーストーリー\r\n\r\nこのPRにより、以下のユーザーストーリーが実現されます：\r\n- Docker Desktopをインストール\r\n- zipでrepoをダウンロード\r\n- OpenAI APIキーを取得してくらいチャージする\r\n- setup_win.batを実行\r\n- ブラウザでアクセス可能になる\r\n\r\n## この後の流れ\r\n\r\nこれをマージした後で、Windowsユーザに`docs/windows-setup.md`の手順でセットアップができるか試してもらう\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 98,
    "deletions": 0,
    "changed_files": 2,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  }
]