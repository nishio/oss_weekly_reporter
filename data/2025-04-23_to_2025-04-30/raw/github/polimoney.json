[
  {
    "id": 3008286665,
    "number": 13,
    "title": "OGPタグを書く",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/13",
    "user": "takahiroanno",
    "created_at": "2025-04-21T12:09:52Z",
    "closed_at": "2025-04-28T10:11:08Z",
    "body": "- SNSでURLをシェアしたとき、OGPカードとして表示されるようにしたい\n  - 画面中央のサンキーダイアグラムが見える\n  - 議員の名前が見える",
    "type": "issue"
  },
  {
    "id": 3022720107,
    "number": 25,
    "title": "devcontainerを設定する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/25",
    "user": "adust09",
    "created_at": "2025-04-27T04:40:52Z",
    "body": "# Devcontainerの導入\n\n## 概要\n開発環境の統一とセットアップの簡略化のため、devcontainerを導入する\n\n## 目的\n- チーム全員が同じ開発環境で作業できるようにする\n- 新規開発者のオンボーディングを簡略化する\n- CI/CD環境との一貫性を確保する\n\n## タスク\n- [ ] `.devcontainer`ディレクトリの作成\n- [ ] `devcontainer.json`の設定\n  - Node.js 20の環境設定\n  - 必要なVS Code拡張機能の設定\n  - 自動フォーマットの設定\n  - etc\n- [ ] `Dockerfile`の作成\n- [ ] READMEの作成",
    "type": "issue"
  },
  {
    "id": 3019635503,
    "number": 22,
    "title": "収支報告書のスキーマ定義",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/22",
    "user": "nanocloudx",
    "created_at": "2025-04-25T10:19:13Z",
    "body": "紙や PDF や Excel で提出されている収支報告書について、実際に手作業で Spreadsheet に転記する作業をしてみました。\n（備考１：転記するだけでも心が折れそうになったので、これを作成している秘書の皆様はすげぇな...という気持ちになりました）\n（備考２：どう考えても複式簿記にすべきだろ...という気持ちにもなりました、その他に丸め込まれる科目が多すぎる）\n\nその結果、以下のようなラベルを持つ CSV または JSON にできると、取り回ししやすいのではという仮説を持ちました\n\n```\n- id\n  - 識別番号\n  - 収支報告書の大項目、中項目、行番号みたいなのを用いれると識別しやすそう\n  - 例：７寄附の内訳 > １個人 > 行番号１ であれば 7-1-1 みたいな\n- direction\n  - 収入か支出か\n  - 大項目2~12がだいたい収入、大項目13以降が支出っぽいです\n- category\n  - カテゴリー\n  - シート左上に大項目みたいなのがある\n- subCategory\n  - サブカテゴリー\n  - シート右上に中項目みたいなのがある\n- purpose\n  - 目的\n  - これは支出にだけ項目がある\n- amount\n  - 金額\n- name\n  - 収入元または支出先の名称\n- date\n  - 日付\n  - R5のような表記は西暦に直したほうがフレンドリーと思われる\n```\n\nまたいくつか注意すべき発見がありました\n\n- 支出＞経常経費＞人件費には内訳の記載がない\n- 各大項目の最終ページには「その他の収入」みたいな欄がある(見落としがち)\n- 大項目３の内容は大項目１０の内容と重複し、さらに大項目１１に大項目１０の内訳の一部が掲載されている\n- 大項目16の内容は他の支出内容の内訳なので重複しうる\n- 大項目17以降の内容は一旦無視でも良さそう？（記載のあるケースをまだ見てないので知見が足りない）\n\n<img width=\"1121\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7c9a83cf-a0e4-41ac-8d81-505870735b39\" />",
    "type": "issue"
  },
  {
    "id": 3017818422,
    "number": 21,
    "title": "支出のどれが税金で賄われているか明示",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/21",
    "user": "shumizu418128",
    "created_at": "2025-04-24T16:30:47Z",
    "body": "> 国会議員で税金を収入として受け取っている場合、どの使途が税金部分かを明示するのは価値があるのではないかというインプットがありました\n\n[という提案が安野さんに来ていたようです](https://w1740803485-clv347541.slack.com/archives/C08FL5L6GSH/p1745483561743249)のでissueにしておきます。",
    "type": "issue"
  },
  {
    "id": 3017813904,
    "number": 20,
    "title": "収支報告書のフォーマット調査",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/20",
    "user": "shumizu418128",
    "created_at": "2025-04-24T16:28:40Z",
    "body": "## 背景\n政治資金収支報告書は、提出先（各都道府県の選挙管理委員会、総務省）や報告主体（政党、資金管理団体、その他の政治団体など）によってフォーマットが異なることが分かっています。\n\nこのフォーマットの多様性は、OCRによる報告書の自動読み取りを進める上で大きな障壁となっています。\n\n## 目的\n\n- **フォーマットの網羅的調査**: 全国の都道府県、国レベルで提出される収支報告書、および団体の種類（政党本部・支部、資金管理団体、その他の政治団体等）によるフォーマットの違いを調査し、実例を収集します。\n\n- **パターン化・分類**: 収集したフォーマットを分析し、共通点、相違点、特有のレイアウトなどを特定し、体系的にパターン化・分類します。\n\n- **課題の理解深化**: 報告書フォーマットの現状を把握することで、データ化における技術的課題や、報告書作成者（政治家側）・利用者（国民側）双方にとっての潜在的な課題（分かりにくさ、比較の難しさ等）への理解を深めます。\n\n- **OCR精度向上の基盤構築**: 特定されたフォーマットパターン情報を、将来的なデータ抽出ロジックの改善に活用します。\n\n## 具体的なタスク\n\n- **情報収集**:\n  - 各都道府県の選挙管理委員会、総務省のウェブサイト等を調査し、公開されている政治資金収支報告書のPDFファイルや様式テンプレートを収集します。（例: 「〇〇県 政治資金収支報告書」、「総務省 政治資金収支報告書」等のキーワードで検索）\n\n- **フォーマット分析**:\n  - 収集した報告書の構成要素（表紙、収入、支出、資産等の各項目、明細書など）を確認します。\n  - レイアウト、記載項目、様式番号（例: 様式その〇〇）の違いを比較・分析します。\n  - 特にOCR処理で問題となりそうな箇所（罫線の有無・種類、手書き箇所の多さ、特有の注釈など）に注目します。\n\n※ なんとなくの感想程度で構いません。**ハイレベルな文を書くより、収支報告書とかいう謎文書の手ごわさを理解するほうが大事**だと思います。\n\n- **結果の整理・文書化**:\n  - 特定したフォーマットパターンごとに、特徴、出典（都道府県/国、団体種類、年度）、該当する様式のサンプル画像（またはファイルへのリンク）を整理します。\n\n整理した情報は、**[TODO: 記録先未定 提案募集中]** に記録します。\n\n---\n\nめっちゃGeminiに手伝ってもらいましたが、このissueは一応 @shumizu418128 自分で書いています。\n本件は私のタスクに直結するので、現時点で本件の主担当は私 @shumizu418128 です。\n\npolimoneyのコンセプトに対する理解への貢献、取り組みやすさの観点から、これはgood first issueになると思います。",
    "type": "issue"
  },
  {
    "id": 3014175992,
    "number": 19,
    "title": "OCR（画像認識）の精度強化",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/19",
    "user": "shumizu418128",
    "created_at": "2025-04-23T14:10:03Z",
    "body": "ただのメモ\n4/23現在、OCR・Geminiまわりの担当は清水のみです\n \n### なるべく処理ログを残す\n  - どの座標をどんな文字と認識したのか記録\n  - 合計金額を計算し記録（「小計」の活用）\n  - 手書き文字・訂正印が邪魔で読みにくい部分を記録\n  - 備考などのイレギュラー対策の検討\n  - 必要に応じて画像をトリミング\n\n目標：バグ発生時の迅速な対応を実現する\n\n### json形式の統一\n  - DBとのやりとりはPinさん担当なので相談する\n  - 上記処理ログ含め残したい\n\n\n[参考：4/23 ミーティングログ](https://docs.google.com/document/d/19Kn6ekK3twMVcVaSyUgptvmfzrXEJezA6GXTbPXjm9M/edit?tab=t.0)",
    "type": "issue"
  },
  {
    "id": 3014047468,
    "number": 18,
    "title": "issue templateを用意する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/18",
    "user": "adust09",
    "created_at": "2025-04-23T13:35:15Z",
    "body": "**目的**\n- 新規参加者(開発者)のオンボーディングコストを下げる\n- 多くの開発者間のコミュニケーションコストを下げる\n\n**実装イメージ**\nkouchou-aiのテンプレを使えそう\nhttps://github.com/digitaldemocracy2030/kouchou-ai/tree/main/.github/ISSUE_TEMPLATE",
    "type": "issue"
  },
  {
    "id": 3014036500,
    "number": 17,
    "title": "データ引用元のURLを貼る",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/issues/17",
    "user": "adust09",
    "created_at": "2025-04-23T13:31:23Z",
    "body": "**目的**\n- ソースを知りたいユーザーのUXを向上させる\n- Polimoney自体の透明性を向上させる\n\n**実装イメージ**\n画像のハイライト部分をクリックするとソースに飛ぶようにする\n<img width=\"1031\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f68044c3-213f-4460-bea2-e26b9226e9f8\" />\n\n**参考**\n政治資金収支報告書データベースでは似たような機能が実装されている\nex: \nhttps://political-finance-database.com/politician_detail/1744011775449x224006594647899970",
    "type": "issue"
  },
  {
    "id": 3029711836,
    "number": 28,
    "title": "linterをPR作成時に走らせる設定の追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/28",
    "user": "tdaira",
    "created_at": "2025-04-29T23:11:05Z",
    "merged_at": "2025-04-30T06:00:02Z",
    "body": "PR作成時にlintの実行漏れに気付けるるようにGitHub Actionsの設定を行いました。\r\n個人のリポジトリでは問題なく実行されることを確認しています。\r\nhttps://github.com/tdaira/polimoney/pull/1\r\n\r\nこちらのリポジトリでは、maintainerの許可が必要なようです。\r\n<img width=\"634\" alt=\"スクリーンショット 2025-04-30 8 13 05\" src=\"https://github.com/user-attachments/assets/e25ef1f4-7703-4377-bdb3-78efe8a35a09\" />\r\n\r\n今後の運用としては、mainに向けたPRマージの前にStatus checkでこの設定のチェックを有効にできると、lint漏れが防げると思います\r\nhttps://docs.github.com/ja/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks\r\n",
    "additions": 55,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3023144895,
    "number": 26,
    "title": "【fix: 13】サンプルデータのOGP Image作成機能実装と反映を行いました",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/26",
    "user": "yuki-snow1823",
    "created_at": "2025-04-27T15:17:51Z",
    "merged_at": "2025-04-28T10:11:07Z",
    "body": "Fix: #13\r\n\r\n## 概要\r\n>SNSでURLをシェアしたとき、OGPカードとして表示されるようにしたい\r\n画面中央のサンキーダイアグラムが見える\r\n議員の名前が見える\r\n\r\nSNSでURLをシェアした際のOGPカード表示機能を実装しました。\r\nサンプルデータのOGPのみ反映できる実装になっております。\r\n実際に動的にデータを取得するようになった場合には、改善する必要があります。\r\n\r\n## デモ\r\n\r\n<img width=\"1008\" alt=\"ogpimage_list\" src=\"https://github.com/user-attachments/assets/f25f3717-e96d-4091-bf5f-c591bef04fec\" />\r\n\r\n---\r\n\r\n### 確認方法\r\n\r\n1. サーバーを起動している状態で`node tools/generate-og-images.js`を実行\r\n2. `public/ogp`配下にsampleデータのOGPが作成されて反映されるようになります\r\n\r\n[Localhost Open Graph Debugger](https://og.nullnull.dev/)等のツールでURLを発行し、[OGP確認：facebook、twitter、LINE、はてなのシェア時の画像・文章を表示 | ラッコツールズ🔧](https://rakko.tools/tools/9/)などで確認\r\n\r\n## 背景\r\n- Issue #13で指摘された「SNSでシェアした際のOGPカード表示」の要望に対応しました\r\n\r\n## 変更内容\r\n\r\n### 1. 新規ファイルの追加に関して\r\n- `tools/generate-og-images.js`: OGP画像を生成するスクリプトを追加しました\r\n- `public/ogp/demo-ryosuke-idei-2024.png`: 生成されたOGP画像\r\n- `public/ogp/demo-takahiro-anno-2024.png`: 生成されたOGP画像\r\n\r\n### 2. 依存関係の追加\r\n- `puppeteer`: ヘッドレスブラウザを使用してOGP画像を生成するためのライブラリを追加しました\r\n\r\n### 3. 実装の詳細\r\n- Puppeteerを使用してヘッドレスブラウザを制御\r\n- 各デモページのグラフ要素を検出してスクリーンショットを撮影\r\n- 背景を透明にして保存\r\n\r\n#### 補足\r\n堀越と申します。都内でWEBエンジニアをしております。polimoneyのコンセプトに共感してPRを送らせていただきました。\r\nコントリビュートの説明が見当たらなかったため、突然送る形になって恐縮ですがご確認いただけますと幸いです。",
    "additions": 1045,
    "deletions": 1,
    "changed_files": 9,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3020415239,
    "number": 23,
    "title": "手書き文字判定の追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/23",
    "user": "shumizu418128",
    "created_at": "2025-04-25T15:44:46Z",
    "merged_at": "2025-04-28T10:12:11Z",
    "body": "Geminiで収支報告書の読み取り実験を行ったところ、訂正印付きで訂正された手書き文字の読み取り精度が著しく落ちることが分かっています。\r\n対策として、手書き文字かどうかを判定させることで、この情報を活用して精度を上げることをねらいとしています。\r\n\r\n具体的には、手書き文字が出てきた場合には管理画面でアラートを出す、などのアイデアが考えられます。\r\n\r\n---\r\n\r\nしれっとこのプルリクでプロンプトのjson文法エラーを直しています",
    "additions": 15,
    "deletions": 7,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3012565986,
    "number": 16,
    "title": "docstring整備",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/16",
    "user": "shumizu418128",
    "created_at": "2025-04-23T03:08:21Z",
    "merged_at": "2025-04-28T10:12:36Z",
    "body": "ドキュメントのみ追加しました。コードの変更はありません。\r\n\r\n個人的には詳細な説明は理解の助けになると考えているため、~~もしよければ今後も機能改修と並行してドキュメント作成を進めていきたいと思います。~~ そんな余裕ないかも\r\n\r\nなお、`analyze_image_with_gemini` (32行目) については、既存のドキュメントと実際のコード実装に齟齬があったため、正確な内容に修正しています。",
    "additions": 22,
    "deletions": 5,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3006956615,
    "number": 11,
    "title": "jsonスキーマを採用",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/11",
    "user": "shumizu418128",
    "created_at": "2025-04-20T11:05:13Z",
    "merged_at": "2025-04-23T02:10:50Z",
    "body": "Gemini APIにある、出力をJSONに固定できる機能の実装です。\r\nhttps://ai.google.dev/gemini-api/docs/structured-output?hl=ja&lang=python\r\n\r\n※意図してこれを採用していなかった場合は、このプルリクを消していただいて構いません。\r\n\r\nこれを採用する場合、\r\n- clean_response (19行目～) がおそらく不要になります。\r\n- まれに出力がjsonにならない（カンマ忘れなど）ことがありますが、数回再試行させるとだいたい直ります。\r\n  - 再試行させるコードを書いてもいいと思います。現状1回問題があると即エラーを出しているようです。\r\n- [出力形式をプロンプトではなくpythonのクラスで指定できます。](https://ai.google.dev/gemini-api/docs/structured-output?hl=ja&lang=python#supply-schema-in-config)プロンプトでも指定可能ですが、こちらのほうがより出力形式が安定します。",
    "additions": 6,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3029697756,
    "number": 27,
    "title": "LinterがGitHub Actions上で走るように設定",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/27",
    "user": "tdaira",
    "created_at": "2025-04-29T22:58:04Z",
    "body": null,
    "additions": 55,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3022668292,
    "number": 24,
    "title": "update readme",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/polimoney/pull/24",
    "user": "adust09",
    "created_at": "2025-04-27T04:05:02Z",
    "body": "AIに書かせたREADMEであり、一部コマンドは私の方でまだ検証できていません。\n",
    "additions": 122,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  }
]