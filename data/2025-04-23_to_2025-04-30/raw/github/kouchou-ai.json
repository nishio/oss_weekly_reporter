[
  {
    "id": 3030409183,
    "number": 401,
    "title": "[DOCUMENT]クラスタ → グループ への言い換え",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/401",
    "user": "masatosasano2",
    "created_at": "2025-04-30T07:33:54Z",
    "closed_at": "2025-04-30T12:04:14Z",
    "body": "# 現在の問題点\nREADMEや管理画面の設定において「クラスタ」「クラスタリング」などの用語が使われているが、伝わらない可能性がある。\n\n# 提案内容\n「グループ」「グルーピング」などと言い換える。\n補足：[宇多津町の報告資料](https://www.town.utazu.lg.jp/uploaded/attachment/3122.pdf)ではそのように言い換えられていた。",
    "type": "issue"
  },
  {
    "id": 3027281615,
    "number": 388,
    "title": "[REFACTOR] 「クラスタ」と「意見グループ」という表現が混在している",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/388",
    "user": "nasuka",
    "created_at": "2025-04-29T06:59:44Z",
    "closed_at": "2025-04-29T07:46:46Z",
    "body": "# 現在の問題点\n* 元々はクラスタという表現が使われていたが、この名称は多くのユーザーにとってわかりにくいので、「意見グループ」という名称にする方針になった\n* 一方で、以前の名称が残ってしまっている部分がある\n\n# 提案内容\n* 「クラスタ」という名称が使われている部分を「意見グループ」に変更する\n  * server（api）まで回収する場合、影響範囲が大きくなるので、一旦ユーザーの目に触れるclient/client-admin内で名称を変更する\n  * 変数名・クラス名は一旦そのままで、目に触れる文言の部分を修正する\n",
    "type": "issue"
  },
  {
    "id": 3019341901,
    "number": 375,
    "title": "[BUG]レポート作成時に編集したプロンプトが反映されない",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/375",
    "user": "nasuka",
    "created_at": "2025-04-25T08:19:02Z",
    "closed_at": "2025-04-28T06:11:14Z",
    "body": "### 概要\n* レポート作成時にプロンプトを編集しても、その内容が反映されるデフォルトのプロンプトでレポートが作成される\n  * 少なくともextractionについてはこの事象を確認済み\n\n### 再現手順\n\n1. レポート作成時にプロンプトを編集する\n2. レポート作成を実行する\n3. apiサーバーに保存されているconfigファイルを確認すると、デフォルトプロンプトが利用されていることが確認できる\n\n### 期待する動作\n編集したプロンプトが反映される\n\n\n### その他\n以前はこういった声は聞かなかったので、恐らく直近のリファクタが原因の可能性がありそう",
    "type": "issue"
  },
  {
    "id": 3019121537,
    "number": 373,
    "title": "[FEATURE] LLM用のプロンプトに出力されるjsonフォーマットを入力できるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/373",
    "user": "tokoroten",
    "created_at": "2025-04-25T06:31:12Z",
    "closed_at": "2025-04-29T01:53:39Z",
    "body": "# 背景\n#352 で、プロンプトに出力フォーマットを指示することで、出力フォーマットを固定しようとしている。\n\n現状、response_format には、jsonを返せという指定しか入っていません。\n\nhttps://github.com/digitaldemocracy2030/kouchou-ai/blob/d49132c34db0dec6cf08f12fa3fe6f1da990647a/server/broadlistening/pipeline/services/llm.py#L43\n\nプロンプトでレスポンスフォーマットを固定するように頑張るのではなく、プロンプトとともにレスポンスフォーマットを入力できるようにして、それをAPIから食わせられるようにした方がいいです。\n\nstructured outputsのオプションを指定することで、帰ってくるフォーマットを明示することができます。\n\nhttps://platform.openai.com/docs/guides/structured-outputs\nhttps://gigazine.net/news/20240807-openai-structured-outputs/\n\n# 提案内容\nis_json フラグだけでなく、出力のjson_formatを入力できるように、インターフェースを拡張する\n",
    "type": "issue"
  },
  {
    "id": 3019100792,
    "number": 371,
    "title": "[BUG] プロンプトのAIバイアス問題の修正",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/371",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-25T06:18:36Z",
    "closed_at": "2025-04-29T01:58:22Z",
    "body": "# プロンプトのAIバイアス問題の修正\n\n## 問題の説明\n現在のプロンプト設定では、分析結果に「AI技術の導入」という文言が不適切に含まれる問題が発生しています。これはプロンプト内の例示がAI関連の内容に偏っているためです。\n\n## 原因\n以下の2つのファイルに問題があります：\n\n1. `client-admin/app/create/mergeLabellingPrompt.ts`\n   - 出力例に「AI技術の導入による意見分析の効率化への期待」という文言が含まれている\n   - これがAIモデルの出力に影響を与え、AI関連の文言が不適切に含まれる原因となっている\n\n2. `client-admin/app/create/extractionPrompt.ts`\n   - 「人工知能に関する公開協議を実施した状況を想定しています」という文言がある\n   - これにより、入力データがAIに関するものであるという前提が作られている\n\n## 修正方針\n1. プロンプト内の例示をより一般的なトピックに変更する\n2. 特定のドメイン（AI技術など）に依存しない例を使用する\n3. 入力データの内容に依存せず、汎用的に機能するプロンプトに修正する\n\n## 期待される結果\n- 分析結果に「AI技術の導入」などの不適切な文言が含まれなくなる\n- 様々なトピックの入力データに対して、適切な分析結果が得られるようになる\n",
    "type": "issue"
  },
  {
    "id": 3012543055,
    "number": 361,
    "title": "(実験)embeddingベースの前処理",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/361",
    "user": "nishio",
    "created_at": "2025-04-23T02:46:22Z",
    "closed_at": "2025-04-25T02:49:49Z",
    "body": ">20万件となるとまともに閲覧するのが難しくなる可能性が高いので、少なくとも処理負荷を軽減するための施策（上述されていたように似たものをまとめた上で一つの意見とする・何らかのロジックでフィルタする等）は必要になりそうです。\n\n>鶏と卵の関係である程度具体的にならないとどう統合するかも見えないから\n1: 独立したスクリプトとして機能するものが作れるが実験\n2: それをapiサーバに統合するか検討\n3: それをどんなGUIでユーザに見せるか検討\nという流れがスムーズかなと思いました\n\n>1に関してはextractionしないでembeddingして階層クラスタリング、適当な閾値ごとに「くっつく最も離れたサンプル」を表示して「これとこれをくっつけていいなら何件に減ります」とやるイメージが湧きました",
    "type": "issue"
  },
  {
    "id": 2991091474,
    "number": 303,
    "title": "[FEATURE]CSVアップロード時にデフォルトでクラスタ数が設定されてほしい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/303",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:58:07Z",
    "closed_at": "2025-04-30T04:59:56Z",
    "body": "# 背景\nクラスタ数の設定の一手間を減らしたい\n\n# 提案内容\n- クラスタ数について「この設定にする」を押さないと推奨設定通りにならず、そのことが詳細画面を開かないとわかりにくい\n- クラスタ数のデフォルト値より小さい件数のCSVを取り込んだ時、先に進もうとするとアラートが出てくれるのは嬉しいが、それなら最初から推奨設定をセットして欲しい\n",
    "type": "issue"
  },
  {
    "id": 2990914996,
    "number": 296,
    "title": "[FEATURE]LLM出力形式の揺らぎによる抽出エラー",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/296",
    "user": "nishio",
    "created_at": "2025-04-13T01:22:24Z",
    "closed_at": "2025-04-29T02:02:23Z",
    "body": "# 背景\nLLMからの応答が、プロンプトで期待したJSON形式（例: 文字列リスト [str]）と異なる形式（例: オブジェクトリスト [{“意見”:str, “トピック”:str}]）で返ってくることがあり、データ抽出が失敗したり、抽出される意見数が少なくなったりする。\n\n「Rate limitかと思われた抽出データが少ない事例の一つにおいて、JSON List[str]ではなく[{“意見”:str, “トピック”:str}]が返っていたせい(nishio)」\n「これのせいで抽出されるデータが減るのは困るし、それに多分ユーザは気づけなくて「こんなもんか〜」となりそう」\n\n# 解決策\n\nプロンプトを改善し、出力形式の指示をより明確かつ堅牢にする。\n\nLLMからの応答をパースする際に、期待する形式以外もある程度許容する、またはエラーハンドリングを強化して異常を検知できるようにする。",
    "type": "issue"
  },
  {
    "id": 2990878839,
    "number": 291,
    "title": "[DOCUMENT].envファイルの不可視問題 (Mac Finder)",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/291",
    "user": "nishio",
    "created_at": "2025-04-13T00:51:49Z",
    "closed_at": "2025-04-30T11:49:54Z",
    "body": "# 現在の問題点\nMacのFinderでは .env ファイルがデフォルトで非表示のため、cp example.env .env を実行した後、ファイルを見つけられないユーザーがいる。\n\n「.env見つからない」\n「Sampleからコピーしてきたとき、それをVScodeで開こうとするときに見つからない」\n「隠しファイルをfinderで開こうとしていた」\n\n\n# 提案内容\n\nREADMEで、FinderではなくVSCodeなどのエディタでプロジェクトフォルダを開いて .env ファイルを編集することを推奨する。「実はFinder経由でどうこうするよりVSCodeでフォルダを開いてしまうほうが良かった」\n",
    "type": "issue"
  },
  {
    "id": 2990833717,
    "number": 288,
    "title": "[FEATURE]zipでのリリース",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/288",
    "user": "nishio",
    "created_at": "2025-04-13T00:14:59Z",
    "closed_at": "2025-04-30T11:56:01Z",
    "body": "# 背景\nDocker/Gitのインストール障壁 (特に自治体ユーザー)\nセキュリティポリシーやITスキル不足により、DockerやGitのインストール自体が大きなハードルとなっている。\n「リポジトリ」などのIT専門用語が、非エンジニアのユーザーにとって理解しにくい。\n\n>「自治体関係者の中でのアーリーアダプターたちが試す際に、最初の①リポジトリをクローン」段階で既にかなり大きなハードルになっている。」\n「Dockerのインストール、Gitのインストールという部分で既にわけがわからなくなっている。」\n>「リポジトリ」概念を避けて行政に納品する際は、zip圧縮などをしたりします。\n> 「非エンジニアユーザー向けに、GitをインストールせずにZIPダウンロードで運用のほうがよい？(たねのぶ)」\n\n# 解決策\n\nzipでリリースすればgit cloneの部分の解説は必要なくなる\n",
    "type": "issue"
  },
  {
    "id": 2981664009,
    "number": 269,
    "title": "（アルゴリズム検証） 広聴AIで出力したクラスタのタイトルが抽象的になる問題の解決",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/269",
    "user": "nasuka",
    "created_at": "2025-04-09T06:22:31Z",
    "closed_at": "2025-04-30T05:01:30Z",
    "body": "# 背景\n広聴AIで出力した第一階層のクラスタタイトルが、TTTCのタイトルと比べて具体性に欠けるという声がある。\n \n衆院選のデータセットでクラスタタイトルを出力した例を以下に記載する。クラスタ数はどちらも15で設定している。\n本来はクラスタに属するデータ点との整合性なども含めて議論するのが理想だが、こちらではクラスタの抽象度についてのみ議論する。\n\n### TTTCの出力結果\nレポートのURL: https://news.ntv.co.jp/static/shugiinsenkyo2024/closed-1027/index.html\n\n選挙結果への関心と不安\n立憲民主党の支持増加と自民党への批判\n過半数割れの可能性と連立政権の模索\n投票率と市民参加の重要性\n候補者の当選とその影響\n選挙特番のエンタメ化\n国民民主党と立憲民主党の議席増加への注目\n議員の落選に対する反応\n石破氏の責任問題\n政権交代の可能性\n地域別支持動向\n和歌山2区の選挙結果\n選挙結果の誤報や虚偽情報への懸念\nれいわ新選組の躍進と支持拡大への関心\n出口調査結果への関心と懐疑\n\n\n### 広聴AIの出力結果\n\n選挙結果と政治倫理に対する多様な反応と期待\n地域別選挙動向と多様な反応\n選挙に対する多様な関心と報道の影響\n選挙参加と投票率に関する多様な視点と期待\n選挙における政党の躍進と略称問題に対する多様な反応\n衆院選結果に対する多様な反応と政治的期待\n選挙における政党批判と有権者の多様な視点\n選挙報道とスポーツ中継の視聴体験とメディアの役割\n選挙結果の信頼性と世襲政治に対する多様な反応\n日本の政治再編と選挙結果の影響\n石破政権の持続性と自民党の未来に対する懸念と期待\n日本の政治情勢における政党支持の変動とその影響\n衆院選後の政治的再編と連立政権の行方\nれいわ新選組の議席増加に対する多様な反応と期待\n選挙における政権交代と地域政党の影響に関する多様な視点\n\n\n感覚的だが、TTTCの出力結果が具体的な行動・現象や固有名詞（個人名・政党名等）がクラスタ名に含まれる傾向がある一方で、広聴AIの方は抽象性の高いタイトルがついているケースが多い。\n一概にどちらが悪いといえるものはないが、実用性を考えるとTTTC程度の抽象度で記載されている方が有用な場合がある。\n\nなお、o3-miniでも評価したが、同様の評価が記載されている。\nhttps://chatgpt.com/share/67f60d38-43b4-800f-a20f-3836dbfa4518\n\n![Image](https://github.com/user-attachments/assets/00a6bc92-5a48-4237-8da8-72be1dfbc1e5)\n\nこのような差分が生まれる要因として、以下が想定される。\n\n* クラスタリングアルゴリズムの違い\n  * 広聴AIではk-meansで第二階層のクラスタを形成した後にクラスタをマージして第一階層を形成するが、TTTCではspectral clusteringでクラスタを形成する\n* クラスタリング時に用いる埋め込みの次元の違い\n    * 広聴AIではUMAP後の2次元でクラスタリングを行っているが、TTTCでは元のembeddingでクラスタリングを行っている\n      * 二次元空間上で飛び地ができるのを防ぐために広聴AIではこのような実装となっている\n* プロンプトの違い\n  * （アルゴリズムの違いに依存する話だが）広聴AIでは、第二階層のクラスタのタイトル・説明と、サンプリングしたクラスタに属するデータのテキストの情報に基づいて第一階層のタイトル・説明を生成している。一方でTTTCでは、下層のクラスタタイトル・説明を用いていない。\n    * 下層のクラスタのタイトル・説明を包含するように指示しているため、抽象的なタイトルが生成されている可能性がある。\n\n\n# 提案内容\nプロンプトレベルでの修正と、アルゴリズムレベルでの修正がある。\n\n## プロンプトレベルでの修正\n1. デフォルトプロンプトの文言のチューニング・修正\n2. プロンプトに入力する情報の修正\n    例. 下層のタイトル・説明は含めずに、純粋にデータ点の情報だけ入力して第一階層のタイトル・説明を生成する\n\n\n## アルゴリズムレベルでの修正\n1. 元の埋込を用いてクラスタリングする\n2. k-means以外のアルゴリズム（spectral clustering, hdbscan）を採用する\n",
    "type": "issue"
  },
  {
    "id": 2966115761,
    "number": 220,
    "title": "[FEATURE] frontからstaticなHTMLファイルをexportしてDownloadできるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/220",
    "user": "takahiroanno",
    "created_at": "2025-04-02T11:43:27Z",
    "closed_at": "2025-04-25T14:14:18Z",
    "body": "# 背景\n* static exportが実装されたが、現在はCLIで実行することしかできず、Webアプリ上で実行できない\n  * `make client-build-static` を実行するとCLIではstatic exportができる\n  * 参考\n    * https://github.com/digitaldemocracy2030/kouchou-ai/pull/198\n    * https://github.com/digitaldemocracy2030/kouchou-ai/pull/195\n\n\n# 提案内容\n* adminの一覧画面で、static exportを実行できるようにする",
    "type": "issue"
  },
  {
    "id": 2960108462,
    "number": 207,
    "title": "[FEATURE]レポート一覧のクリック可能範囲を広げる",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/207",
    "user": "nishio",
    "created_at": "2025-03-31T10:28:45Z",
    "closed_at": "2025-04-30T11:49:11Z",
    "body": "# 背景\n\n<img width=\"1023\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/01686efb-d5a0-4679-b456-435ca5e978d2\" />\n\nレポートを見るためにクリックするところか説明のない灰色の領域だけ\n目の前で使ってもらったらどこをクリックしたらいいか戸惑っていた\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n\nブロック全体に広げた方がいいのではと思った",
    "type": "issue"
  },
  {
    "id": 2922771064,
    "number": 58,
    "title": "[REFACTOR] langchainの依存を削除する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/58",
    "user": "nasuka",
    "created_at": "2025-03-16T04:54:26Z",
    "closed_at": "2025-04-25T07:08:33Z",
    "body": "# 現在の問題点\n* 元のtalk to the cityがlangchainに依存していた関係で、kouchou aiでもlangchainを使用してLLM/embedding周りの処理を行っている\n* 実装内容としては公式のSDKでも十分処理できるので、不要な依存を外したい\n\n# 提案内容\nlangchainではなく、openaiの公式SDKを利用する\n",
    "type": "issue"
  },
  {
    "id": 3031011318,
    "number": 403,
    "title": "[REFACTOR] metadata のオプショナル化",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/403",
    "user": "nanocloudx",
    "created_at": "2025-04-30T11:36:30Z",
    "body": "# 現在の問題点\nレポート作成者について記述する metadata というファイルを用意している\nデフォルトとして「テスト環境」という画像を用意しているが、これがそのまま使われてしまっているかもしれない\n\n# 提案内容\n値や画像がなければ表示から消してしまい、metadata が指定された場合のみレポート作成者欄を用意してみると良いかもしれない",
    "type": "issue"
  },
  {
    "id": 3030607120,
    "number": 402,
    "title": "[FEATURE] OpenRouterを使えるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/402",
    "user": "nasuka",
    "created_at": "2025-04-30T08:55:15Z",
    "body": "# 背景\n* OpenAIが使えないユースケースがある\n  * 政治的なキャンペーンでの利用ができない\n    * 参考: https://github.com/digitaldemocracy2030/kouchou-ai/issues/255 \n  * このため、用途によっては政党が利用できないケースがある\n* そもそもOpenAIのみに依存している状況は好ましくないため、使えるLLMの選択肢は増やしたい\n* また、OpenAI だと Rate Limit が厳しいという問題もある\n  * https://github.com/digitaldemocracy2030/kouchou-ai/issues/295\n\n\n# 提案内容\n* OpenRouterを導入する\n\n# 実装方針案\napi\n* 環境変数にOpenRouterのAPI Keyをセットできるようにする\n* OpenRouterでAPIリクエストを投げられるようにする\n  * すべてのモデルをサポートすると厳しそうなので、一旦以下をサポートできると良さそう\n    * OpenAI（gpt-4o, 4o-mini）\n      * 4.1系列もサポートしても良いかも？\n    * Gemini（gemini2.5系列） \n  * 上記のモデルはstructured outputもサポートされているので実装が容易\n\nclient-admin\n* 環境変数がセットされている場合にOpenRouterのモデルを選択肢に表示する \n  * あわせて、OpenAIのAPIキーがセットされている場合のみ、OpenAIのモデルを選択肢に表示するようにした方が良いかも（今はAPIキーがセットされていなくてもデフォルトで3つの選択肢が表示されている）\n    * OpenAI APIキーで使うOpenAIのモデルとOpenRouterで使うOpenAIのモデルは区別できるようにしておいた方が良さそう（リクエストをapiに投げるときにどちらで投げるか判別できるようにするため）\n      * e.g. `OpenAI gpt-4o` , `OpenRouter gpt-4o` のような表記にする？\n* レポート作成時に選択されたモデルでapiにリクエストを送る\n![Image](https://github.com/user-attachments/assets/dda0a3c7-ca57-4709-9c69-933f6eec3628)\n\n\n",
    "type": "issue"
  },
  {
    "id": 3030155430,
    "number": 400,
    "title": "[FEATURE] 環境確認機能を作る",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/400",
    "user": "tokoroten",
    "created_at": "2025-04-30T05:13:14Z",
    "body": "# 背景\nOpenAIのAPIKeyが正しくセットされているのかどうかが、実際にレポートの作成を始めるまで分からない\n\n\n# 提案内容\n管理画面、クライアント画面に以下の機能を付けたい\n\n管理画面\n- APIサーバが生きているかどうか\n- OpenAIのkeyが正しいか、疎通できるかどうか（Azureも）\n- クライアント用のフロントサーバが立っているかどうか\n- ローカルLLM用のLM Studioが生きているかどうか\n\n",
    "type": "issue"
  },
  {
    "id": 3029992887,
    "number": 398,
    "title": "Devin とのうまい協働方法を考える",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/398",
    "user": "shingo-ohki",
    "created_at": "2025-04-30T03:14:27Z",
    "body": "（広聴AIに限った話ではないですが、一旦ここに）\n# 現在の問題点\nDevin が活用され始めたが、それによる弊害があるのではないか？\nあるとすれば、それを軽減し、人間と Devin のうまい協働方法はないか？\n\nあくまで仮説です\n\n> Shingo OHKI\n  今日 11:10\nDevin が大活躍してくれるのは嬉しい反面、なんとなく人間がPRを出しにくくなりそうな気がするのですが、これは気のせいですかね。\n>Shingo OHKI\n  [29分前](https://w1740803485-clv347541.slack.com/archives/C08FL58M3D3/p1745980862512019?thread_ts=1745979009.909629&cid=C08FL58M3D3)\nChatGPT が少し言語化を手伝ってくれました（最初の回答の解決策にはピンと来ていませんが）\nhttps://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37\n「AI導入による文化の摩擦」が起きている自然な状態です。\nなるほど、成長痛なんですかね。\n気にならない人も多いと思いますし、決して Devin 活用にブレーキを踏みたい訳ではないです（どちらかというと人間が気持ちよく Devin と協働できるうまい活用方法を探したい） （編集済み） \n>ChatGPTChatGPT\n[ChatGPT - Devin 活用と参加感](https://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37)\nShared via ChatGPT (9 kB)\nhttps://chatgpt.com/share/68118c77-ca60-800c-9998-987c5fe25f37\n>Shingo OHKI\n>3. 「Devinタスクを投げる場所」を整備\n[#devin部屋](https://w1740803485-clv347541.slack.com/archives/C08PRQVQWSE) を作ったのは正しそう\n>NISHIO Hirokazu\n>11:51\n>2030年のデジタル民主主義を考える上で、そもそも2030年にはOSS開発の形がだいぶ変わってそう\n誰もAIエージェントと一緒にOSS活動をしていくことの知見をもってないので、この場が世界最先端の実験場の一つとして日々いろいろな観測と考察が生まれていくのだと思う\n\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n",
    "type": "issue"
  },
  {
    "id": 3029893633,
    "number": 396,
    "title": "管理画面の基本e2eテスト計画",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/396",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:43:59Z",
    "body": "# 管理画面の基本e2eテスト計画\n\n## テストの目的\n\nこのテストの目的は、ユーザーが管理画面にアクセスし、CSVファイルをアップロードして新しいレポートを作成するという基本的なワークフローが正常に機能することを確認することです。\n\n## テストの前提条件\n\n1. 管理画面にアクセスするための認証情報が設定されていること\n2. テスト用のサンプルCSVファイルが用意されていること\n3. APIレスポンスをモックするための設定が完了していること\n\n## テストのステップ\n\n### 1. 管理画面へのアクセスとログイン\n\n- Basic認証を使用して管理画面にアクセス\n- 管理画面のトップページが正しく表示されることを確認\n\n### 2. レポート作成ページへの移動\n\n- 「新しいレポートを作成する」ボタンをクリックしてレポート作成ページに移動\n- ページタイトル「新しいレポートを作成する」が表示されることを確認\n\n### 3. 基本情報の入力\n\n- レポートIDフィールドに一意のIDを入力（例：`test-report-{timestamp}`）\n- 質問フィールドにテスト用の質問を入力（例：「これはテスト質問です」）\n- イントロダクションフィールドにテスト用の説明を入力（例：「これはテスト説明です」）\n\n### 4. CSVファイルのアップロード\n\n- CSVファイルタブが選択されていることを確認\n- テスト用のサンプルCSVファイルをアップロード\n- ファイルが正常にアップロードされ、ファイル名が表示されることを確認\n- コメント列が自動的に選択されていることを確認（「comment」列がある場合）\n\n### 5. レポート作成の実行\n\n- 「レポート作成を開始」ボタンをクリックしてフォームを送信\n- APIリクエストが正しいパラメータで送信されることを確認（モックAPIを使用）\n- 成功メッセージが表示されることを確認\n- ダッシュボードページにリダイレクトされることを確認\n\n## モックの設定\n\nテストでは以下のAPIエンドポイントをモックします：\n\n1. レポート作成API（`/admin/reports`）\n   - 成功レスポンス：`{ success: true, slug: 'test-report' }`\n\n## テストコードの構造\n\nテストコードは以下の構造で実装します：\n\n```typescript\nimport { test } from '@playwright/test';\nimport { CreateReportPage } from '../../pages/admin/create-report';\nimport { setupBasicAuth } from '../../utils/auth';\nimport { mockReportCreation } from '../../utils/mock-api';\n\ntest.describe('レポート作成ページ', () => {\n  test('CSVファイルをアップロードしてレポートを作成する', async ({ page }) => {\n    // 認証設定\n    await setupBasicAuth(page);\n    \n    // APIモック設定\n    await mockReportCreation(page);\n    \n    // ページオブジェクトの初期化\n    const createReportPage = new CreateReportPage(page);\n    \n    // レポート作成ページにアクセス\n    await createReportPage.goto();\n    \n    // 基本情報の入力\n    await createReportPage.fillBasicInfo(\n      'test-report-' + Date.now(),\n      'これはテスト質問です',\n      'これはテスト説明です'\n    );\n    \n    // CSVファイルのアップロード\n    await createReportPage.uploadCsvFile('../../fixtures/sample.csv');\n    \n    // フォームの送信\n    await createReportPage.submitForm();\n    \n    // リダイレクト先の確認\n    await page.waitForURL('**/');\n  });\n});\n```\n\n## 実装上の注意点\n\n1. テストの安定性を確保するため、固定のタイムアウト値ではなく、要素の表示を待つ方法を使用する\n2. モックAPIレスポンスは実際のAPIレスポンスと同じ構造にする\n3. テスト間の独立性を確保し、テスト順序に依存しないようにする\n4. 既存のページオブジェクトとユーティリティを活用して効率的なテストを実装する\n\n## 関連Issue\n\n- #395 管理画面のe2eテスト拡張ケース（APIキーエラーやクレジット不足などのエラーケース）\n",
    "type": "issue"
  },
  {
    "id": 3029891330,
    "number": 395,
    "title": "管理画面のe2eテスト拡張ケース",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/395",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:41:40Z",
    "body": "# 管理画面のe2eテスト拡張ケース\n\n## 追加テストケース\n\n1. Googleスプレッドシートからのデータインポート\n   - スプレッドシートURLの入力と取得テスト\n   - データ列の選択と表示確認\n\n2. 入力バリデーションのテスト\n   - 必須フィールドが空の場合のエラー表示\n   - 無効なレポートIDの検証\n   - 文字数制限の検証\n\n3. AI詳細設定の変更とその反映\n   - モデル選択の変更\n   - ワーカー数の調整\n   - PubComモードの切り替え\n   - プロンプト設定の変更\n\n4. エラーケースのテスト\n   - **APIキーが間違っている場合のエラー処理**\n   - **クレジットが入っていない場合のエラー処理**\n   - ネットワークエラー時の処理\n   - サーバーエラー時の処理\n\n## 実装優先度\n\n特に優先度が高いのは:\n- APIキーエラーの適切な処理と表示\n- クレジット不足時のエラー処理と表示\n\n## 関連ファイル\n\n- `test/e2e/tests/admin/create-report.spec.ts`\n- `test/e2e/utils/mock-api.ts`\n- `client-admin/app/create/page.tsx`\n",
    "type": "issue"
  },
  {
    "id": 3028299508,
    "number": 393,
    "title": "プラポリURL等をhowtoに記載すると良さそう",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/393",
    "user": "nasuka",
    "created_at": "2025-04-29T13:13:43Z",
    "body": "## 要望内容\n改善案\nmetaデータ以外の変更箇所（フッターのプラポリ・利用規約、テスト環境のページへ）について、howtoもしくはReadMeに記載する。\n\n改善する\n変更することを忘れやすく、デバック時も気づかれない可能性がある。\nドキュメントに記載することで、公開前のチェックリストとなる。\n\n---\nこちらのイシューはGoogle Form経由で投稿されたものです",
    "type": "issue"
  },
  {
    "id": 3028084834,
    "number": 391,
    "title": "レポート作成時にAPIが正常でない場合にわかりやすいエラーを出す",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/391",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T12:10:49Z",
    "body": "# レポート作成時にAPIが正常でない場合にわかりやすいエラーを出す\n\n## 概要\n現在、OpenAI APIキーが無効または期限切れの場合、レポート作成プロセスが途中で失敗し、ユーザーにとって原因がわかりにくい状態になっています。APIの状態に問題がある場合に、より明確なエラーメッセージを表示する機能が必要です。\n\n## 背景\nWindows環境セットアップガイドの改善（PR #387）の議論中に、APIキーの有効性チェックについて検討されました。セットアップスクリプト（setup_win.bat）での実装は複雑さを増すため見送られましたが、アプリケーション本体でのエラーハンドリング改善は有用と判断されました。\n\n参考: https://chatgpt.com/share/68107163-fecc-8009-b2a3-125f8c8d8310\n\n## 提案される改善点\n1. レポート作成開始時にAPIの健全性チェックを行う\n2. APIキーが無効または期限切れの場合、わかりやすいエラーメッセージを表示\n3. APIサーバーに接続できない場合のネットワークエラー処理\n4. エラーメッセージは技術的な詳細ではなく、ユーザーが取るべき行動を明確に示す\n\n## 実装案\n- APIリクエスト前に簡単な健全性チェック（例: `/v1/models`エンドポイントへのリクエスト）\n- エラーコードに応じた適切なメッセージ表示\n  - 401: APIキーが無効または期限切れ\n  - 429: レート制限に達した\n  - その他: ネットワーク接続の問題など\n\n## 期待される効果\n- ユーザー体験の向上\n- トラブルシューティングの簡素化\n- サポート負担の軽減\n",
    "type": "issue"
  },
  {
    "id": 3026963537,
    "number": 385,
    "title": "[FEATURE]ローカルLLM / embedding を利用できるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/385",
    "user": "nasuka",
    "created_at": "2025-04-29T03:57:58Z",
    "body": "# 背景\n* 現在はOpenAI/Azure OpenAI のLLMのみをサポートしているが、アカウント登録・契約のハードルがあり、利用できないユーザーがいる\n* 特に個人のユーザーではなく、自治体などの組織においては最初のアカウント作成がボトルネックになるケースがある\n  * 出力の品質は下がるが、ローカルLLMの出力でもある程度参考になるアウトプットを出せる可能性がある\n    * また、どのようなアウトプットが出るのかイメージできると、本格導入の話も進みやすくなる\n\n\n# 提案内容\n* ローカルLLMおよびembeddingを利用できるようにする\n  * 事前に実験を行ったうえで、利用するLLM/embeddingを選定する\n    * 要件としては、[こちら](https://gist.github.com/nishio/469b5dc420c77b359ef43f3bdfb11526) に記載されているスペックのマシンで動作すると良さそう（メモリ16GB以内）\n* UIとしては、管理画面の「AIモデル」のセレクトボックスにローカルLLMのモデル名を追加する \n  * embeddingの選択フォームは現状存在しないので新設する\n\n![Image](https://github.com/user-attachments/assets/f1cbd478-be65-4dfa-93fb-f980e598c39f)",
    "type": "issue"
  },
  {
    "id": 3019850654,
    "number": 380,
    "title": "基本的なE2Eテスト環境構築 (Basic E2E Test Environment Setup)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/380",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-25T11:56:02Z",
    "body": "# 基本的なE2Eテスト環境構築 (Basic E2E Test Environment Setup)\n\n## 概要 (Overview)\nE2Eテスト導入の第一歩として、Playwrightを使用した基本的なテスト環境を構築します。最小限のテストケースで環境の動作確認を行い、GitHub Actionsでの実行設定を整えます。\n\n## タスク (Tasks)\n1. Playwright導入\n   - client-adminディレクトリにPlaywrightをインストール\n   - 基本的な設定ファイル（playwright.config.ts）の作成\n   - テストディレクトリ構造の設定\n\n2. 最小限のテストケース作成\n   - レポート作成ページへのアクセステスト\n   - 基本的なUI要素の存在確認テスト\n\n3. GitHub Actions設定\n   - 1日1回の定期実行設定（cronジョブ）\n   - PRラベル（`e2e-test-required`）によるトリガー設定\n   - テスト結果のアーティファクト保存設定\n\n4. モック戦略の基本設定\n   - APIエンドポイントのモック設定\n   - 認証のモック設定\n\n## 成功基準 (Success Criteria)\n- Playwrightが正常にインストールされ、基本的なテストが実行できる\n- GitHub Actionsで定期実行とラベルトリガーが機能する\n- テスト結果がアーティファクトとして保存される\n- 最小限のテストケースが安定して動作する\n\n## 注意点 (Considerations)\n- 最初は最小限の設定で始め、徐々に拡張する\n- テストの安定性を重視し、不安定な要素は避ける\n- 開発者が簡単にローカルでテストを実行できるようにする\n\n## 関連Issue\n- #379 （親イシュー：E2Eテスト導入計画）\n",
    "type": "issue"
  },
  {
    "id": 3019714231,
    "number": 379,
    "title": "E2Eテスト導入計画 (E2E Testing Implementation Plan)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/379",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-25T10:56:23Z",
    "body": "# E2Eテスト導入計画 (E2E Testing Implementation Plan) - 更新\n\n## 概要 (Overview)\nレポート作成時に編集したプロンプトが反映されないバグのような状態管理の問題を早期に検出するため、E2Eテストを導入します。コスト効率と保守性を考慮した段階的なアプローチを取ります。\n\n## 目的 (Goals)\n- 重要なユーザーフローの動作を自動的に検証する\n- リファクタリングによる回帰バグを早期に発見する\n- 開発者の負担を最小限に抑えつつ、品質を向上させる\n\n## アプローチ (Approach)\n- Playwrightを使用したE2Eテスト\n- 重要なフローに絞ったテスト作成\n- 1日1回の全テスト実行 + PRラベルによる選択的実行\n- Devinによるテストメンテナンス自動化\n\n## 実装計画 (Implementation Plan)\n\n### 現在進行中のサブイシュー\n- [#380 基本的なE2Eテスト環境構築](https://github.com/digitaldemocracy2030/kouchou-ai/issues/380)\n\n### 将来の実装メモ（サブイシューではなく参考情報として）\n以下の項目は、最初のステップ（#380）で得られる知見を元に、必要に応じて調整・実装していきます。\n\n#### 2. プロンプト編集テスト実装\n- プロンプト編集の永続性テスト\n- ページ内ナビゲーション後のプロンプト保持テスト\n- エラー発生時のプロンプト保持テスト\n\n#### 3. 基本的なユーザーフローテスト実装\n- CSVファイルによるレポート作成テスト\n- スプレッドシートによるレポート作成テスト\n\n#### 4. テストメンテナンス自動化\n- テスト失敗の自動検出\n- Devinによる修正PR作成ワークフロー\n- テスト結果レポート自動化\n\n#### 5. 開発者ガイドライン作成\n- E2Eテスト実行方法ドキュメント\n- テスト追加・修正ガイドライン\n- テスト失敗時のトラブルシューティング\n\n## 実装順序 (Implementation Order)\n1. 基本環境構築（最小限のテストで検証）- 進行中 #380\n2. プロンプト編集テスト（今回のバグ対策）\n3. 基本フローテスト（主要機能の保護）\n4. メンテナンス自動化（持続可能性の確保）\n5. ドキュメント整備（開発者体験の向上）\n\n## 注意点 (Considerations)\n- テストの安定性を重視（不安定なテストは無効化）\n- セレクタは壊れにくい方法で指定（ID属性など）\n- テスト失敗時の詳細なレポート生成\n- コントリビュータへの影響を最小化\n\n## 関連Issue\n- #375 （プロンプト編集バグ）\n- #377 （リファクタリングのrevert）\n- #380 （基本的なE2Eテスト環境構築）\n",
    "type": "issue"
  },
  {
    "id": 3019171696,
    "number": 374,
    "title": "[FEATURE] OpenAIのBatch APIで、レートリミットを迂回する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/374",
    "user": "tokoroten",
    "created_at": "2025-04-25T06:58:37Z",
    "body": "# 背景\nopenaiのtireが低いと、レートリミットが発生してブロックされる\n\n# 提案内容\nOpenAIや、AzureOpenAIにバッチで投げている部分は、batchapiにする。\n\nhttps://platform.openai.com/settings/organization/limits\n\nbatch apiは、レートリミットが通常のAPIよりも大きい\nhttps://platform.openai.com/docs/guides/batch\n\n副次的効果として、LLMコストが下がる",
    "type": "issue"
  },
  {
    "id": 3018856704,
    "number": 370,
    "title": "[FEATURE]パブコメ大量投稿への対策として省庁が実用可能なツールを作る",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/370",
    "user": "nishio",
    "created_at": "2025-04-25T02:49:36Z",
    "body": "# 背景(Devin)\n\n## 概要\n「[FEATURE]embvec_reduce_public_commentをベースに省庁が実用可能な形に仕上げる」は、実験的に開発された埋め込みベクトルを使った重複パブリックコメント削減機能を、実用レベルに仕上げるための機能要望です。\n\n## 背景\n- Issue #345「（情報整理）同一の内容が大量に投稿される問題への対処法」が親イシューとなっています\n- パブリックコメントで同一内容が大量に投稿される問題があり、以下の課題が発生:\n  1. フロントエンドの処理負荷増大（数万件規模のデータ描画が困難）\n  2. バックエンドの処理負荷・APIコスト増大\n  3. ユーザーの認知負荷増大（スパム的意見が大半を占め、重要な意見が埋もれる）\n\n## 実験的アプローチ\n- 実験ディレクトリ `experimental/embvec_reduce_public_comment` に、SentenceTransformerを使った埋め込みベクトル計算と重複排除のコードが実装されています\n- このコードは以下の処理を行います:\n  1. SentenceTransformerでコメントの埋め込みベクトルを生成\n  2. コサイン類似度に基づく階層的クラスタリングで類似コメントをグループ化\n  3. 各クラスタの中心に最も近いコメントを代表として抽出\n  4. 結果をExcelファイルに出力\n\n## 現在の状況\n- 実験コードは作成済みで、Issue #370ではこれを実用レベルに仕上げることが目標\n- 省庁が実際に使えるレベルの完成度を目指している\n\n\n# 提案内容(nishio)\n\n- Minimum Viable Productとして最低限省庁内の担当者が利用可能なスクリプトとREADMEを作成する\n- 何らかのデータで実際に使ってみて「これを使うとこうなる」と語れる参考事例を作る",
    "type": "issue"
  },
  {
    "id": 3014089385,
    "number": 367,
    "title": "[DOCUMENT] 元データの特徴に合わせたextractionプロンプトのガイドライン",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/367",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:46:14Z",
    "body": "# 背景\nextractionで「意見を抽出するプロンプト」で「意見」を抽出できなかったときに、few-shotの文が出てきたり意見を作ってしまう現象が既知の問題としてある。\n2025/4/23 段階ではプロンプトよって改善可能であるという意見が多かった。\nシステムが自動で消してしまうのもよくないという意見があった。\n\nユーザーがプロンプトを改善できるガイドラインのようなものがあってもいいという発言があったと思い、同じ意見なのでissueにしておく\n\n> extractionの品質の管理は課題として認識していたりします。\n> 多くの利用者の信頼感を高めるうえでは大事になりそう。\n> \n> なるほど、意見のないものから意見を抽出しようとしているのか...(nishio)\n> クレンジングか、few-shot promptですね\n> 意見抽出ツールを意見抽出でないことに使おうとしてるので汎用的に品質向上は難しいからユーザのブロンプトを調節するのがいちばん筋だと思う\n> システムとして自動的に消すのはよくないのではという議論、そうだと思う、何がゴミで何が取りたいものかを決めるのは受け取り手が決めるものなので我々が決めることではない\n> パンプキンパイのレシピが混ざってたら、たくさんの意見として抽出された(tanenobu)\n> 不思議な出力を選択して元コメントを調べたり、それらをログ的に出力できると改善にまわせそう\n> 私も標準でやったときに結構盛られましたわ。(kitaro)\n\n![](https://i.gyazo.com/3e07293e28f06c3e3404b8db045774a6.png)\n\n> こういう入力が来るなら、few-shotでキーワードを抽出するように指示すればいいと思う(nishio)\n> いまはサンプルとして「意見のリスト」を返すように指示しているから、意見が生成される。キーワードのリストを返せと例示すればキーワードのリストが返る。\n\n> アプローチはプロンプトだけなのか、など相談できれば。\n> (nasuka)デフォルトのプロンプトで上記の事象が発生してるんでしょうか？基本的にはプロンプト改善 or  モデルの変更で> 対処するのが良さそうで、ルールベースで弾く機能を入れるのも案としてはあると思います\n> 元のコメントよりも明らかに文字数が増えている場合は弾くなど\n> （LLMでチェックするプロセスを入れることも可能だが、解決策としてはオーバーな気がする）\n> (nishio)デフォルトのプロンプトで、十分賢いモデルならこうはならないのではという気もするが、とはいえ起きてるのであれば、ごく短い入力に関してはもっと「空リストを返す」という振る舞いをするようにプロンプトを変えてもいいかもですね\n> ブロンプトの試行錯誤がやりやすくなる機能はあるとベターではある\n> うまくいってない入力と出力のペアが集まると色々やりやすくはなると思います(nishio)\n> たとえば上記CSVをo3にぶちこんで不適切な抽出だと思うものを取り出してもらうとか\n\n\n# 提案内容\nうまくいっていない例を収集する仕組みや活動が必要\n> 不思議な出力を選択して元コメントを調べたり、それらをログ的に出力できると改善にまわせそう\n> うまくいってない入力と出力のペアが集まると色々やりやすくはなると思います(nishio)\n\n収集したものをもとにガイドライン的なドキュメントにまとめる。\n(UIにも組み込むとよいと思いましたが、まずはドキュメント化が先かなと思いました。)",
    "type": "issue"
  },
  {
    "id": 3014028565,
    "number": 366,
    "title": "[FEATURE] 複数の公開リスト",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/366",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:28:58Z",
    "body": "# 背景\n\n現在作成されたすべてのレポートが単一のリストに追加されるようになっている。\nレポートの中には関連して作成されるレポートなどもある。\n\n会議ログの補足で、\n\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n\nシリーズレポートに関しては現場で実際に作られているが、リスト機能のニーズを直接確認したわけではないので現状まだ high priority ではない。\n公開非公開の議論の中で個別認証時に不便になりそうという意見。\n\n\n2025/4/23 定例\n> レポートの限定公開ステータスの需要が少し気になってます！\n> boolから型を変えるので後方互換もあるので、思ったより面倒かもしれないので。\n> YouTubeのunlistedみたいなもの\n> Clientのトップに単一のリストがあって自動的にそこに入って公開されてしまう(nishio)\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n> YouTubeみたいにデフォルトprivateかせめてunlistedじゃないといけないのでは\n> 管理画面同様にBASIC認証をかける？(nasuka)\n> レポートごとに個別のパスワードを設定できればいいのでは(nishio)\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n> そういう意味ではそもそもリストが複数作れないといけないのでは(nishio)\n\n\n# 提案内容\nリストを複数作成でき、レポートをリストに登録できる",
    "type": "issue"
  },
  {
    "id": 3014011288,
    "number": 365,
    "title": "[FEATURE] レポートがデフォルトで公開されないようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/365",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:24:06Z",
    "body": "# 背景\n\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n\nサーバーを公開している状態で、作成直後にpublicとして出力される問題がある。\n現在の仕様だと、isPublic = falseなレポートは管理者でも表示ができない。\n\n2025/4/23 定例\n> レポートの限定公開ステータスの需要が少し気になってます！\n> boolから型を変えるので後方互換もあるので、思ったより面倒かもしれないので。\n> YouTubeのunlistedみたいなもの\n> Clientのトップに単一のリストがあって自動的にそこに入って公開されてしまう(nishio)\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n> YouTubeみたいにデフォルトprivateかせめてunlistedじゃないといけないのでは\n> 管理画面同様にBASIC認証をかける？(nasuka)\n> レポートごとに個別のパスワードを設定できればいいのでは(nishio)\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n> そういう意味ではそもそもリストが複数作れないといけないのでは(nishio)\n\n# 提案内容\nデフォルトで非公開、もしくは限定公開( #341 )のようにアクセスできないようにする。\n非公開であっても管理者が作成されたレポートを確認できるようにする。",
    "type": "issue"
  },
  {
    "id": 3013991294,
    "number": 364,
    "title": "[FEATURE] 個別レポートのパスワード認証",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/364",
    "user": "mtane0412",
    "created_at": "2025-04-23T13:18:12Z",
    "body": "# 背景\n\n#341 関連で、個別レポートに認証をかけてよりセキュアにシェアできる機能は、優先度はさておきあってもよい機能ではあると思うのでissueだけ立てておく。\n\n2025/4/23 定例\n> レポートの限定公開ステータスの需要が少し気になってます！\n> boolから型を変えるので後方互換もあるので、思ったより面倒かもしれないので。\n> YouTubeのunlistedみたいなもの\n> Clientのトップに単一のリストがあって自動的にそこに入って公開されてしまう(nishio)\n> そもそもデフォルトpublicでlistedだったら公開したくないものも作成した瞬間公開されてしまう問題があるのでは\n> YouTubeみたいにデフォルトprivateかせめてunlistedじゃないといけないのでは\n> 管理画面同様にBASIC認証をかける？(nasuka)\n> レポートごとに個別のパスワードを設定できればいいのでは(nishio)\n> 複数のシリーズレポートのシェアで不便になりそう(aruga)\n> そういう意味ではそもそもリストが複数作れないといけないのでは(nishio)\n\n\n\n# 提案内容\n\nBASIC認証",
    "type": "issue"
  },
  {
    "id": 3007630765,
    "number": 346,
    "title": "(実験) 同一の内容が大量に投稿される問題への対処法",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/346",
    "user": "nasuka",
    "created_at": "2025-04-21T05:54:34Z",
    "updated_at": "2025-04-30T10:31:38Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/345\n上記のIssueに紐づく実験のIssue\n\n以下元Issueの背景を転載\n* [パブコメの大量投稿](https://x.com/takahiroanno/status/1914151807443718381) によって、入力データの中に似通った内容が大量に含まれる場合がある\n* これによって、以下の問題が起きる\n  * 1.フロントの処理負荷が高くなる\n    * 現在の設計では、数万件〜規模のデータは描画の負荷が高くPCによっては正常に表示できない可能性がある\n  * 2.バックエンドの処理負荷・コストが高くなる\n    * レポート出力処理の際のクラスタリングの計算負荷が高くなる・extraction処理にかかるLLM APIのコストが高くなる\n  * 3.ユーザーの認知負荷が高くなる\n    * 今の形式でクラスタリングや可視化を行うと、スパム的な意見が意見全体の大半を占めるために、本来着目したい意見が目立たなくなってしまう可能性がある\n\n\n# 提案内容\n* 類似する意見をあらかじめまとめたうえで、まとめた後の意見を広聴AIの分析にかける。\n  * まとめた後の意見が表示されるようになることで、フロントの処理負荷が下がり、またユーザーの認知負荷も下がる\n  クラスタよりもより細かい粒度で、「ほとんど同じことを言っている意見」がまとめられると良さそう？（あくまで一案で、この粒度でまとめるのがマストではない）\n* まとめ方には幾つかのアプローチがありそう。\n  * e.g. クラスタリングでまとめる、LLMでまとめる、そのハイブリッド等\n\n↑は問題解決の一つのアプローチの案として記載していますが、他にアプローチがあれば随時コメントにご記載ください。\n\n## 想定する進め方\n* 実験データの選定（or 作成）\n* 実験データに対して、アルゴリズムを適用し、アウトプットを確認\n  * * @nishio , @nasuka （+ 時間があれば@takahiroanno も）あたりは確認しておけると良さそう\n* 問題なさそうであれば機能実装の検討に移る\n\n\n",
    "type": "issue"
  },
  {
    "id": 3007613196,
    "number": 345,
    "title": "（情報整理）同一の内容が大量に投稿される問題への対処法",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/345",
    "user": "nasuka",
    "created_at": "2025-04-21T05:40:51Z",
    "updated_at": "2025-04-23T06:26:21Z",
    "body": "# 背景\n* [パブコメの大量投稿](https://x.com/takahiroanno/status/1914151807443718381) によって、入力データの中に似通った内容が大量に含まれる場合がある\n* これによって、以下の問題が起きる\n  * 1.フロントの処理負荷が高くなる\n    * 現在の設計では、数万件〜規模のデータは描画の負荷が高くPCによっては正常に表示できない可能性がある\n  * 2.バックエンドの処理負荷・コストが高くなる\n    * レポート出力処理の際のクラスタリングの計算負荷が高くなる・extraction処理にかかるLLM APIのコストが高くなる\n  * 3.ユーザーの認知負荷が高くなる\n    * 今の形式でクラスタリングや可視化を行うと、スパム的な意見が意見全体の大半を占めるために、本来着目したい意見が目立たなくなってしまう可能性がある\n\n\n# 進め方\n* アルゴリズムの改善によって上記の問題を解決するかを検討する。\n* いきなり機能を実装するのではなく、プロダクトとは独立して実験スクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n* 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n```\n1: 独立したスクリプトとして機能するものを作れるが実験\n2: それをapiサーバに統合するか検討\n3: それをどんなGUIでユーザに見せるか検討\nという流れがスムーズかなと思いました\n```",
    "type": "issue"
  },
  {
    "id": 3006474334,
    "number": 341,
    "title": "[FEATURE] レポートの限定公開",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/341",
    "user": "mtane0412",
    "created_at": "2025-04-19T14:49:51Z",
    "updated_at": "2025-04-23T13:07:37Z",
    "body": "# 背景\n- レポートの公開ステータスは公開と非公開で、非公開にした場合、管理者であってもレポートページを参照することができない\n- 面白いレポートができたので他人に共有したいが、一般に広く公開したいわけではないものがある。既に作成したデータも公開しているので、部分公開しようと思うと手間がかかる。\n\n\n# 提案内容\n- Youtubeの限定公開のように、URLを知っている人だけがアクセスできるレポートページの状態を作る\n- 単純にトップページからリンクされないように出力すればできる？",
    "type": "issue"
  },
  {
    "id": 3004393459,
    "number": 333,
    "title": "[FEATURE] static exportしたHTMLファイルをwebサーバーなしで閲覧できるようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/333",
    "user": "nasuka",
    "created_at": "2025-04-18T08:28:41Z",
    "updated_at": "2025-04-24T13:32:46Z",
    "body": "# 背景\n* static exportしたhtmlファイルについて、現在はwebサーバーにhtmlを配置しないと閲覧できないという問題がある。\n  * 添付したスクショの様にエラーが発生し、データ・スクリプト・画像等が読み込めない\n* この問題により、閲覧する際にWebサーバーが必須となるためレポートを共有するハードルが高い\n\n![Image](https://github.com/user-attachments/assets/40e25d38-31d3-4517-90e2-d3e2bb14b7cf)\n\n# 提案内容\nWebサーバーなしで閲覧できるhtmlファイルを作成できるようにする。\n自分がフロントに余り詳しくなく、上記を実現するための具体的なアプローチを思いつく方はコメントいただけると助かります。\n",
    "type": "issue"
  },
  {
    "id": 3002618758,
    "number": 324,
    "title": "（実験）ファクトチェックロジックの実験",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/324",
    "user": "masatosasano2",
    "created_at": "2025-04-17T14:09:02Z",
    "updated_at": "2025-04-24T09:05:26Z",
    "body": "# 背景\n各サービスでファクトチェックが必要とされている。\nファクトチェック処理は共通化できるので、本Issueはその共通処理を実験するためのIssueとする。\n処理のコードをどこに置くべきかはidobata側のリポジトリの統一後に検討する。\n\n# 関連Issue\n\n1. https://github.com/digitaldemocracy2030/kouchou-ai/issues/170\n2. https://github.com/digitaldemocracy2030/idobata-analyst/issues/97\n3. https://github.com/digitaldemocracy2030/idobata-discourse-agent/issues/51\n4. https://github.com/digitaldemocracy2030/idobata/issues/17\n\n# 関連Issue1から抜粋\n\n<img width=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5968bb66-9070-4a84-b0cb-170205f319e5\" />\n\n# 提案内容\n\n- 実装方針：どこかで議論されていたとおり怪しいものは弾かずOKにして、明確に偽情報と判断した場合のみ弾く。\n- 準備：偽情報を含みそうな適当なデータセットを用意し、人力で正解データを作る。\n- 実験概要：以下のコストや精度を比較する。他のアプローチがあれば随時試す。\n    - 既存のファクトチェックサービスで偽と判定された場合のみNGとする\n    - いくつかの信用できる情報源を指定し、そこから取得できる事実から偽と判定された場合のみNGとする\n    - 単純なWeb検索の結果から偽と判定された場合のみNGとする\n    - DeepResearch的な仕組を自作し、それに偽と判定された場合のみNGとする\n    - 既存のDeepResearch系のサービスで偽と判定された場合のみNGとする",
    "type": "issue"
  },
  {
    "id": 2991108744,
    "number": 305,
    "title": "[FEATURE]CSVアップロード時にタイトルや説明文を自動で埋めてほしい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/305",
    "user": "masatosasano2",
    "created_at": "2025-04-13T07:45:30Z",
    "updated_at": "2025-04-23T09:08:53Z",
    "body": "# 背景\n入力の一手間を減らしたい\n入力漏れでエラーにならないでほしい\n\n# 提案内容\n- タイトルと説明文を optional にする\n- 空の場合にCSVの内容から自動生成する　※説明文は必須でないかも",
    "type": "issue"
  },
  {
    "id": 2991086810,
    "number": 302,
    "title": "[FEATURE]「公開」ボタンを押した時の効果を分かりやすくする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/302",
    "user": "masatosasano2",
    "created_at": "2025-04-13T06:51:12Z",
    "updated_at": "2025-04-30T11:53:09Z",
    "body": "# 背景\nキャプションが「公開」の状態のボタンを押すと非公開になり、「非公開」の状態のボタンを押すと公開になる。\nキャプションの意味は現在の状態であってボタンを押した時に発生するアクションではないので間違ってはいないのだが、\nclient-adminでもclientでも大抵のボタンのキャプションは押した時のアクションに近いので、やや紛らわしい。\n\n# 提案内容\n- 案1：マウスオーバー中のみ「非公開にする」「公開にする」などのヒントを表示する\n- 案2：マウスオーバー中のみ逆の状態の見た目にする\n- 案3：ボタンからスイッチに変える\n- 案4：ボタンからチェックボックスに変える　＊この場合、「非公開にする」チェックの方が自然かも",
    "type": "issue"
  },
  {
    "id": 2990889159,
    "number": 294,
    "title": "[FEATURE]ラベルが多い時の重なりの問題",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/294",
    "user": "nishio",
    "created_at": "2025-04-13T00:59:47Z",
    "updated_at": "2025-04-30T11:37:18Z",
    "body": "## 課題\n\n広聴AIのレポート画面に表示されるプロットグラフにおいて、分析によって生成されたクラスタ（意見グループ）の数が多い場合に、各クラスタを示すラベルが互いに重なり合ってしまい、判読が困難になるという問題があります。\n\n特に、自治体での利用など、詳細な分析のためにクラスタを細かく分ける傾向がある場合に、この見にくさが顕著になります。\n> 「自治体的には、クラスタを細かく分ける方向の議論が強い。」\n> 「UIの観点で、プロットグラフがそれに対応していけるとよさそう。」\n> 「ラベルは重なって見にくくならないようにできるとか」\n\n現状のままでは、せっかく詳細に分類された意見グループの内容を、グラフ上で直感的に把握することが難しくなっています。\n\n## 解決策案\n\nグラフ上でのラベルの重なりを軽減し、視認性を向上させるために、以下のいずれか、または組み合わせによる改善策を検討します。\n\n*   **ラベル表示の選択的ON/OFF:** ユーザーが表示したいラベルを選択したり、一定数以上のラベルはデフォルトで非表示にする機能を追加する。\n    > 「ラベル全部は表示しない設定」\n*   **重なり回避アルゴリズムの導入:** ラベルの位置を自動的に調整し、重なりを最小限に抑えるアルゴリズムを実装する。\n*   **インタラクティブなラベル操作:** ユーザーがグラフ上でラベルをドラッグ＆ドロップして任意の位置に移動できるようにする。\n*   **ズームレベルに応じた表示制御:** グラフの拡大率に応じて、表示するラベルの数を調整する（例: 縮小時は主要なラベルのみ表示）。",
    "type": "issue"
  },
  {
    "id": 2990880118,
    "number": 292,
    "title": "[DOCUMENT]OpenAI APIの課金設定に関する混乱",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/292",
    "user": "nishio",
    "created_at": "2025-04-13T00:52:56Z",
    "updated_at": "2025-04-30T11:51:00Z",
    "body": "# 現在の問題点\n非エンジニアにとって、OpenAI APIキーの取得と課金設定（クレジット購入）が必要であることが分かりにくく、ChatGPT Plusと混同しやすい。設定不備によりQuota超過エラー (429) が発生する。\n\n「OpenAIの課金の設定してなかった」\n「Error code: 429 - 'You exceeded your current quota, please check your plan and billing details.'」\n「非エンジニアの場合、環境を設定した際にOpenAI APIに課金するというステップがわからない(たねのぶ)」\n「OpenAIに課金=ChatGPT Plusだと思う人もいる」\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n(解決策) READMEに、OpenAI APIキーの取得手順と、ChatGPT Plusとは別にAPI利用のためのクレジット購入（支払い方法登録）が必要であることを明記する。Quota超過エラーの意味と対処法も説明する。\n",
    "type": "issue"
  },
  {
    "id": 2990876385,
    "number": 290,
    "title": "[FEATURE]階層図のUI/UX改善",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/290",
    "user": "nishio",
    "created_at": "2025-04-13T00:49:58Z",
    "updated_at": "2025-04-30T12:16:23Z",
    "body": "# 背景\n階層図の操作性や情報表示に改善の余地がある (クリック操作の分かりにくさ、表示リセット、親子関係不明瞭、命名規則、戻るボタン欠如)。\n\nfrom 4/12 meetup\n>「階層図のギミックを確認、初見でクリックによって深層に移動できることがわからなかった。」\n「全体図、濃い意見グループ、階層図を行き来するときに階層図の表示がリセットされなくなるとうれしい。」\n「濃い意見グループで上がってきているクラスタが第一階層？のクラスタのどれに属すのかがわかるとうれしい。」\n「階層図の第一階層？第二階層の名前が決まっていると嬉しい。」\n「「１階層前に戻る」ボタンがあると助かります」\n\n# 提案内容\n(解決策) クリック操作のガイド表示、表示状態の保持、親子関係の明示（例: パンくずリスト）、階層命名規則の明確化、戻るボタンの追加など、UIを改善する。\n",
    "type": "issue"
  },
  {
    "id": 2990804598,
    "number": 285,
    "title": "[FEATURE]利用可能なLLMを増やす",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/285",
    "user": "nishio",
    "created_at": "2025-04-12T23:50:46Z",
    "updated_at": "2025-04-23T08:15:19Z",
    "body": "# 背景\n現在OpenAI APIのみ対応しており、Gemini無料枠やLocalLLMなど他の選択肢を利用できない。\n\nfrom 4/12 meetup\n>「Geminiの無料枠をOpen AI互換で使えたりする？」\n「他LLM対応はうれしい（LocalLLMなど）」\n「Local LLM(OpenAI互換)、embeddingなどで開発はケチりたい」\n「idobataの方ではopenrouterが使われているのに対して、kouchouではopenaiが使われているのが不便に思った。統一してくれるとありがたいと思う。」\n\n\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n>Gemini API、OpenRouter API、OpenAI互換のLocalLLMなど、複数のLLMに対応する。\n\n(nishioコメント) OpenRouter APIには追加で対応してもいいかもしれない、ただし「統一」はありえない(OpenRouterを使えないユーザを締め出すことになるから)",
    "type": "issue"
  },
  {
    "id": 2984650643,
    "number": 274,
    "title": "[BUG] 静的ファイルがGithub Pagesでうまく表示されない件",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/274",
    "user": "keisuke-a",
    "created_at": "2025-04-10T06:52:19Z",
    "updated_at": "2025-04-30T13:37:33Z",
    "body": "### 概要\n\n静的ファイルをoutして、その中身をgithub pagesで公開すると、out/index.html自体は表示はされるが、画像要素がなかったりリンク先（個別ページ）が404になるなど、うまく表示されない。（参照が絶対パスになってることによる？）\n",
    "type": "issue"
  },
  {
    "id": 2978480128,
    "number": 254,
    "title": "(情報整理)Windows環境で試す人のためのガイドが必要",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/254",
    "user": "nishio",
    "created_at": "2025-04-08T03:14:53Z",
    "updated_at": "2025-04-23T10:25:10Z",
    "body": "Windows環境で試す人の踏みそうなトラブルシューティング\n\n西尾も角野さんもMacなのでどんなトラブルが起きるのかを観測できてない感、issueでもslackでもガンガン書いてもらえるといいと思う\n\nWindows環境で試すとなった時に、まずいきなり「生環境でやる」「WSLでやる」「Dockerでやる」の3つの選択肢があると思ってて、どれが一番スムーズなのかはよくわかってない、Windows環境のある人の協力があるとありがたいゾーン\n\n関連Slack: https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1744081553571589",
    "type": "issue"
  },
  {
    "id": 2973973916,
    "number": 235,
    "title": "[DOCUMENT] README に GitHub Pages で公開する手順を記載する",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/235",
    "user": "shgtkshruch",
    "created_at": "2025-04-05T07:07:57Z",
    "updated_at": "2025-04-30T11:55:16Z",
    "body": "# 現在の問題点\n<!-- 現在のコードの何が問題なのか、どのような技術的負債があるかを説明してください -->\n\n- client を static build して GitHub Pages で公開する場合、ビルドしたファイルをアップロードすると一部のコードが動かない\n  - 原因: GitHub Pages で動いている Jekyll が `_` から始まるファイルやディレクトリを無視するため、static build 後の `_next` 以下のファイルが 404 になる\n    - https://github.blog/news-insights/the-library/bypassing-jekyll-on-github-pages/\n  - `.nojekyll` というファイルをルートに置くと動くようになるが、この挙動は知らない人が多そうで GitHub Pages で公開する人が同じ罠にハマる可能性がある\n\n# 提案内容\n<!-- どのようなリファクタリングを提案するのか、具体的に説明してください -->\n\n- README の静的ファイル出力のセクションに、GitHub Pages で公開する場合の手順を記載する\n  - ルートに `.nojekyll` ファイルを追加することもここに記載する",
    "type": "issue"
  },
  {
    "id": 2966119535,
    "number": 221,
    "title": "(情報整理)試行錯誤の負担を減らす",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/221",
    "user": "nishio",
    "created_at": "2025-04-02T11:45:10Z",
    "updated_at": "2025-04-30T11:43:43Z",
    "body": "とりあえず立てて、あとで詳細化します\n\nfrom 4/2定例\n>使うまでの準備工数に認識のギャップがある\n>プロンプトやクラスタ数等、様々なチューニングを行う必要があるが、その認識がない\n>試行錯誤の負担を減らす必要がある(& ドキュメント？)\n\n>自治体の典型的な使い方がわかったら型を示せる\n\n>100件、1000件とサンプリングする？→黙ってやると有害、確認ダイアログがあるといい\n\n- クラスタ数の変更はextraction, embeddingが終わった後のデータでスピーディにできる 関連: https://github.com/digitaldemocracy2030/kouchou-ai/issues/19\n- extractionの試行錯誤の負担を減らす仕組みが必要\n\n- いきなり1万件入れて1時間くらい待たされる →　https://github.com/digitaldemocracy2030/kouchou-ai/issues/11\n\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/241",
    "type": "issue"
  },
  {
    "id": 2945716392,
    "number": 176,
    "title": "[FEATURE]LLMベースの分類機能の実装",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/176",
    "user": "nasuka",
    "created_at": "2025-03-25T08:30:43Z",
    "updated_at": "2025-04-23T06:17:26Z",
    "body": "# 背景\n* 既存の階層クラスタリングアルゴリズムは以下の課題がある\n  * ある程度データの件数が存在することを前提としている（小規模データだとワークしにくい）\n  * embeddingに基づいてデータをまとめているため、クラスタリングの品質がembedding（およびUMAP後の2次元ベクトル）の品質に依存する\n\n\n# 提案内容\nLLMベースの分類機能を実装する。これは以下の2つの方向性がある。\n\n1. 分類するトピックをLLMで自動で構築するパターン\n  a. データから、どのようなトピックがあるかを自動で推定し、各意見をトピックに分類する\n  b. 参考: [sensemaking](https://medium.com/jigsaw/making-sense-of-large-scale-online-conversations-b153340bda55)\n2. 分類するトピックを人間が付与するパターン\n  a. 意見を所与のトピックに分類する\n  b. あらかじめ決められたトピックに意見を分類したい場合に活用できる\n\nあった方が良い機能であるように思う一方で、既存のクラスタリングベースのアルゴリズムとこの機能をどう同居させるかが悩ましい。\n既存のレポートは見せ方も異なってくると思われるので、別形式のページを出力するのが一案。\n\n# 進め方について\n* いきなり機能を実装するのではなく、プロダクトとは独立して実験スクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n* 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、機能することがわかった段階でプロダクトへの実装イシューを立てる",
    "type": "issue"
  },
  {
    "id": 2945669000,
    "number": 173,
    "title": "[FEATURE]グラウンディングの実験",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/173",
    "user": "nasuka",
    "created_at": "2025-03-25T08:10:43Z",
    "updated_at": "2025-04-23T06:17:33Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/172\n* 上記のイシューに記載しているグラウンディングの実験を行う\n\n\n# 実施内容\n以下を実施する想定\n\n* グラウンディング処理を行う実験スクリプトを実装\n* 検証データに対してグラウンディングされたクラスタ説明文を出力\n* 結果を確認し、問題なければプロダクトの機能として実装する\n  * 確認のプロセスについては要検討",
    "type": "issue"
  },
  {
    "id": 2945659198,
    "number": 172,
    "title": "[FEATURE]クラスタ説明文におけるグラウンディングの実装",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/172",
    "user": "nasuka",
    "created_at": "2025-03-25T08:07:39Z",
    "updated_at": "2025-04-23T06:17:40Z",
    "body": "# 背景\n* クラスタの説明文では所属する意見の内容を解説しているが、本当にそのような意見が存在するのか確認するのに手間がかかる\n* レポートの説得力を増す上で、説明の根拠となる元データを簡単に参照できるようにしたい\n\n\n# 提案内容\n* クラスタ説明文において、その根拠となるargumentを紐づけたテキストを表示する\n  *  参考: https://medium.com/jigsaw/making-sense-of-large-scale-online-conversations-b153340bda55\n    * Groundings\n    * 紐づけ方・紐づけた文章の生成のさせ方は様々なアプローチがあるので、アプローチを検討する部分からassigneeの方にお任せする\n\n# 進め方について\n* いきなり機能を実装するのではなく、プロダクトとは独立して実験スクリプトを実装し、検証用のデータセットを使って結果の妥当性を評価する\n  * 問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n",
    "type": "issue"
  },
  {
    "id": 2945124654,
    "number": 144,
    "title": "（実験）LLMによるクラスタ品質の自動評価",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/144",
    "user": "nasuka",
    "created_at": "2025-03-25T03:36:54Z",
    "updated_at": "2025-04-30T10:40:23Z",
    "body": "# 背景\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/143\n\n* こちらのイシューは上記のサブイシュー\n\n\n# 提案内容\n* LLMによるクラスタ品質の自動評価の実験を行う\n  * 出力されたクラスタタイトル・説明文・所属データ点の情報に基づいて、LLMでクラスタの品質を評価する\n* どのようなアプローチで評価するかは、assigneeの方におまかせする\n  * 例としては、例えば以下のような評価項目のスコアをLLMで出力するようなアプローチがある\n    * クラスタ内部の一貫性評価\n      * クラスタタイトル・説明文・所属データのテキストを入力し、一貫性を100点満点でスコアリングする\n    * クラスタ外部との分離度の評価\n      * クラスタAの情報（タイトルや所属データ等）と、重心の距離が最もAに近いクラスタBの情報をLLMに入力し、分離度を出力する\n",
    "type": "issue"
  },
  {
    "id": 2945122247,
    "number": 143,
    "title": "[FEATURE]クラスタ品質の自動評価",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/143",
    "user": "nasuka",
    "created_at": "2025-03-25T03:35:01Z",
    "updated_at": "2025-04-23T06:17:54Z",
    "body": "# 背景\n* クラスタリング結果が妥当なものになっているのかを検証したい\n* 一方で、個別のクラスタを人手で評価するのは非常に労力がかかる\n  * 50件のクラスタについて整合性を確認することは難しい\n\n# 提案内容\n* クラスタリングの結果について自動評価を行う\n  * アプローチの詳細は個別のサブイシューに記載する\n\n# 進め方について\n* いきなり機能を実装するのではなく、プロダクトとは独立して評価スクリプトを実装し、検証用のデータセットを使って評価実験を行う\n* 自動評価の結果について妥当性を確認し、問題なければプロダクトの機能として実装を進める\n  * 一旦実験系のIssueだけ立てておき、実験結果より自動評価が機能することがわかった段階でプロダクトへの実装イシューを立てる\n\n\n## 対象データセット\n* 文化庁のパブリックコメントのデータセットが使える\n  * https://www.bunka.go.jp/seisaku/bunkashingikai/chosakuken/hoseido/r05_07/\n* 現在開示請求しているエネルギー庁のパブコメのデータも使える可能性がある\n\n",
    "type": "issue"
  },
  {
    "id": 2940417589,
    "number": 130,
    "title": "[DOCUMENT]ソースコードの実装以外での貢献方法がもっと言語化されるとよい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/130",
    "user": "nishio",
    "created_at": "2025-03-22T14:31:29Z",
    "updated_at": "2025-04-30T11:42:56Z",
    "body": "# 現在の問題点\n非エンジニアが何をしたらいいかわからない\n\n# 提案内容\n\n例えば\n- GitHubのissuesをみて「その問題が解決されると自分も助かる！」と思ったものに:+1:をつけるのはタスクの優先付の参考になるので貢献\n- 質問をするのは言語化のきっかけになるので貢献\n- 将来的に「AのレポートとBのレポートのどっちがいいですか？」をやる可能性がある、そう言うのに回答してくれるのは貢献\n\n他に思いついたら下にコメントつけてください",
    "type": "issue"
  },
  {
    "id": 2930296014,
    "number": 97,
    "title": "[FEATURE]CSVのフォーマットのエラーをわかりやすくする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/97",
    "user": "nishio",
    "created_at": "2025-03-19T02:43:19Z",
    "updated_at": "2025-04-23T07:30:56Z",
    "body": "# 背景\n>従来のフォーマット(comment-body)の物をいれると画面遷移せずにトースターでエラーが表示されるがエラーの詳細はないので解決方法が分からなさそう、ここはカラム名の間違い、文字コードがSJIS、BOMがついてる、などなどいろんなハマりバターンが予想されるのでケアできると良さそう\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2926967566,
    "number": 79,
    "title": "[FEATURE]CSVアップロード時にそれを処理した場合のコストを表示",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/79",
    "user": "nishio",
    "created_at": "2025-03-18T03:19:29Z",
    "updated_at": "2025-04-23T15:23:27Z",
    "body": "# 背景\n\n>安野貴博: ファイルアップロードすると解析掛ける前にコストを教えてくれるの良さそうですね\n>ほづみゆうき: ついにレポート出力まで漕ぎ着けたのですがAPI料金がどれくらいになるのかまったく感覚的に分からずドキドキだったので素人にはあると嬉しいと思います！\n\n# 提案内容\n\nこれを実現するためには2つの要素が必要\n\n- 1: done( ~~いまCSVアップロード即処理開始になっているが、一旦確認ダイアログを挟む必要がある~~ )\n- 2: どのくらいのデータだとどれくらいの費用になるのかの見積もり関数が必要\n\n## (2)の真面目な作り方\n\n(1)は @nanocloudx さんが詳しいと思うが、(2)の部分がわからなくて着手できないと思う。\nUI改善に着手する前に、この関数を作るためのデータ自体を集めていないのでそこからやる必要がある。\n\n- a: extraction\n- b: embedding\n- c: その後のレポート作成\n\n(a)がO(N)でgpt4oなので大きく、(b)はO(N)だがembedding modelなので安く、cはクラスタ数のオーダー(階層モデルなど今回いろいろ追加したから読めない)という感じで、このそれぞれに分けて料金を出せるようにしてデータ量違いでデータを集めればよい。\n\n## (2)の雑な作り方\n\nユーザのペインは「すごい高額だったらどうしよう」だと思うので、まず「100円未満っすね」「100~1000円くらい」「これはでかいから1000円以上かかるよ」の3段階でいいのでは説",
    "type": "issue"
  },
  {
    "id": 2899402452,
    "number": 24,
    "title": "[FEATURE]濃いクラスタを表示している際は、クラスタの説明文も濃いクラスタに合わせたい",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/24",
    "user": "nasuka",
    "created_at": "2025-03-06T05:36:37Z",
    "updated_at": "2025-04-30T11:46:18Z",
    "body": "# 背景\n* 現状は濃いクラスタ表示した際も、全体図と同じクラスタの説明文が並んでいる（最上位層のクラスタが並んでいる）\n  * 添付画像のように、現状は散布図上のタイトルと下部のタイトルが整合しない\n![Image](https://github.com/user-attachments/assets/27fde824-7e69-4c3d-8f0a-475ca265b20d)\n\n# 提案内容\n* 「濃いクラスタ」が選択されている場合はそれらの説明文を表示したい\n  * フィルタされているクラスタの解説文のみをページ下部に表示する\n\n\n\n\n",
    "type": "issue"
  },
  {
    "id": 2893959131,
    "number": 19,
    "title": "[FEATURE]レポートの複製・再利用機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/19",
    "user": "nasuka",
    "created_at": "2025-03-04T11:38:39Z",
    "updated_at": "2025-04-23T07:21:48Z",
    "body": "# 背景\n* 設定を少しだけ変えて実行したいケースがある\n  * 例えばクラスタ数だけ変えるなど\n\n\n# 提案内容\n* レポートの設定複製機能を実装する\n\n\n# 機能の提供価値\n* LLM APIコストの削減\n  * レポート出力までのステップを途中から実行できるようになるためAPIのコストを削減できる\n* レポート出力の高速化",
    "type": "issue"
  },
  {
    "id": 3031234513,
    "number": 404,
    "title": "散布図にズームとパンを追加（あとスクショもできるようになった）",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/404",
    "user": "tokoroten",
    "created_at": "2025-04-30T13:08:13Z",
    "merged_at": "2025-04-30T13:47:07Z",
    "body": "# 変更の概要\r\n散布図をズームとパンで操作できるようにするために、Plotlyのコンフィグを変更した\r\n\r\n副次的効果として、スクリーンショットボタンが付いた\r\n\r\n# スクリーンショット\r\n\r\n![dd2030-plotly](https://github.com/user-attachments/assets/a68e8d26-59dc-43da-a3be-77aa28cea80f)\r\n\r\n# 変更の背景\r\n範囲選択して拡大がめんどくさすぎた\r\n\r\n# 関連Issue\r\n\r\n#306 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 7,
    "deletions": 3,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3028461140,
    "number": 394,
    "title": "E2Eテスト環境の依存関係インストール修正",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/394",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T13:56:39Z",
    "merged_at": "2025-04-29T16:51:01Z",
    "body": "# E2Eテスト環境の依存関係インストール修正\n\n## 概要\nE2Eテスト環境のCI実行時に依存関係のインストールが失敗する問題を修正しました。\n\n## 修正内容\n- `npm ci` コマンドが必要とする `package-lock.json` ファイルを追加\n- これにより、GitHub Actionsでの依存関係インストールが正常に実行できるようになります\n\n## 参考\nこのPRはPR #390 の修正です。\n\nリンク: https://app.devin.ai/sessions/fc39bd7faed64fc1974439a23934e541\n依頼者: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 117,
    "deletions": 44,
    "changed_files": 5,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3028250973,
    "number": 392,
    "title": "文脈埋め込み（エンベデッド）の処理をローカルで動かせるようにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/392",
    "user": "tokoroten",
    "created_at": "2025-04-29T12:59:02Z",
    "merged_at": "2025-04-29T13:58:45Z",
    "body": "# 変更の概要\r\n- 埋め込み処理のためのSentenseTransformerを導入\r\n\r\n# スクリーンショット\r\n- 埋め込み処理をサーバ内で行う、というチェックボックスを作成しました\r\n![image](https://github.com/user-attachments/assets/43339bad-79fd-410f-bb5e-49296e9ef627)\r\n\r\n# 変更の背景\r\n- 自治体職員が利用する場合、OpenAIのアカウント作成や、APIの利用料金で躊躇する可能性があるため、エンベデッド処理をSentenseTransformerを使ってローカル化することで、そのコストを抑制する\r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n#385\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 103,
    "deletions": 4,
    "changed_files": 12,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3028075019,
    "number": 390,
    "title": "基本的なE2Eテスト環境構築",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/390",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T12:07:02Z",
    "merged_at": "2025-04-29T13:48:13Z",
    "body": "# 基本的なE2Eテスト環境構築\n\n## 概要\nissue #380 に基づき、Playwrightを使用した基本的なE2Eテスト環境を構築しました。\n\n## 実装内容\n1. プロジェクト全体で使用するためのPlaywrightセットアップ (`/test/e2e/`)\n2. 管理者向けレポート作成ページの基本的なテストケース\n3. GitHub Actionsでの自動実行設定（日次実行とラベルトリガー）\n4. APIエンドポイントと認証のモック設定\n\n## テスト方法\n以下のコマンドでローカルでテストを実行できます：\n```\ncd test/e2e\nnpm install\nnpx playwright install\nnpm test\n```\n\n## 参考\nこのPRはissue #380 を解決します。\n\nリンク: https://app.devin.ai/sessions/fc39bd7faed64fc1974439a23934e541\n依頼者: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 354,
    "deletions": 0,
    "changed_files": 11,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3027335374,
    "number": 389,
    "title": "用語統一: クラスタ→意見グループ、クラスタリング→意見グループ化",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/389",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T07:17:50Z",
    "merged_at": "2025-04-29T07:46:45Z",
    "body": "# 用語統一: クラスタ→意見グループ、クラスタリング→意見グループ化\n\n## 変更内容\n- clientとclient-adminフロントエンドコンポーネント内の「クラスタ」という用語を「意見グループ」に変更\n- 「クラスタリング」という用語を「意見グループ化」に変更\n- 変数名やクラス名は変更せず、表示テキストのみを変更\n\n## 関連Issue\nCloses #388\n\n## 影響範囲\n- ユーザー向け表示テキストのみの変更\n- 機能的な変更はなし\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/823bf4bf008344e68a5415f15c165404\n\n## Requested by\nnsk.smn@gmail.com\n",
    "additions": 35,
    "deletions": 35,
    "changed_files": 11,
    "co_author": "nsk.smn",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3027214568,
    "number": 387,
    "title": "Windows環境セットアップガイドの改善",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/387",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T06:29:09Z",
    "merged_at": "2025-04-29T12:13:09Z",
    "body": "# Windows環境セットアップガイドの改善\n\n## 変更内容\n\n以下のフィードバックに基づいてWindows用のセットアップガイドを更新しました：\n\n1. Dockerインストール後の再起動の必要性を明記\n   - Dockerコマンドのパスが通るためには再起動が必要な場合がある点を追加\n\n2. Docker Desktopの明示的な起動の必要性を強調\n   - 自動起動設定をしていない場合は毎回手動で起動する必要がある点を追加\n\n3. OpenAI APIキーの貼り付け方法に関する注意点を追加\n   - コマンドプロンプトではCtrl+Vが機能しないため、右クリックでの貼り付け方法を案内\n\n4. OpenAI APIキーの有効性チェック機能を追加\n   - setup_win.batにAPIキーの形式チェック機能を実装\n   - 不正な形式の場合に警告と確認を表示\n\n## テスト\n\n- setup_win.batの変更はWindows環境でのみ完全にテスト可能ですが、バッチファイルの構文は正しく更新されています\n- ドキュメントの更新はユーザーフィードバックに基づいて明確に記述されています\n\nLink to Devin run: https://app.devin.ai/sessions/28c147520d24426cad036b05ca8d9f1a\nRequested by: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 36,
    "deletions": 5,
    "changed_files": 2,
    "co_author": "NISHIO Hirokazu",
    "requester": "(nishio.hirokazu",
    "type": "pr"
  },
  {
    "id": 3026978383,
    "number": 386,
    "title": "ドキュメント: v2.0.0リリースに伴い、各プラットフォーム向けユーザーガイドを更新・追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/386",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-29T04:06:29Z",
    "merged_at": "2025-04-29T04:16:19Z",
    "body": "# 概要\n安定版v2.0.0リリースに伴い、ドキュメントを更新しました。\n\n## 変更内容\n1. Windows環境でのユーザーガイドを「Zipでダウンロードして」から「安定版リリースをダウンロードして」に変更\n2. Mac環境向けのユーザーガイドを新規作成\n3. Linux環境向けのユーザーガイドを新規作成\n4. Mac/Linux用のセットアップスクリプト（`setup_mac.sh`、`setup_linux.sh`）を作成\n5. Mac/Linux用の起動/停止スクリプト（`start_mac.sh`、`stop_mac.sh`、`start_linux.sh`、`stop_linux.sh`）を作成\n6. READMEを更新し、ツール利用者（releaseからダウンロード）とOSS開発者（mainブランチをgit cloneする）の区別を明確化\n7. CONTRIBUTING.mdに開発者向けの注意書きを追加\n\n## 関連Issue\nなし\n\n## 確認事項\n- [ ] 新規作成したMac/Linux向けガイドの内容が適切か\n- [ ] 作成したスクリプトが各環境で正常に動作するか\n- [ ] リンクが正しく機能するか\n- [ ] 言語の一貫性が保たれているか\n\n## Link to Devin run\nhttps://app.devin.ai/sessions/224687d6737a40f7ac37bd2365910458\n\n## CLA\nI have read the CLA Document and I hereby sign the CLA\n",
    "additions": 334,
    "deletions": 11,
    "changed_files": 11,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3023094512,
    "number": 384,
    "title": "プロンプトの編集バグを修正しclient-adminのリファクタリングを再適用する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/384",
    "user": "mtane0412",
    "created_at": "2025-04-27T13:48:16Z",
    "merged_at": "2025-04-28T01:46:21Z",
    "body": "# 変更の概要\r\n- AISettingsSection.tsx を変更し、内部で usePromptSettings を使わず、親から props として promptSettings を受け取るようにしました\r\n- page.tsx を変更し、既存の promptSettings を AISettingsSection コンポーネントに渡すようにしました\r\n- revertされていたリファクタリングを再適用\r\n\r\n## 追加調査\r\nクラスタ数やLLMモデルの変更は確認した。\r\nRoo Code(Claude 3.7)による各コンポーネントで同様の問題が起きていないかの調査\r\n- BasicInfoSection - 問題なし。すべての状態とハンドラーを props として受け取っています。\r\n- CsvFileTab - useClusterSettings をインポートしていますが、実際には使用していません(型情報を使用)。props として clusterSettings を受け取っているので問題ありません。\r\n- ClusterSettingsSection - 問題なし。すべての状態とハンドラーを props として受け取っています。\r\nSpreadsheetTab - useClusterSettings をインポートしていますが、実際には使用していません(型情報を使用)。props として clusterSettings を受け取っているので問題ありません。\r\n- WarningSection - 静的コンポーネントで、内部で状態を持っていません。\r\nCommentColumnSelector - 問題なし。すべての状態とハンドラーを props として受け取っています\r\n\r\n# スクリーンショット\r\n## プロンプト変更の確認\r\n![](https://i.gyazo.com/80af573fef515190e2ed8c6373657236.png)\r\n各段階で更新文字列を確認した\r\n\r\n## モデルの確認\r\n![](https://i.gyazo.com/d69221924053a83235644daba60b64e0.png)\r\n各段階でモデルが変更されていることを確認\r\n\r\n# 変更の背景\r\n- client-adminのリファクタリングを実施したところ、カスタムプロンプトが反映されていないバグが生じた(revertで対応)\r\n- コンポーネント内で状態を持っていた\r\n\r\n# 関連Issue\r\n#351 #358 : client-adminのリファクタリング\r\n#375 : カスタムプロンプトがレポートに反映されていないバグレポート\r\n#377 : revert\r\n#380 : E2Eテスト導入\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1494,
    "deletions": 1110,
    "changed_files": 18,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3021565757,
    "number": 383,
    "title": "add mtane0412 to maintainer",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/383",
    "user": "nasuka",
    "created_at": "2025-04-26T06:54:41Z",
    "merged_at": "2025-04-26T06:54:58Z",
    "body": "# 変更の概要\r\nたねのぶさんをメンテナに追加\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 2,
    "deletions": 1,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3020414103,
    "number": 382,
    "title": "LLMの出力にStructured Outputによるjsonフォーマットの強制を可能にする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/382",
    "user": "tokoroten",
    "created_at": "2025-04-25T15:44:10Z",
    "merged_at": "2025-04-28T06:22:33Z",
    "body": "# 変更の概要\r\n- ChatGPTを呼び出す際に、jsonスキーマによる出力フォーマットを指定可能にする\r\n- pydanticのBasemodelを継承した型による出力フォーマットの指定を可能にする\r\n\r\n# 変更の背景\r\n現在は、ChatGPTの生成の揺らぎによって、出力されるjsonのフォーマットが揺らぐという問題がある。そのため、structured outputを有効化して、出力フォーマットを固定化する。\r\nhttps://platform.openai.com/docs/guides/structured-outputs\r\n\r\n#352 で、LLMのプロンプトによって出力フォーマットを制御することを検討しているが、structured outputによって、出力フォーマットを明示的に指定したほうが効率的である。\r\n\r\n# 関連Issue\r\n#373\r\n#296\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました\r\n\r\n# 現在の開発状況\r\n- llm.py を単体実行して動作確認をしている、全体をテストしているわけではない\r\n- 呼び出し元を改修できていない\r\n- Azure版の動作確認ができていない\r\n",
    "additions": 442,
    "deletions": 71,
    "changed_files": 6,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3019897887,
    "number": 381,
    "title": "Azure に client-static-build コンテナを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/381",
    "user": "shgtkshruch",
    "created_at": "2025-04-25T12:15:49Z",
    "merged_at": "2025-04-25T14:14:17Z",
    "body": "# 変更の概要\r\n- Azure 環境に #360 で実装した、client の static build 用のコンテナを追加しました\r\n  - client-static-build にヘルスチェック用のエンドポイントを追加\r\n  - .azure/templates 以下に client-static-build 用のファイルを追加\r\n  - Makefile に Azure にコンテナを作成するコードを追加\r\n\r\n# スクリーンショット\r\n- 特になし\r\n\r\n# 変更の背景\r\n- 基本的には既存の Makefile のコードを踏襲して実装しました\r\n- 手元で動作確認したこと\r\n  - `make azure-setup-all` でのインフラ構築\r\n  - `make azure-status` でのステータス確認\r\n  - `make azure-logs-client-static-build` でのログ出力の確認\r\n  - `make azure-restart-client-static-build` でのコンテナ再起動\r\n  - `make azure-cleanup` でのインフラ削除\r\n\r\n# 関連Issue\r\n- fix: #220 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 102,
    "deletions": 7,
    "changed_files": 7,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3019415666,
    "number": 377,
    "title": "client-adminのリファクタリングをrevert",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/377",
    "user": "nasuka",
    "created_at": "2025-04-25T08:51:21Z",
    "merged_at": "2025-04-25T08:59:44Z",
    "body": "# 変更の概要\r\n* 以下のPRのマージコミットをrevert\r\n  * https://github.com/digitaldemocracy2030/kouchou-ai/pull/351\r\n  * https://github.com/digitaldemocracy2030/kouchou-ai/pull/358\r\n\r\n# 変更の背景\r\n* （恐らく）直近のclient-adminのリファクタに伴って、レポート作成時に編集したプロンプトが反映されずデフォルトのプロンプトが使われていた\r\n  * 自分のフロント力だとぱっと直せなさそうだったので一旦revertしています\r\n  * revert後の内容で、プロンプトが反映されて正常にレポートが出力できることは確認しました\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/375\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1110,
    "deletions": 1485,
    "changed_files": 18,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3017537814,
    "number": 369,
    "title": "アルゴリズムのイシューテンプレートをアップデート",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/369",
    "user": "nasuka",
    "created_at": "2025-04-24T14:44:18Z",
    "merged_at": "2025-04-24T14:49:47Z",
    "body": "# 変更の概要\r\n* アルゴリズムの実験結果をまとめる場所をテンプレートに追記\r\n\r\n# 変更の背景\r\n* アルゴリズムの実験結果をまとめる場所について、assignee がどこにまとめるべきか戸惑ってしまう課題があったのでテンプレートに追記\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 4,
    "deletions": 0,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3016617852,
    "number": 368,
    "title": "[実験] 埋め込みベクトルを用いた類似コメントの検知コード",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/368",
    "user": "tokoroten",
    "created_at": "2025-04-24T09:28:01Z",
    "merged_at": "2025-04-24T14:51:23Z",
    "body": "# 変更の概要\r\n\r\n- experimentalのフォルダを掘り、実験コードを格納するためのフォルダを作成\r\n- SentenceTransformer を使って、パブリックコメントの埋め込みベクトルを計算し、重複を排除するための実験コードを作成\r\n  - https://sbert.net/\r\n\r\n- 処理をするための元データは以下から取得可能\r\n  - https://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1745221416748989?thread_ts=1745208882.923669&cid=C08F7JZPD63\r\n  - https://github.com/digitaldemocracy2030/kouchou-ai/issues/280\r\n\r\n## 処理の流れ\r\n### 重複検知\r\n- パブコメをSentenceTransformer 文脈埋め込みベクトルに変換\r\n- 埋め込みベクトルのコサイン類似度を取得\r\n- コサイン類似度が一定以上のものを抽出し、重複の可能性を示す\r\n\r\n### クラスタリング\r\n- パブコメをSentenceTransformer 文脈埋め込みベクトルに変換\r\n- 埋め込みベクトルからクラスタリングを実施\r\n- クラスタごとに、クラスタ中心を求め、クラスタ中心への距離に従ってソート\r\n- 結果をExcelとして出力、いい感じに閲覧可能にする\r\n\r\n# 出力例\r\n## 重複検知\r\n![image](https://github.com/user-attachments/assets/df4f5b61-51f8-4732-84be-fc3fa101ed43)\r\n\r\n# 変更の背景\r\n\r\n# 関連Issue\r\n\r\n#345 \r\n#346\r\n#361\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 1701,
    "deletions": 0,
    "changed_files": 7,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3012813716,
    "number": 362,
    "title": ".github配下のテンプレートをアップデート",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/362",
    "user": "nasuka",
    "created_at": "2025-04-23T06:14:16Z",
    "merged_at": "2025-04-23T06:16:18Z",
    "body": "# 変更の概要\r\n* アルゴリズム実験関連のテンプレートを追加\r\n* ドキュメンテーションテンプレートのtypoを修正\r\n* PR templateにスクリーンショットの欄を追記\r\n\r\n# 変更の背景\r\n* テンプレートが不足している/不備があったので修正\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 21,
    "deletions": 1,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3011073325,
    "number": 360,
    "title": "admin から static な HTML ファイルをダウンロードできるようにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/360",
    "user": "shgtkshruch",
    "created_at": "2025-04-22T13:19:03Z",
    "merged_at": "2025-04-24T06:37:30Z",
    "body": "# 変更の概要\r\n- admin から client を static build した成果物を zip でダウンロードできるようにしました\r\n\r\n## screenshot\r\n\r\n### admin のレポート一覧\r\n\r\n「全レポートをエクスポート」ボタンを追加\r\n\r\n![スクリーンショット 2025-04-22 21 49 57](https://github.com/user-attachments/assets/c29e996a-67bc-4992-91d3-0d26cc72bb88)\r\n\r\n### ボタンクリック後\r\n\r\n二重にエクスポート処理が走らないようにボタンを loading 状態にする\r\n\r\n![スクリーンショット 2025-04-22 21 50 03](https://github.com/user-attachments/assets/14399212-0af2-4b62-8b8d-cc26c6953a6b)\r\n\r\n### エクスポート成功時\r\n\r\nトーストを表示して、ボタンを初期状態に戻す\r\n\r\n![スクリーンショット 2025-04-22 21 51 17](https://github.com/user-attachments/assets/2414cb14-3eaf-47d0-a891-9067f65aec91)\r\n\r\n# 変更の背景\r\n- static build 用の client-static-build コンテナを追加しました\r\n  - 技術的に検証したところ、client コンテナを再利用できそうでしたが、以下の理由からビルド用のコンテナを作る方針にしました\r\n     - アプリを動作させるための環境とビルド用の環境が混在するので責務分離ができない\r\n     - ビルド用のコンテナでは exec でコマンドを実行する必要があり、この機能を Web に公開している client コンテナで実行するのはセキュリティ的にリスクがある\r\n     - ビルドは重い処理が走るので、client コンテナで実行するとアプリのホスティングのパフォーマンスに影響が出る可能性がある\r\n  - ビルド用のコンテナでは、リクエストを待ち受けてビルドコマンドを実行する機能があれば良いので、express で軽量な実装にしました\r\n    - hono でも実装してみたのですが、zip の stream を渡す処理が express の方が素直に書けたので express を選択しました\r\n  - client-static-build コンテナでは client と同じ環境変数などの設定が必要なので、環境変数の設定漏れなどがないようにするために、Compose file の [Extensions](https://docs.docker.com/reference/compose-file/extension/) を利用して共通化しました\r\n\r\n# やっていないこと\r\n\r\n- Azure 環境への client-statc-build コンテナを追加\r\n  - この PR の方針で良ければ後続の PR で対応予定です\r\n- ビルドが長時間かかった場合の UX の検討\r\n  - データ量が多くなってくるとビルドに時間がかかるので、同期的なダウンロードだと待ち時間が長くなると思います\r\n  - 非同期処理にして、ダウンロードが終わったら通知するような設計もありそうですが、検討がもう少し必要なのと、この PR ではブラウザからの static export の検証を主目的にしているので、一旦はシンプルな設計にしています\r\n- 別タブを開いたり複数ユーザーが多重実行した場合の制御\r\n  - この機能が使われるようになって、必要性が出てきてから実装でも良いかなと個人的には思っています\r\n\r\n# 関連Issue\r\n- #220 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 2805,
    "deletions": 15,
    "changed_files": 11,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3011027530,
    "number": 359,
    "title": "Solve issue #290 階層図のUI/UX改善",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/359",
    "user": "masatosasano2",
    "created_at": "2025-04-22T13:01:59Z",
    "merged_at": "2025-04-23T10:23:55Z",
    "body": "# 変更の概要\r\n- 全体図、濃い意見グループ、階層図、全画面表示を行き来するときに階層図の表示階層を保持する\r\n- パンくずリストの色を濃くして目立たせる\r\n- 全画面終了のアイコンを戻るっぽいものから縮小っぽいものに変更 https://lucide.dev/icons/minimize-2\r\n- 現在のクラスタのラベルを極力折り返さない（折り返しの文字数を15から幅いっぱいの50にする）\r\n\r\n# 変更の背景\r\n4/12 の meetup で意見の出た階層図の使いにくさを解消するための変更です。\r\n検討事項や修正方針の詳細は下記のIssueをご確認ください。\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/290\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 90,
    "deletions": 24,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3011024400,
    "number": 358,
    "title": "client-admin/app/page.tsxのリファクタリング (関連: #336)",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/358",
    "user": "mtane0412",
    "created_at": "2025-04-22T13:00:46Z",
    "merged_at": "2025-04-23T02:07:29Z",
    "body": "# 変更の概要\r\n- styleを直接記述している箇所をChakra UIのStyle propsに変更\r\n- 不要なクリック防止イベントの廃棄( #336 で触った範囲 )\r\n  - 「レポートを編集する」Dialogに関して必要な箇所をクリック防止イベントを残した\r\n  - 「レポートを編集する」Dialog外をクリックした際は、Dialogを閉じるように変更した(下記に詳細)\r\n- レポートのクリック範囲拡大用の記述をChakra UIの LinkBox に変更 ( #316)\r\n\r\n「レポートを編集する」に関して、Dialog表示中にDialog内とDialog外両方(=全画面)をクリックするとレポートに遷移してしまうのを防ぐためにクリック防止を導入していた。\r\n`<Dialog.Content>` に `onClick={e => e.stopPropagation()}` を記述するとDialog内の’クリックは防止されるがDialog外をクリックすると依然として遷移する問題が残った。\r\n`<Dialog.Root>` に `closeOnInteractOutside` を true に設定し、そもそもDialog外のクリックでDialogを閉じるようにしたところ、遷移しなくなった。挙動としては自然なので一旦この方法にした。(詳しい人いたら修正してほしい。)\r\n\r\n# 変更の背景\r\n- #336 のフロントのコードレビューの追加PR\r\n\r\n# 関連Issue\r\n#316 クリック可能範囲を広げるPR\r\n#336 フロントのコードレビュー\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 112,
    "deletions": 125,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008963725,
    "number": 354,
    "title": "add ruff setting on .vscode/settings.json",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/354",
    "user": "nishio",
    "created_at": "2025-04-21T17:55:52Z",
    "merged_at": "2025-04-25T06:15:42Z",
    "body": "# 変更の背景/概要\r\n- Biomeの設定は書かれているがRuffの設定は書かれていない、書いたほうがいい？\r\n\r\n# 関連Issue\r\n関連するIssueのリンクをこちらに記載してください\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 9,
    "deletions": 1,
    "changed_files": 1,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008956836,
    "number": 353,
    "title": "[REFACTOR] langchainの依存を削除する",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/353",
    "user": "nishio",
    "created_at": "2025-04-21T17:52:06Z",
    "merged_at": "2025-04-25T07:08:32Z",
    "body": "## 変更内容\r\n\r\n- `server/broadlistening/pipeline/services/llm.py`: langchainのOpenAIEmbeddingsを直接OpenAI SDKの呼び出しに置き換え\r\n- `server/broadlistening/pipeline/utils.py`: langchainのメッセージスキーマを直接OpenAI SDKの形式に置き換え\r\n- `server/pyproject.toml`: langchain関連の依存関係を削除\r\n\r\n## 関連Issue\r\n\r\nCloses #58\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 8,
    "deletions": 13,
    "changed_files": 3,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3004072776,
    "number": 331,
    "title": "OpenAI API Rate Limit対策の実装",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/331",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-18T06:00:08Z",
    "merged_at": "2025-04-24T14:46:25Z",
    "body": "# OpenAI API Rate Limit対策の実装\n\n## 概要\nIssue #295 に記載されている問題を解決するため、OpenAI APIのRate Limit (429) エラーに対して指数バックオフ付きリトライ処理を実装しました。\n\n## 変更内容\n- tenacityライブラリを使用して、OpenAI APIのRate Limit (429) エラーに対する指数バックオフ付きリトライ処理を実装\n- `request_to_openai`と`request_to_azure_chatcompletion`関数に対してリトライデコレータを追加\n- エラー発生時のログ出力を追加\n- リトライ設定：\n  - 最大3回のリトライ\n  - 指数バックオフ（初期2秒、最大60秒）\n  - RateLimitErrorとAPIStatusErrorに対してリトライ\n\n## テスト\n- 実装後の動作確認を行いました\n\nLink to Devin run: https://app.devin.ai/sessions/67c2a06784d74e068af3a03c787f2394\nRequested by: nsk.smn@gmail.com\n",
    "additions": 395,
    "deletions": 26,
    "changed_files": 2,
    "co_author": "nsk.smn",
    "requester": "nsk.smn",
    "type": "pr"
  },
  {
    "id": 3030082015,
    "number": 399,
    "title": "Devinとのコラボレーションについてのドキュメントを追加",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/399",
    "user": "shingo-ohki",
    "created_at": "2025-04-30T04:18:45Z",
    "body": "# 変更の概要\r\n- ドキュメントに Devin についての記述を追加\r\n\r\nChatGPT が提案してくれたものをベースに、実態に合わせて修正してみました。\r\nIssue 自体があくまで仮説なため、あくまで「ないよりはあったほうがいい」というくらいに考えていますが、\r\nこれが適切かどうか自信はないので、たたき台と思ってガンガンコメントいただければと思います。\r\n\r\n# 変更の背景\r\nDevin との協働に戸惑う開発者もいるだろうと考えられるため、何らかの軽減措置があるとよさそう\r\n\r\n# 関連Issue\r\n#398 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 140,
    "deletions": 62,
    "changed_files": 2,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3029913116,
    "number": 397,
    "title": "Issue #396: 管理画面の基本e2eテストを実装",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/397",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-30T01:58:00Z",
    "body": "# 管理画面の基本e2eテスト実装\n\nIssue #396 に基づいて、管理画面の基本的なエンドツーエンドテストを実装しました。このテストでは、以下の基本的なワークフローをテストします：\n\n1. 管理画面へのアクセスとログイン（Basic認証）\n2. レポート作成ページへの移動\n3. 基本情報の入力\n4. CSVファイルのアップロード\n5. レポート作成の実行と成功確認\n\n## 変更内容\n- `test/e2e/tests/admin/create-report.spec.ts` ファイルを更新し、テストを実装\n- 既存のページオブジェクトとユーティリティを活用\n\n## テスト方法\nテストを実行するには以下のコマンドを使用します：\n```\ncd test/e2e\nnpm test\n```\n\nLink to Devin run: https://app.devin.ai/sessions/1883f9aaaede4ddab11a25bbbde4d8bc\nRequested by: NISHIO Hirokazu (nishio.hirokazu@gmail.com)\n",
    "additions": 657,
    "deletions": 13,
    "changed_files": 2,
    "co_author": "NISHIO Hirokazu",
    "requester": "(nishio.hirokazu",
    "type": "pr"
  },
  {
    "id": 3019517598,
    "number": 378,
    "title": "extractionのプロンプトを改善",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/378",
    "user": "nasuka",
    "created_at": "2025-04-25T09:30:59Z",
    "body": "# 変更の概要\r\n* extractionのデフォルトプロンプトを改善した\r\n\r\n# 変更の背景\r\n* 元のプロンプトでは、稀にAI導入に関する文言がextractionの結果に紛れ込むケースがあった\r\n  *  `人工知能に関する公開協議を実施した状況を想定しています。`  という文言が入っており、恐らくこちらが悪さをしていたと思われる。\r\n    *   上記の点含めて、全体的に内容を修正している\r\n    * 元プロンプト: https://github.com/digitaldemocracy2030/kouchou-ai/blob/fe0f56c7a6d7eb82aa61ff124e8c4ceca66633b8/client-admin/app/create/extractionPrompt.ts#L1-L47\r\n\r\n\r\n# スクリーンショット\r\n変更前後のプロンプトで出力されたレポートの散布図を記載。\r\n* beforeではクラスタ（およびargument）にAI導入という文言が入るケースがあったが、なくなっている\r\n* beforeと比べてafterでは抽出件数が多くなっている\r\n  * 1143件 -> 1375件\r\n  * ただ、クラスタタイトルの傾向は大きくは変わらない\r\n  * 抽出件数など、挙動がこれまでのデフォルトプロンプトと変わる部分はあるものの基本的には改良されているはず\r\n\r\nbefore\r\n![image](https://github.com/user-attachments/assets/4803a4f6-8274-401b-ab69-7af8c4b1eb6e)\r\n\r\nafter\r\n![image](https://github.com/user-attachments/assets/6fca2f48-bbab-4cce-92ce-ee86be466b0f)\r\n\r\n\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/371\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 7,
    "deletions": 5,
    "changed_files": 1,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3019360629,
    "number": 376,
    "title": "[Fix] プロンプト編集が反映されない問題を修正 (#375)",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/376",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-25T08:27:10Z",
    "body": "# プロンプト編集が反映されない問題を修正\n\n## 概要\nイシュー #375 を解決するために、レポート作成時に編集したプロンプトが反映されない問題を修正しました。\n\n## 原因\nクライアント側とサーバー側でプロンプト設定のフィールド名に不一致がありました：\n- クライアント側: `initialLabelling`, `mergeLabelling` (キャメルケース)\n- サーバー側: `initial_labelling`, `merge_labelling` (スネークケース)\n\nこの不一致により、サーバー側が編集されたプロンプトを正しく認識できず、デフォルトのプロンプトが使用されていました。\n\n## 修正内容\nクライアント側のフィールド名をサーバー側のフィールド名に合わせて修正しました。\n\n## テスト方法\n1. レポート作成画面でプロンプトを編集する\n2. レポートを作成する\n3. 編集したプロンプトが反映されていることを確認する\n\n## 関連イシュー\nFixes #375\n\nLink to Devin run: https://app.devin.ai/sessions/c54c5df0da8948268c72c1f95adfd5b4\nRequested by: nsk.smn@gmail.com\n\n",
    "additions": 16,
    "deletions": 13,
    "changed_files": 4,
    "co_author": "nsk.smn",
    "requester": "nsk.smn",
    "type": "pr"
  },
  {
    "id": 3019107307,
    "number": 372,
    "title": "fix: プロンプトからAI特有の文脈を削除 #371",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/372",
    "user": "devin-ai-integration[bot]",
    "created_at": "2025-04-25T06:22:46Z",
    "body": "# プロンプトのAIバイアス問題を修正\n\n## 変更内容\n- プロンプト内のAI特有の例示を、より一般的なトピック（都市計画、公共サービス、地域安全など）の例に置き換えました\n- extractionPromptから「人工知能に関する公開協議」の文脈を削除しました\n- mergeLabellingPromptの出力例を「AI技術の導入〜」から「交通アクセスの改善〜」に変更しました\n\n## 関連イシュー\nCloses #371\n\n## テスト方法\nこれらの変更により、分析結果に「AI技術の導入」などの文言が不適切に含まれなくなることを期待しています。実際の効果を検証するには、修正後のプロンプトで広聴AIシステムを実行して、出力結果を確認する必要があります。\n\nLink to Devin run: https://app.devin.ai/sessions/5e3a450628d94a99bb470ecb5220ad5a\n",
    "additions": 16,
    "deletions": 15,
    "changed_files": 2,
    "co_author": "nsk.smn",
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3013422173,
    "number": 363,
    "title": "Windows 環境で Docker を使わずに手動でセットアップできるようにするためのスクリプトおよび手順",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/363",
    "user": "take365",
    "created_at": "2025-04-23T09:55:11Z",
    "body": "# 変更の概要\r\n- Windows 環境で Docker を使わずに手動でセットアップできるようにするためのスクリプトおよび手順を追加しました。\r\n- `.env` 設定、仮想環境の準備、依存ライブラリのインストール、実行用の補助スクリプトなどを含みます。\r\n\r\n# スクリーンショット\r\n- UIの変更はありません。\r\n\r\n# 変更の背景\r\n- Issue #254 の調査を進める中で、Windows 環境での実行手段として「生環境構築」も検証しました。\r\n- 開発時には WSL2 や Docker を立ち上げることが比較的重いため、軽量な起動ができる選択肢として「生環境での実行」も許容していただければと思います（どちらかというと私自身の開発効率向上の観点からの提案です、他に使う人もいなそうなら私だけマージして使ってますので、却下でも大丈夫です）。\r\n- 今後も Docker や WSL2 による環境構築の整備は継続される見込みのため、これは補助的な手段として捉えています。\r\n\r\n# 関連Issue\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/254\r\n\r\n# CLAへの同意\r\n- [x] コントリビューターライセンス契約（CLA）に同意します。",
    "additions": 127,
    "deletions": 2,
    "changed_files": 3,
    "co_author": null,
    "requester": null,
    "type": "pr"
  },
  {
    "id": 3008901452,
    "number": 352,
    "title": "LLM出力形式の揺らぎによる抽出エラーの修正",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/352",
    "user": "nishio",
    "created_at": "2025-04-21T17:21:42Z",
    "updated_at": "2025-04-29T01:53:16Z",
    "body": "# LLM出力形式の揺らぎによる抽出エラーの修正\r\n\r\n## 問題点\r\nLLMからの応答が、プロンプトで期待した形式（例：文字列リスト `[str]`）と異なる形式（例：オブジェクトリスト `[{意見:\"str\", トピック:\"str\"}]`）で返ってくることがあり、データ抽出が失敗したり、抽出される意見数が少なくなったりする問題を修正しました。\r\n\r\n## 修正内容\r\n1. **プロンプトの改善**：\r\n   - 出力形式をより明確に指定するようプロンプトを更新\r\n   - 期待される出力形式の例をより詳細に提示\r\n\r\n2. **構造化出力の活用**：\r\n   - is_json=Trueオプションを使用して、JSON形式の応答を強制\r\n\r\n3. **エラーハンドリングの強化**：\r\n   - 異なる形式の応答にも対応できるよう、パース処理を改善\r\n   - オブジェクトリスト形式からの文字列抽出ロジックを追加\r\n  \r\n\r\n# 関連Issue\r\n- #296\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 84,
    "deletions": 13,
    "changed_files": 4,
    "co_author": "NISHIO Hirokazu",
    "requester": null,
    "type": "pr"
  }
]