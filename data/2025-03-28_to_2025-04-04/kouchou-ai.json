[
  {
    "id": 2959588512,
    "number": 205,
    "title": "[FEATURE]CIでpytestを実行する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/205",
    "user": "nasuka",
    "created_at": "2025-03-31T06:31:29Z",
    "closed_at": "2025-04-01T05:56:18Z",
    "body": "# 背景\n* 現状テスト/CIが整備されていないためにバグが発見しにくく、またレビュー/QAに時間がかかる\n\n# 提案内容\n* github actionsで、PR作成/pushのタイミングでpytestを実行し、failする場合はマージできないようにする\n* 現状テストコードが全く整備されていないので、CI実施のためにまずは簡単なテストコードをいくつか実装する",
    "type": "issue"
  },
  {
    "id": 2958916779,
    "number": 201,
    "title": "[DOCUMENT]コードの貢献プロセスの記載",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/201",
    "user": "nasuka",
    "created_at": "2025-03-30T14:46:49Z",
    "closed_at": "2025-03-31T00:39:30Z",
    "body": "# 現在の問題点\n* コードの貢献プロセスについて、CONTRIBUTING.mdに記載されていない内容がある\n  * e.g. 👍 の件数が優先度を決める上で参考にされる、など\n\n# 提案内容\n* CONTRIBUTING.mdに、上記のように明文化されていない内容を記載する\n",
    "type": "issue"
  },
  {
    "id": 2958675363,
    "number": 199,
    "title": "[DOCUMENT] server開発時のコンテナ起動方法についてREADMEに明記する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/199",
    "user": "ei-blue",
    "created_at": "2025-03-30T05:30:22Z",
    "closed_at": "2025-03-31T00:39:14Z",
    "body": "# 現在の問題点\nserverディレクトリでmake runを実行すると、config.pyで正しく.envが参照されずエラーになる。\n\n# 提案内容\nserverディレクトリのREADMEに記載されている内容を実行するとエラーになるので、serverコンテナだけを起動する方法を明記する。",
    "type": "issue"
  },
  {
    "id": 2956516970,
    "number": 196,
    "title": "[BUG]静的HTML出力時の画像の 404 解消",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/196",
    "user": "nishio",
    "created_at": "2025-03-28T15:41:33Z",
    "closed_at": "2025-03-29T09:55:38Z",
    "body": "### 概要\nsee https://github.com/digitaldemocracy2030/kouchou-ai/pull/195\n<!-- バグの簡潔な説明をお願いします -->\n\n### 再現手順\n\n1. <!-- バグが再現する手順をステップごとに記入してください -->\n2. \n3. \n\n### 期待する動作\n\n<!-- 本来どう動作すべきかを記入してください -->\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2955142330,
    "number": 191,
    "title": "[DOCUMENT] 環境変数を書き換えた場合は docker compose up --build を実行するようにREADMEに追記する",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/191",
    "user": "nasuka",
    "created_at": "2025-03-28T06:16:48Z",
    "closed_at": "2025-03-28T07:27:40Z",
    "body": "# 現在の問題点\n* 環境変数を変更した場合はdocker imageをbuildしなおさないと動作しないケースがある\n  * フロントでは、APIキーなどの一部の環境変数をimageのビルド時に埋め込んでいる\n  * このため、フロント側はdocker compose upを実行すると初回に設定した環境変数のイメージのままコンテナが立て続けられてしまう（ビルド時に埋め込んでいる環境変数は、イメージをビルドし直さない限り.envを編集しても変更が反映されない）\n    * これにより以下の様にapiとフロントのAPIキーが一致しないケースが発生してしまう\n\n```\n1: デプロイの作業をしてたディレクトリでそのまま新機能開発をしようとしてdocker-compose upしたら起動はしたけど管理画面がAPIサーバに繋がらなくてスピナーが回りっぱなし\n2: 原因は401 unauthorized\n3: docker-compose upすると、compose.yamlのclient-adminはAPIサーバに接続するためのAPIキーをargsでハードコードしているので管理画面には古いキーが環境変数として渡される、一方でserverの方はそれをしないで.envを渡しているのでこちらは新しいAPIキーが渡される、不一致なので繋がらない\n```\n\n# 提案内容\n* 環境変数を書き換えた場合は `docker compose up --build` を実行するようにREADMEに追記する\n",
    "type": "issue"
  },
  {
    "id": 2945102514,
    "number": 142,
    "title": "[BUG] Unknown event handler property `onFileRemove`. が出る",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/142",
    "user": "shingo-ohki",
    "created_at": "2025-03-25T03:25:55Z",
    "closed_at": "2025-03-28T04:47:08Z",
    "body": "### 概要\n\nhttps://github.com/digitaldemocracy2030/kouchou-ai/commit/685bb7c685e281ad3afb760bc8e7c9d649532d41\n\nの状態のコードで localhost:4000/create にアクセスすると以下のエラーが出る。\n\n`Unknown event handler property `onFileRemove`. It will be ignored.\n`\n### 再現手順\n\n1. https://github.com/digitaldemocracy2030/kouchou-ai/commit/685bb7c685e281ad3afb760bc8e7c9d649532d41 を checkout\n2. docker compose up\n3. ブラウザで localhost:4000/create にアクセス\n\n### 期待する動作\nエラーが出ないこと\n\n### スクリーンショット・ログ\n\n![Image](https://github.com/user-attachments/assets/71256468-62ea-40fe-aa58-ccfbbe88199f)\n\n![Image](https://github.com/user-attachments/assets/55429512-79dc-4dd6-8bbe-a6d0b5ee98a0)\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2945031648,
    "number": 140,
    "title": "[FEATURE] OGPカードを魅力的なものにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/140",
    "user": "takahiroanno",
    "created_at": "2025-03-25T02:49:25Z",
    "closed_at": "2025-03-31T16:12:09Z",
    "body": "# 背景\nSNSなどでシェアされることによって広聴AIの存在が広く知られる\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2940842324,
    "number": 132,
    "title": "[FEATURE] 意見データの入力にGoogle スプレッドシートのデータを使えるようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/132",
    "user": "shingo-ohki",
    "created_at": "2025-03-23T01:31:08Z",
    "closed_at": "2025-03-30T12:23:16Z",
    "body": "# 背景\n- #124 とは別のルートとして、意見データとしてGoogle スプレッドシートのデータが使えると文字コードの問題を回避できる\n- #105 のパブコメ自体を Google Form で集めるように標準化できると、それをそのまま広聴AIに流し込める\n\n# 提案内容\nGoogle スプレッドシートのURLを指定できるようにする\n\n- [x] #182 \n- [ ] 非公開のSpreadsheetにサービスアカウントをinviteしてもらってそれを読む",
    "type": "issue"
  },
  {
    "id": 2937656365,
    "number": 118,
    "title": "[REFACTOR]レポート画面における「議論」という言葉がわかりにくい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/118",
    "user": "nasuka",
    "created_at": "2025-03-21T08:20:23Z",
    "closed_at": "2025-03-28T07:25:23Z",
    "body": "# 背景\n* レポート表示画面で「議論」という単語が使われているが、日本語としてわかりにくい\n  * 「33議論」といった表記はそもそも日本語として正しくないように思える\n  * Analysis配下の「議論を抽出」といった表現も違和感がある\n![Image](https://github.com/user-attachments/assets/d4068108-dc0c-4639-9dae-942ab870db3a)\n\n\n\n![Image](https://github.com/user-attachments/assets/669b7198-8e0f-43ed-a4ad-dbbad40c5720)\n\n# 提案内容\n1. クラスタタイトル下の「33議論」等の表現は「33件」という表現に変える\n2. Analysis内で使われている「議論」という単語は 「意見」に置き換える（実際に行っている処理としても意見の方がニュアンス的に正しい）\n",
    "type": "issue"
  },
  {
    "id": 2935266523,
    "number": 112,
    "title": "[FEATURE]クラスタ見出しをanchorにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/112",
    "user": "nishio",
    "created_at": "2025-03-20T12:12:16Z",
    "closed_at": "2025-04-03T00:13:55Z",
    "body": "# 背景\n\n<img width=\"832\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4f696633-40b9-47c4-924d-01ab50c0c50c\" />\n\n# 提案内容\n\n展開表示するものは将来的には階層クラスタリングのデータから取れるかもしれないが、とりあえずanchorにしたら特定の見出しにリンクして言及できるようになって良いのではないか",
    "type": "issue"
  },
  {
    "id": 2934417917,
    "number": 105,
    "title": "[FEATURE]パブコメ形式でレポート出力するようにする",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/105",
    "user": "takahiroanno",
    "created_at": "2025-03-20T07:47:45Z",
    "closed_at": "2025-03-31T00:39:41Z",
    "body": "# 背景\n具体的なユースケースとして、行政機関においてパブコメを分析することがありそう。\nその際に、よく用いられている方式で意見のカタマリをexportできると、自治体のユーザーにとって使いやすくなる。\n\n例\n- https://www.mlit.go.jp/common/001034196.pdf\n- https://www8.cao.go.jp/cstp/pubcomme/kihon4_toshin/kekka2.pdf\n\n# 提案内容\n\n- レポート出力、ボタンをおく（チャートの右上に並べるのが一案か）\n- ３カラムでcsvを出力する\n  - 大分類\n  - 小分類（濃いクラスタのみ）",
    "type": "issue"
  },
  {
    "id": 2922747628,
    "number": 53,
    "title": "[FEATURE] 単一ページの出力機能",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/53",
    "user": "nanocloudx",
    "created_at": "2025-03-16T03:45:56Z",
    "closed_at": "2025-03-29T13:07:53Z",
    "body": "# 背景\n現在はサーバーを起動することで各レポート表示が実現されている\nサーバーが用意できない（静的ファイルの配置ならできる）環境でもレポートの公開ができるようにしたい\n\n# 提案内容\nnext export を用いて単一レポートだけのファイル出力ができる機能を追加する",
    "type": "issue"
  },
  {
    "id": 2893932539,
    "number": 14,
    "title": "[FEATURE]階層図ホバー時にクラスタの概要説明を表示したい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/14",
    "user": "nasuka",
    "created_at": "2025-03-04T11:30:25Z",
    "closed_at": "2025-03-30T15:54:54Z",
    "body": "# 背景\n階層図をホバーしても表示される情報が少なく、クラスタの内容を把握しにくい。\n\n\n# 提案内容\nホバー時に「クラスタの説明文」をツールチップ表示する\n例えば以下のようなクラスタ説明文をツールチップに表示するイメージ\n\n> このクラスタは、生成AIの利用がクリエイターの権利や創作活動に与える影響に関する懸念を集約しています。参加者は、生成AIが著作権を侵害するリスクや、クリエイターの努力を無視することによる創作意欲の減退を指摘し、厳格な規制や法整備の必要性を強調しています。また、生成AIの悪用による名誉毀損や偽情報の拡散、文化的影響についても懸念が示されており、クリエイターとAIの共存を目指すための具体的な対策が求められています。\n\n\n![Image](https://github.com/user-attachments/assets/c3ccf02e-7701-4ea6-941b-5f73cc15f42e)",
    "type": "issue"
  },
  {
    "id": 2893891126,
    "number": 13,
    "title": "[FEATURE]レポート出力の進捗を知りたい",
    "state": "closed",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/13",
    "user": "nasuka",
    "created_at": "2025-03-04T11:15:35Z",
    "closed_at": "2025-04-03T04:16:21Z",
    "body": "# 背景\n* レポート出力が現在どの程度進んでいるのかをダッシュボード上で把握したい\n\n\n# 提案内容\n* バックエンドの処理のステップ単位（extraction, clustering, etc）でダッシュボード上のステータス表示を変える\n* 実現方法の案としては、ステップ毎にレポートの実行ステータスを更新する（processingの粒度を細分化する）のが比較的ライトに実現できそう？\n  * この場合、以下の実装が必要\n    * バックエンド側ではステップを実行する毎にステータスを更新する\n    * client/client-admin側でステータスに応じて表示を変える\n",
    "type": "issue"
  },
  {
    "id": 2969624362,
    "number": 227,
    "title": "[FEATURE]設定画面について",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/227",
    "user": "nishio",
    "created_at": "2025-04-03T13:37:38Z",
    "body": "# 背景\n\n![Image](https://github.com/user-attachments/assets/bb76f174-3347-4e73-aeed-823e8f4272d1)\n最小クラスタは2以上。上が10でいいかは少し微妙で、2,5,10,25,50,100くらいの選択式がいいかもという気持ち\n閉じるボタンが文章に被んている件、見出しと説明が横並びなのを縦並びにすると良いかも\n「濃いグループの設定しかないので中に入れたらどうか」という話が以前悪化が、この設定によって濃いグループを選択できるかどうかが変わるのでそとにあるべき、将来的にはカラーバレットの設定などもここにはいるのかなと思う\n\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2967838327,
    "number": 225,
    "title": "[BUG] ２回目以降、静的ファイル出力（static build）時 パーミッションエラーが発生する？",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/225",
    "user": "naoyo4",
    "created_at": "2025-04-03T00:12:34Z",
    "body": "### 概要\n\n<!-- バグの簡潔な説明をお願いします -->\n静的ファイル出力（static build） を行う際、最初は問題なく出力ディレクトリーが作成されるが、再度実行するとパーミッションエラーが発生する？\n\n### 再現手順\n\n1. README の手順に則り（ make client-build-static ）、静的ファイル生成（ out ディレクトリ出力 ）\n2. 再度同じことを行うとMakefile手順の最初（ rm -rf out ）でパーミッションエラーが発生\n3. （ Webサーバーにも、FTP でUP時、パーミッションエラーが発生 ）\n\n### 期待する動作\n\n<!-- 本来どう動作すべきかを記入してください -->\n２回目以降もパーミッションエラーが発生せず、処理できる。\n（ WebサーバーにFTPでUPできる ）\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n(base) nao@d500:~/kouchou-ai$ make client-build-static\nrm -rf out\nrm: 'out/images/broadlistening.png' を削除できません: 許可がありません\nrm: 'out/404.html' を削除できません: 許可がありません\nrm: 'out/_next/static/chunks/polyfills-42372ed130431b0a.js' を削除できません: 許可がありません\n：\n：\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->\nIssue 上げること自体ほぼ初めてで、内容自体も自信ありませんが、アドバイスだけでもいただければ幸いです。\nhttp-server による動作等は、問題ないことは確認済み。",
    "type": "issue"
  },
  {
    "id": 2966981395,
    "number": 223,
    "title": "[FEATURE]クライアント開発用のresultを公開",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/223",
    "user": "nishio",
    "created_at": "2025-04-02T16:36:49Z",
    "body": "# 背景\nクライアント開発用にAI処理済みのresultをどこかからダウンロードして配置できるようにしておけばAPIキーに課金しなくてもUIの開発に参加できる\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\ndata/statusも変更しないといけないのが少し面倒",
    "type": "issue"
  },
  {
    "id": 2966961605,
    "number": 222,
    "title": "[FEATURE]クラスタ数変更を直接入力可能にする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/222",
    "user": "nishio",
    "created_at": "2025-04-02T16:27:55Z",
    "body": "# 背景\n\n<img width=\"302\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/257a3fed-faab-4e86-ba90-8fd6c3126f42\" />\n\nデータが8000件とかある場合、20 > 400 とかにしたくなるわけだけど、現状では350回のクリックが必要では\n\n# 提案内容\n\nクラスタ数変更を直接入力可能にする",
    "type": "issue"
  },
  {
    "id": 2966119535,
    "number": 221,
    "title": "(情報整理)試行錯誤の負担を減らす",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/221",
    "user": "nishio",
    "created_at": "2025-04-02T11:45:10Z",
    "body": "とりあえず立てて、あとで詳細化します\n\nfrom 4/2定例\n>使うまでの準備工数に認識のギャップがある\n>プロンプトやクラスタ数等、様々なチューニングを行う必要があるが、その認識がない\n>試行錯誤の負担を減らす必要がある(& ドキュメント？)\n\n>自治体の典型的な使い方がわかったら型を示せる\n\n>100件、1000件とサンプリングする？→黙ってやると有害、確認ダイアログがあるといい\n\n- クラスタ数の変更はextraction, embeddingが終わった後のデータでスピーディにできる 関連: https://github.com/digitaldemocracy2030/kouchou-ai/issues/19\n- extractionの試行錯誤の負担を減らす仕組みが必要\n\n- いきなり1万件入れて1時間くらい待たされる →　https://github.com/digitaldemocracy2030/kouchou-ai/issues/11",
    "type": "issue"
  },
  {
    "id": 2966115761,
    "number": 220,
    "title": "[FEATURE] frontからstaticなHTMLファイルをexportしてDownloadできるようにする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/220",
    "user": "takahiroanno",
    "created_at": "2025-04-02T11:43:27Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2965964029,
    "number": 219,
    "title": "[FEATURE]client/client-adminのテストをgithub actionsで実行する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/219",
    "user": "nasuka",
    "created_at": "2025-04-02T10:36:50Z",
    "body": "# 背景\n* 現状テストコードが存在せず、実装変更した際に不具合が起きる可能性が高い/検証に工数がかかる\n\n\n# 提案内容\n* github actionsで、clientのテストを行うように設定する\n  * 現在はそもそもテストコードが存在しないので、テストが容易な関数等をピックアップしてテストコードも合わせて実装する\n  * 参考: https://github.com/digitaldemocracy2030/kouchou-ai/pull/206",
    "type": "issue"
  },
  {
    "id": 2965108490,
    "number": 218,
    "title": "[FEATURE]レポート一覧に作成日時を追加する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/218",
    "user": "ei-blue",
    "created_at": "2025-04-02T03:55:52Z",
    "body": "# 背景\n現状、レポート一覧ではレポート名でしか区別がつけられないが、\n- 同じ内容で複数回レポートを作成と区別がつかない\n- 作成したレポートがいつ時点までのアップデートを反映したものかわからない\n\nため、レポート作成日時があると便利なのではと思いました。\n\n# 提案内容\n以下は一案です。\n\n- レポート作成時にreport_status.jsonに日時を追加\n- レポート一覧ページでタイトルの下に日時を表示\n",
    "type": "issue"
  },
  {
    "id": 2962812783,
    "number": 216,
    "title": "[FEATURE]Azureへのデプロイ時に手元のレポートを含めることを可能にする",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/216",
    "user": "nishio",
    "created_at": "2025-04-01T09:09:59Z",
    "body": "# 背景\nストレージ連携ができていない状況でもAzureデプロイの更新時にレポートが維持される\n\n\n# 提案内容\n\nby Devin\nAPIサーバをビルドする際にローカルの結果ファイルを含める方法を提案します。\n\n1. server/Dockerfileを修正して、ビルド時にローカルの結果ファイルをコンテナにコピーします：\n\n```\n# 既存のDockerfileに追加\nCOPY ./broadlistening/pipeline/outputs /app/broadlistening/pipeline/outputs\nCOPY ./data/report_status.json /app/data/report_status.json\n```\n\n2. Makefileのazure-buildターゲットを修正して、ビルド前にローカルの結果ファイルを一時的にserverディレクトリにコピーします：\n\n```\nazure-build-with-reports:\n\t$(call read-env)\n\t@echo \">>> レポートファイルをビルドディレクトリにコピー...\"\n\t@mkdir -p ./server/broadlistening/pipeline/outputs\n\t@mkdir -p ./server/data\n\t@cp -r ./server/broadlistening/pipeline/outputs/* ./server/broadlistening/pipeline/outputs/ || true\n\t@cp ./server/data/report_status.json ./server/data/ || true\n\t@echo \">>> APIイメージをビルド...\"\n\tdocker build --platform linux/amd64 -t $(AZURE_ACR_NAME).azurecr.io/api:latest ./server\n\tdocker build --platform linux/amd64 -t $(AZURE_ACR_NAME).azurecr.io/client:latest ./client\n\tdocker build --platform linux/amd64 --no-cache -t $(AZURE_ACR_NAME).azurecr.io/client-admin:latest ./client-admin\n```\n\nこの方法で、APIサーバをビルドする際にローカルの結果ファイルを含めることができます。\n\n",
    "type": "issue"
  },
  {
    "id": 2962680964,
    "number": 214,
    "title": "[FEATURE]Azureのデプロイ更新作業をMakefileにまとめる",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/214",
    "user": "nishio",
    "created_at": "2025-04-01T08:22:16Z",
    "body": "# 背景\n作業が複雑なため\n\n## chat log\nnishio\n最新版でAzureにデプロイされているものを更新しようとしたのですが、色々トラブって結局できませんでした。 makeでazure-login azure-build azure-acr-login-auto azure-push make azure-config-update make azure-fix-client-adminまでやったのですが見た目が変わらなくて、何がいけなかったのかなぁと思っています。\ntruego\n上記だと、clien-admin コンテナは新しいもので起動しますが、client と api のコンテナは古いまま（イメージは新しくなったけどコンテナは古いもので起動したまま）になりそうですね。 azure-fix-client-admin の処理の中の以下の部分（古いイメージのコンテナを停止して、新しく push されたイメージでコンテナを起動する）と同様のことを client, api コンテナでもやる必要がありそうな気がしました。\n```\naz containerapp update --name client-admin --resource-group $(AZURE_RESOURCE_GROUP) --min-replicas 0 && \\ echo '>>> 再度スケールアップ...' && \\ sleep 5 && \\ az containerapp update --name client-admin --resource-group $(AZURE_RESOURCE_GROUP) --min-replicas 1\"\n```\n\nnishio\napiサーバを再起動したらレポートが全部消えたので無事コンテナの更新ができたようです:爆笑: Spreadsheetを読む機能が増えてたのでソースコードの更新は成功、問題はレポートの復元だけ\n\n\n# 提案内容\nMakefileにターゲットとしてまとめる\n",
    "type": "issue"
  },
  {
    "id": 2962653661,
    "number": 213,
    "title": "[FEATURE]5→50の表記を50→5に変えるか？",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/213",
    "user": "nishio",
    "created_at": "2025-04-01T08:10:37Z",
    "body": "# 背景\n<!-- なぜその機能が必要なのか、何が改善されるのか具体的に記入してください -->\n>NISHIO Hirokazu\n5→50の表示、実際の流れとしては50に分けてから5つに集約してますよね。50→5では？という気がしてきました \nNasuka Sumino\nこれは確かに仰るとおりですね。\n50 -> 5に表示を変えたほうが処理の実態に合っていて良さそうに思いました...！\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1743489984598769\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n5→50の表記を50→5に変える",
    "type": "issue"
  },
  {
    "id": 2962326893,
    "number": 212,
    "title": "[BUG]新しいレポートを作成してもclient一覧画面にレポートが表示されない",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/212",
    "user": "nasuka",
    "created_at": "2025-04-01T06:03:27Z",
    "body": "### 概要\n* 新しいレポートを作成してもclient一覧画面にレポートが表示されない\n  * もともとclientは即時反映ではなく、ISRを採用しているため、表示まで最大5分の遅延がある認識\n    * https://github.com/digitaldemocracy2030/kouchou-ai/issues/61\n  * 一方で、試した限りでは5分経過しても一覧画面に新規のレポートが表示されない\n\n### 再現手順\n\n1. 新規にレポートを作成する\n2. 5分以上経過した後に、clientの一覧画面にアクセスする\n3. 一覧画面上に新規レポートが表示されない\n\n他に参考になりそうな情報を以下に記載\n* 一覧画面には表示されないがレポートの詳細画面にはアクセスすることはできる\n* 再度clientをビルドした場合は一覧画面に新規レポートが表示される\n\n\n### 期待する動作\n\nレポート作成から、最大でも5分経過した段階ではclientの一覧画面に新規のレポートが表示される\n\n### スクリーンショット・ログ\n\n<!-- 必要に応じてスクリーンショットやエラーログなどを添付してください -->\n\n### その他\n\n<!-- 追加で伝えておきたいことがあれば記入してください -->",
    "type": "issue"
  },
  {
    "id": 2962321727,
    "number": 211,
    "title": "[FEATURE]OOMの事後処理",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/211",
    "user": "nishio",
    "created_at": "2025-04-01T06:00:12Z",
    "body": "# 背景\nエラー時にはレポート一覧にその旨が出るが、Out of Memoryで死んだ場合にはエラー内容を書き込む前に死ぬので「処理中」の表示が続いてしまう\n\n\n# 提案内容\n良い解決方法を考えたい\n\n案\n- pidをstatusにもつ\n-  レポート一覧APIが呼ばれた時に、未完了のレポートについてプロセスが生きてるか確認して、死んでるならstatusをエラーに変える\n",
    "type": "issue"
  },
  {
    "id": 2960108462,
    "number": 207,
    "title": "[FEATURE]レポート一覧のクリック可能範囲を広げる",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/207",
    "user": "nishio",
    "created_at": "2025-03-31T10:28:45Z",
    "body": "# 背景\n\n<img width=\"1023\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/01686efb-d5a0-4679-b456-435ca5e978d2\" />\n\nレポートを見るためにクリックするところか説明のない灰色の領域だけ\n目の前で使ってもらったらどこをクリックしたらいいか戸惑っていた\n\n# 提案内容\n<!-- 実装案やデザイン案があれば記入してください -->\n\nブロック全体に広げた方がいいのではと思った",
    "type": "issue"
  },
  {
    "id": 2954831783,
    "number": 190,
    "title": "[FEATURE]1回のextractionで複数のcommentを処理する",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/190",
    "user": "nasuka",
    "created_at": "2025-03-28T02:12:39Z",
    "body": "# 背景\n* 現在のextraction処理は1リクエストに1件のコメントを処理しているため、実行に時間がかかる\n  * リクエストそのものの並列化は行われているが、OpenAI APIのrate limitの関係で並列化による高速化も限界がある\n\n\n# 提案内容\n* 1回のextractionで複数のコメントを同時に処理する\n  * 同時処理の件数が増えることで、rate limit(requests per minute)の問題が緩和される\n\nプロンプトのイメージ\n```\nあなたは専門的なリサーチアシスタントで、整理された議論のデータセットを作成するお手伝いをする役割です。\n人工知能に関する公開協議を実施した状況を想定しています。一般市民から寄せられた議論の例を提示しますので、それらをより簡潔で読みやすい形に整理するお手伝いをお願いします。必要な場合は2つの別個の議論に分割することもできますが、多くの場合は1つの議論にまとめる方が望ましいでしょう。\n結果は出力例に記載したjson形式で出力して\n\n## 入力例\n- id1: AIは仕事の効率化に役立つ。人生の相談相手にもなってくれる。\n- id2: AIは電力を消費しすぎる問題がある\n- id3: AIには反対です\n\n## 出力例\n{\n    \"id1\": [\n        \"AIは仕事の効率化に役立つ\",\n        \"AIは人生の相談相手になる\"\n    ],\n    \"id2\": [\n        \"AIは電力消費が大きい\"\n    ],\n    \"id3\": [\n        \"AIには反対\"\n    ]\n}\n```\n\nextraction実行時のLLMのresponse formatが変わるため、周辺の実装も変える必要がある。\n\n## 進め方\n* まずは、上記のようなプロンプト・出力フォーマットに変更して同時処理数を増やした場合にどのようにアウトプットの文言が変わるかを確認する\n  * 入力データは、ツイートレベルの長さのケースと、aipubcomのように1コメントが長いケースの両方で確かめた方が良さそう\n* 抽出結果が問題なさそうであればプロダクトに機能実装する\n",
    "type": "issue"
  },
  {
    "id": 2948652084,
    "number": 185,
    "title": "[FEATURE]失敗したプロセスの詳細情報を得られるようにする",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/185",
    "user": "nishio",
    "created_at": "2025-03-26T07:34:45Z",
    "updated_at": "2025-04-01T06:01:45Z",
    "body": "# 背景\n\nNISHIO Hirokazu\nうーん、「成功して完了したレポートの結果」をローカルにコピーできるようにはなったけど、デプロイしてる本番環境をユーザが使ってなんかコケたというときに、どんなデータを入れてどこまで進んでどんな死に方をしたのかを確認できないと捗らないな。本番環境のコンテナに直接入ったりサーバのログを見たりすればなんとかなるとはいえ、さっと手元に落として確認したい。やっぱりzipしてダウンロードするAPIをつけるべきか？？\n2 件の返信\n\nNasuka Sumino\nあっても良いと思います！\n他にもいくつかアプローチはある気がしつつ（ステータスを細分化する、外部ストレージ連携してストレージを見に行く等）、データを丸ごと落とせるようにするのが実装的にも比較的ライトで原因究明もしやすいように思います。 \n\nNISHIO Hirokazu\n今回、aipubcomの現時点で公開されてる7つのPDFから過去最大のデータセットを作って入れてみたんですけど、たくさん時間が掛かってから死んだので雰囲気的にembeddingは完了してからクラスタリング時に何か起きたのかなぁみたいな気持ちです\n\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1742971649061709\n\n# 提案内容\n\n<img width=\"319\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/78faf532-a481-4dbb-8279-17fe42cf258d\" />\n\n管理画面の...ボタンで出るメニューに中間データなどをまとめたzipをダウンロードする機能をつける",
    "type": "issue"
  },
  {
    "id": 2937303043,
    "number": 116,
    "title": "[FEATURE]「どのフィールドをcommentとするか」を指定できる機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/116",
    "user": "nishio",
    "created_at": "2025-03-21T05:24:46Z",
    "updated_at": "2025-04-03T05:44:13Z",
    "body": "# 背景\nShutaro Aoyama (ぶるーも)\n昨日こうちょうAIを試して、csvフォーマットが絶妙に違うのがだるいなと思いました（ここはコミュニケーションとった方がよかったですね、、）\nいどばたcsvのcontentをcommentに変えるとこうちょうAIに突っ込めるという認識\n\n\nNISHIO Hirokazu\n現状はまずはノンエンジニアが使えるようにWebUIを頑張ってますけど、将来的にはAPIでレポート生成をトリガーできるべきで、その時に「どのフィールドをcommentとするか」を指定できるのが理想だと思います \n\n# 提案内容\n\ndefaultが\"comment\"であるような\"target-column\"属性を受け取るようにし、そのカラムを分析対象とする。\nアンケートのようなデータソースでは通常複数のカラムがあるので、個別にCSVを保存し直さなくても分析できるようになって楽。",
    "type": "issue"
  },
  {
    "id": 2926991813,
    "number": 80,
    "title": "(情報整理)Azureについて",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/80",
    "user": "nishio",
    "created_at": "2025-03-18T03:33:26Z",
    "updated_at": "2025-04-01T09:10:31Z",
    "body": "自治体や大企業などを中心にAzureを使いたいというニーズがある。\n\nこれを分解整理する\n\n- 1: ✅ OpenAIのAPIを直接叩くのではなくAzure OpenAI Serviceを使いたい( #89)\n- 2: ✅ Azureでホストしたい(#94)\n- 3: Azure Container Appsでホストしている場合にソースコードのアップデートをすると既存のレポートが消えてしまう問題の解決\n\n- x: Azureでのセットアップガイド ( #133 #175)\n\n## 3に関して\n\n- https://github.com/digitaldemocracy2030/kouchou-ai/pull/180 で消失を防いでいるが部分的解決に過ぎない\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/214 で更新時に自動的に保存する方針にした\n- これらをビルドに含めることができれば実は解決なのでは？という気もする https://github.com/digitaldemocracy2030/kouchou-ai/issues/216\n\n- 王道の解決方法はストレージ接続の #174 #46 だと思うが、デフォルトでONにしないなら「ストレージOFFで始めて試して、いいレポートができたので保存したくなったので更新しようとして消える」というバターンが発生することのケアが必要",
    "type": "issue"
  },
  {
    "id": 2922752696,
    "number": 56,
    "title": "[FEATURE] 元コメントの表示機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/56",
    "user": "nanocloudx",
    "created_at": "2025-03-16T04:00:23Z",
    "updated_at": "2025-03-28T09:35:32Z",
    "body": "# 背景\n現在表示されている文言は、AIが要約した文章(arguments または clusters)である\narguments の生成元となった comments も参照できると良い\n（全て表示すると視認性が下がるため、オプションとして表示する項目があると望ましい）\n\n# 提案内容\n- hierarchical_result.json に comment を追加する\n  - 元コメントは引用がNGの場合があるので、引用元の規約に注意する必要がある\n- レポート表示に元コメントを表示するオプションを追加する",
    "type": "issue"
  },
  {
    "id": 2922122757,
    "number": 46,
    "title": "[FEATURE]ストレージ連携",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/46",
    "user": "nasuka",
    "created_at": "2025-03-15T14:01:35Z",
    "updated_at": "2025-04-01T11:20:01Z",
    "body": "# 変更の背景\n* 現在、apiにおいて、各レポートのステータス（ready, etc）と出力されたレポートのファイルは、レポート出力を実行したマシンにのみ保存される\n* このため、persistent volumeを持たない実行環境ではapiをホスティングできない\n  * また、バックアップを取らない限り、実行環境が壊れた場合にデータが失われてしまう\n\n\n# 提案内容\n* レポートのステータスを記録するファイルと、出力されたレポートおよびその中間ファイルをストレージ（S3等）に連携する\n  * 現在、Azureでインフラを構築できるスクリプトが組まれているので、まずはAzure Blob Storageと連携できるようにするのが良さそう？\n* 具体的には、以下の処理を実装する\n  * ステータスの更新時にステータスファイルをストレージにアップロードする\n    * statusファイルは `./server/data/report_status.json` に配置されている\n  * レポート出力完了時に、中間ファイル・resultをストレージにアップロードする\n    * 中間ファイルは `./server/broadlistening/outputs` 配下に配置されている\n      * outputs配下に、各レポートのslugでディレクトリが作成され、そのディレクトリ内にレポートの中間成果物（embeddingやクラスタリング結果など）と結果ファイル（hierarchical_result.json）が格納されている\n  * アプリケーション起動時に、ストレージから各ファイルをダウンロードする\n* ストレージ連携はオプショナルにする\n  * ストレージ利用がオンになっている場合のみストレージ連携を行う\n\n",
    "type": "issue"
  },
  {
    "id": 2893959131,
    "number": 19,
    "title": "[FEATURE]レポートの複製・再利用機能",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/issues/19",
    "user": "nasuka",
    "created_at": "2025-03-04T11:38:39Z",
    "updated_at": "2025-04-03T11:52:09Z",
    "body": "# 背景\n* 設定を少しだけ変えて実行したいケースがある\n  * 例えばクラスタ数だけ変えるなど\n\n\n# 提案内容\n* レポートの設定複製機能を実装する\n",
    "type": "issue"
  },
  {
    "id": 2967761436,
    "number": 224,
    "title": "クラスタ見出しをanchorにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/224",
    "user": "shgtkshruch",
    "created_at": "2025-04-02T23:22:45Z",
    "merged_at": "2025-04-03T00:13:54Z",
    "body": "# 変更の概要\r\n-  レポートの詳細ページのクラスターの見出しにリンクをつけました\r\n\r\nhttps://github.com/user-attachments/assets/a885796d-6fd5-44f5-b70e-49efdce7ff99\r\n\r\n# 変更の背景\r\n- リンクの href, id 属性は、URL から意味が把握しやすいと思ったので見出しの日本語の文字列を設定しています\r\n  - レポートの個別ページに同じ見出しのクラスターは出てこないことを前提にしているので、認識違いがあればコメントいただけると :pray:\r\n- クリックできるとわかりやすいように hover 時にアイコンを表示しました\r\n\r\n# 関連Issue\r\n- fix: #112\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 20,
    "deletions": 3,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2963002553,
    "number": 217,
    "title": "レポート出力の進捗を表示",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/217",
    "user": "101ta28",
    "created_at": "2025-04-01T10:25:00Z",
    "merged_at": "2025-04-03T04:16:20Z",
    "body": "close #13 \r\n\r\n# 変更の概要\r\n- レポート出力の進捗をダッシュボード上で把握できるようにするため\r\n\r\n![output](https://github.com/user-attachments/assets/e09a651e-ae4d-4eee-a099-43671adbcc8b)\r\n\r\n# 変更の背景\r\n#13 \r\n\r\n# 関連Issue\r\n#13 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x]  CLAの内容を読み、同意しました",
    "additions": 298,
    "deletions": 143,
    "changed_files": 3,
    "type": "pr"
  },
  {
    "id": 2960524533,
    "number": 210,
    "title": "不要なターゲット(azure-acr-login)を削除",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/210",
    "user": "shingo-ohki",
    "created_at": "2025-03-31T13:34:32Z",
    "merged_at": "2025-03-31T13:56:28Z",
    "body": "# 変更の概要\r\n- Makaefile中の不要なターゲットが残っていたので削除しました\r\n\r\n# 変更の背景\r\n> Makefileのazure-acr-loginターゲットってACR名を置き換えてないから一般的には動かないし、どこからも呼ばれてないように思いますが盲腸ですかね？\r\nhttps://w1740803485-clv347541.slack.com/archives/C08F7JZPD63/p1743423114579229\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 0,
    "deletions": 7,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2960272317,
    "number": 209,
    "title": "レポートページの OGP カードのデザイン",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/209",
    "user": "shgtkshruch",
    "created_at": "2025-03-31T11:48:58Z",
    "merged_at": "2025-03-31T16:12:08Z",
    "body": "# 変更の概要\r\n- `app/[slug]/` 以下のページについて、OGP 画像を生成できるようにしました\r\n  - 通常のビルド（`next build`） の場合は、リクエスト時に生成\r\n  - static build（`NEXT_PUBLIC_OUTPUT_MODE=export next build`）の場合は、ビルド時に生成\r\n\r\n## 生成される OGP 画像\r\n### タイトルが短い場合\r\n![image](https://github.com/user-attachments/assets/55db4e75-4442-4af7-9224-718b3ffadf9c)\r\n\r\n### タイトルが長い場合\r\n\r\nFooter に被らない範囲で表示して、はみ出た部分は切り取っています。\r\n\r\n![image](https://github.com/user-attachments/assets/b70cab6b-6b70-4411-ad18-5c8bf09a0f10)\r\n\r\n3点リーダー入れると親切かなと思ったのですが、OGP を生成する環境が特殊で使用できる CSS に制限があるのと、JavaScript で文字数を削るのも英数と日本語でレンダリングされる幅が異なるので、単純に文字数でも切れないなと思ったので、一旦はシンプルな実装にしています。\r\nref: https://nextjs.org/docs/app/api-reference/functions/image-response#supported-css-properties\r\n\r\n\r\n## meta タグ\r\n### 通常のビルドの場合\r\n![image](https://github.com/user-attachments/assets/16d3aec0-8ad9-4e8f-b5b8-bf1d4c1e5fe8)\r\n\r\n\r\n### static build の場合\r\n![image](https://github.com/user-attachments/assets/9b3bcd42-b0ec-4a4c-b80e-df6b77ec004f)\r\n\r\n# 変更の背景\r\n- OGP 画像の生成方法\r\n  - 通常のビルドの場合は、[`opengraph-image`](https://nextjs.org/docs/app/api-reference/file-conventions/metadata/opengraph-image) でリクエストごとに生成します\r\n  - static build の場合は上記の方法が使えないため、こちらの方法で実装しました\r\n    - https://github.com/vercel/next.js/issues/51147#issuecomment-1842197049\r\n    - 調べたところ他に良さそうな方法がなかったので、他の方法があればコメントいただけると :pray:\r\n- この構成でビルドした場合の課題点\r\n  - static build 時に `opengraph-image.tsx` があるとビルド時にエラーになる\r\n  - （上記のエラーを解消してビルドできた場合）通常のビルド・static build 両方の OGP 画像生成処理が走り、1つのページに対して2つの OGP 画像が生成される\r\n- 対策として、通常のビルドと static build でビルド対象のファイルを分ける対応をいれました\r\n  - App Router では `_` から始まる Private folder はルーティングから除外される\r\n    - https://nextjs.org/docs/app/getting-started/project-structure#private-folders\r\n  - この仕組みを使って通常のビルドの際は static build 用の OGP 生成ファイルを除外、static build 時は通常のビルド用の OGP 生成ファイル（`opengraph-image.tsx`）を除外する処理を挟むようにしました\r\n- static build したアプリケーションを動作確認していて、ページリロード時に `http://localhost:3000/example` から `http://localhost:3000/example/` に遷移すると 404 になっていたので、static build の場合のみ `trailingSlash` の設定を有効にしました\r\n\r\n# 関連Issue\r\n- fix: https://github.com/digitaldemocracy2030/kouchou-ai/issues/140\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 350,
    "deletions": 16,
    "changed_files": 13,
    "type": "pr"
  },
  {
    "id": 2960149628,
    "number": 208,
    "title": "fix assertion position",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/208",
    "user": "nishio",
    "created_at": "2025-03-31T10:48:50Z",
    "merged_at": "2025-03-31T15:27:11Z",
    "body": "# 変更の背景\r\nAzureのchat extractionの中でenvが不完全であるときに、チェックしてAssertionErrorを投げていたが、上流でcatchしてAPI呼び出しのエラーとして扱っていた\r\n\r\n# 変更の概要\r\nそもそも環境変数の正しさを毎回のAPI呼び出し時にチェックする必要はない、もっと早い段階でチェックすべき\r\n\r\n何が間違っているのかも分かりやすくなった\r\n```\r\nkouchou-ai-dev-api-1           |     assert os.getenv(\"AZURE_EMBEDDING_API_KEY\")\r\nkouchou-ai-dev-api-1           |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 20,
    "deletions": 2,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2959779152,
    "number": 206,
    "title": "pytestを追加 & github actionsでテストを実行",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/206",
    "user": "nasuka",
    "created_at": "2025-03-31T08:14:14Z",
    "merged_at": "2025-04-01T05:56:17Z",
    "body": "# 変更の概要\r\n* pytestのコードを追加\r\n  * CIでpytestを実行することが目的なため、今回はテストしやすい関数を一つピックアップして実装\r\n* github actions でpytestを実行するように設定\r\n* （本筋ではないがapi側でlint errorが出ていたファイルをいくつか修正）\r\n\r\n# 変更の背景\r\n* 現状テスト/CIが整備されていないためにバグが発見しにくく、またレビュー/QAに時間がかかる\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/205\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 171,
    "deletions": 32,
    "changed_files": 21,
    "type": "pr"
  },
  {
    "id": 2959222901,
    "number": 204,
    "title": "パブコメモードについての説明をREADMEに追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/204",
    "user": "ei-blue",
    "created_at": "2025-03-31T00:47:48Z",
    "merged_at": "2025-03-31T06:25:45Z",
    "body": "# 変更の概要\r\n- パブコメモードについての説明をhow_to_useのREADMEに追加\r\n- AI詳細設定の画像をパブコメモード設定入りのものに変更\r\n- レポート作成画面も、スプレッドシート入りのものに変更\r\n- ブロードリスニングディレクトリ内のREADMEにもパブコメモードについての記載を追加\r\n- Lint自動修正\r\n\r\n# 変更の背景\r\n- #194 によりパブコメモードが追加されたため\r\n\r\n# 関連Issue\r\n#105 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 75,
    "deletions": 67,
    "changed_files": 4,
    "type": "pr"
  },
  {
    "id": 2959144257,
    "number": 203,
    "title": "server内のREADMEを最新の内容にアップデート",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/203",
    "user": "ei-blue",
    "created_at": "2025-03-30T22:41:24Z",
    "merged_at": "2025-03-31T00:39:13Z",
    "body": "# 変更の概要\r\n- server内のREADMEをアップデート\r\n\r\n# 変更の背景\r\n- 現在のREADMEに記載されている内容だとサーバーが起動しないため、正確な内容に修正\r\n- 各エンドポイントのテスト方法、APIキーについての説明を追加\r\n\r\n# 関連Issue\r\nCloses #199 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 45,
    "deletions": 5,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2958924850,
    "number": 202,
    "title": "CONTRIBUTING.mdを改善",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/202",
    "user": "nasuka",
    "created_at": "2025-03-30T15:03:34Z",
    "merged_at": "2025-03-30T15:54:23Z",
    "body": "# 変更の概要\r\n* CONTRIBUTING.mdを改善\r\n  * 👍 の件数が優先度を検討する上で参考にされる旨を記載\r\n  * 「コードの貢献プロセス」を明文化\r\n    * 大きな変更の場合は事前にイシューでコードオーナーのリアクションを待ってもらう\r\n  * など\r\n* READMEにバグ報告・改善要望のGoogle Formリンクを追記\r\n\r\nCONTRIBUTING.mdについては、streamlitのコントリビューションガイドが良さそうだったのでそちらを参考に修正しています。\r\nhttps://github.com/streamlit/streamlit/wiki/Contributing\r\n\r\n# 変更の背景\r\n* README/CONTRIBUTINGについて、最新の状況を反映できていない部分があった\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/201\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 69,
    "deletions": 15,
    "changed_files": 2,
    "type": "pr"
  },
  {
    "id": 2958700909,
    "number": 200,
    "title": "階層図ホバー時にクラスタの概要説明を表示",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/200",
    "user": "shgtkshruch",
    "created_at": "2025-03-30T06:47:03Z",
    "merged_at": "2025-03-30T15:54:53Z",
    "body": "# 変更の概要\r\n- 階層図にホバー時に表示される Tooltip にクラスタの概要（takeaway）を表示するようにしました\r\n![image](https://github.com/user-attachments/assets/19d49dd4-3b7c-4f13-8e5f-db9960712f3f)\r\n\r\n# 変更の背景\r\n- issue 上では元々表示していた件数や割合は削除した方が見やすいという意見があったので、その方向で実装しました\r\n> ツールチップには件数/割合があるとごちゃごちゃしている印象を抱いたので、個人的に件数/割合は省いた方が見やすいと感じました\r\n> ref: https://github.com/digitaldemocracy2030/kouchou-ai/issues/14#issuecomment-2745205016\r\n# 関連Issue\r\n- fix: https://github.com/digitaldemocracy2030/kouchou-ai/issues/14\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 6,
    "deletions": 1,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2957952638,
    "number": 198,
    "title": "static build の手順のドキュメントを追加",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/198",
    "user": "shgtkshruch",
    "created_at": "2025-03-29T11:24:44Z",
    "merged_at": "2025-03-29T13:07:52Z",
    "body": "# 変更の概要\r\n- static build について README にドキュメントを追加しました\r\n- static build を Docker 内で完結することで、Node.js がホスト環境になくても build できるようにしました\r\n- こちらで static build 関連の PR は一旦完了の認識です\r\n\r\n# 変更の背景\r\n- 以下の PR で static build が動作するようになったので、利用者向けの手順をまとめました\r\n   - https://github.com/digitaldemocracy2030/kouchou-ai/pull/195\r\n   - https://github.com/digitaldemocracy2030/kouchou-ai/pull/197\r\n\r\n# 関連Issue\r\n- fix: https://github.com/digitaldemocracy2030/kouchou-ai/issues/53\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 19,
    "deletions": 7,
    "changed_files": 3,
    "type": "pr"
  },
  {
    "id": 2957584104,
    "number": 197,
    "title": "static build 時に画像が 404 になる不具合の解消",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/197",
    "user": "shgtkshruch",
    "created_at": "2025-03-29T00:47:26Z",
    "merged_at": "2025-03-29T09:55:37Z",
    "body": "# 変更の概要\r\n- static build した際に server (API) から取得する画像が 404 になる課題を解決しました\r\n\r\n## Before\r\n![image](https://github.com/user-attachments/assets/796dcabc-f090-4da3-9cb9-8f69b1d74d34)\r\n\r\n\r\n## After\r\n![image](https://github.com/user-attachments/assets/4196b10e-7c35-4a88-89ab-58f6096c20ed)\r\n\r\n\r\n# 変更の背景\r\n- server でホストしている public/meta 以下の画像を client の public ディレクトリにコピーする script を追加\r\n  - この辺りの画像が 404 になっていたので、これらのファイルをコピーする処理を追加しました\r\n  https://github.com/digitaldemocracy2030/kouchou-ai/blob/7429106a54de66f6c541807e8bc6d4842f08a55c/README.md?plain=1#L37-L46\r\n  - 画像を表示するコンポーネントが Server Component であれば Component 内でファイルをコピーする処理が書けるかもと思ったのですが、今回は Client Component 内で画像を表示していたので scirpt で解決する方法を取りました\r\n  - static build のコマンド実行前に、上記コマンドを実行\r\n- server から取得した画像のパスを切り替える関数を utils を追加 \r\n\r\n# 関連Issue\r\n- fix: https://github.com/digitaldemocracy2030/kouchou-ai/issues/196\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 66,
    "deletions": 7,
    "changed_files": 7,
    "type": "pr"
  },
  {
    "id": 2955463577,
    "number": 195,
    "title": "client を static build できるようにする",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/195",
    "user": "shgtkshruch",
    "created_at": "2025-03-28T09:06:20Z",
    "merged_at": "2025-03-28T15:42:08Z",
    "body": "# 変更の概要\r\n- client アプリケーションを static build できるようにしました\r\n  - `out/` に生成されるビルド成果物を Web サーバーでホストすることで、トップページやレポートページを表示することが可能\r\n  - static build 用のコマンドを追加しました（Makefile, client/package.json）\r\n  - static build したアプリケーションのローカルでの動作確認用に [http-server](https://www.npmjs.com/package/http-server) を devDependencies に追加しました\r\n\r\n# やっていないこと\r\n- static build 後に server (API) から配信しているロゴなどの画像が 404 になる課題の解決\r\n  - static build した場合は、client のみで動かす必要があるので、何らかの方法で server でホストしている画像を client のビルド成果物に含める必要がある認識\r\n  - 差分が大きくなりそうなので、別の PR に分けて対応予定です\r\n\r\n![image](https://github.com/user-attachments/assets/45ed3608-ea94-4cf9-aeca-bbc08cd44f2b)\r\n\r\n- static build の手順のドキュメンテーション\r\n  - 実装が揃って動くことが確認でき次第、README などに手順を追加する PR を作成予定です\r\n\r\n# 変更の背景\r\n- report のデータ取得を `<ClientContainer>` 内の fetch から props で渡す形に変更しました https://github.com/digitaldemocracy2030/kouchou-ai/commit/f535425187de6b0c94efc0cae9449508da821d94\r\n   https://github.com/digitaldemocracy2030/kouchou-ai/blob/d48b281afb70b832daa845ee1cd9e651b62c2041/client/components/report/ClientContainer.tsx#L52-L81\r\n  - こちらがあると static build した後もクライアントからサーバーに問い合わせが発生するため\r\n  - client で fetch する方法（現状の実装）\r\n    - pros:\r\n      - 重いデータの report に依存する処理をクライアントで実施することで DOMContentLoaded が早い\r\n      - データ取得中もローディングが表示されるので、ユーザーに早く UI を返せる\r\n    - cons:\r\n      - クライアントで report のデータを fetch が終わるまでグラフが表示されない（ローディング表示になる）\r\n      - サーバー・クライアントそれぞれで report のデータ fetch が実行される\r\n        - revalidate が設定されているのでサーバーでは毎回実行されるわけでないですが、時間が来ると再度実行される認識です\r\n  - props で渡す方法（この PR の実装）\r\n    - pros:\r\n      - データの取得がサーバーで完結するので、static build したらクライアントだけで動く\r\n      - サーバーで report に依存したレンダリングが終わるので、グラフも含めてページ全体が完成する時間を短縮できる\r\n    - cons:\r\n      - HTML が大きくなるので、DOMContentLoaded が遅い\r\n\r\n## レンダリング速度の比較\r\n\r\nデータの取得方法を変更したことで、どのくらい速度やレンダリングに影響があるか計測しました。\r\nclient fetch / props それぞれの実装について、npm run build && npm run start を実行して、ブラウザで表示確認しました。\r\n\r\n**計測条件**\r\n- Google Chrome（バージョン: 134.0.6998.118, Official Build, arm64）\r\n- シークレットモード\r\n- Network Cache を無効化\r\n- Network Speed を Fast 4G に設定\r\n\r\n| | DOMContentLoaded | Loaded | Finish |\r\n|--------|--------|--------|--------|\r\n| client fetch | 379ms | 985ms | 6.24s |\r\n| props | 1.37s | 1.37s | 2.76s | \r\n\r\nclient で fetch する方法は、DOMContentLoaded が早いですが、グラフが表示されるまでに 6.24s かかっています。\r\nprops で渡す方法は、HTML サイズが大きくなるので DOMContentLoaded が遅いですが、グラフが表示されるのは 2.76s です。\r\n\r\n### client fetch\r\n\r\nhttps://github.com/user-attachments/assets/a7068da0-9abd-4886-b68d-adc2d3fafa9a\r\n\r\n### props\r\n\r\nhttps://github.com/user-attachments/assets/a10dfd7b-a6af-4478-8e35-8a6bb2069a94\r\n\r\n## 結論\r\nclient fetch・props どちらも pros / cons あるのですが、以下の点を考慮してこの PR では  props で渡す方法で実装しました。\r\n\r\n- データの取得がサーバーで完結するので、static build しても動作する\r\n- ユーザーにグラフを表示するまでの時間が短くなることでページ全体の情報を表示する時間が短縮されているので、トータルで見ると UX が良さそう\r\n\r\n（この実装方針は個人的な意見をベースにしていて、優先順位の考え方が違ったり認識違いがあるかもしれないので、その場合はコメントいただけると嬉しいです :pray: ）\r\n\r\n\r\n# 関連Issue\r\n- https://github.com/digitaldemocracy2030/kouchou-ai/issues/53\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 271,
    "deletions": 69,
    "changed_files": 8,
    "type": "pr"
  },
  {
    "id": 2955424115,
    "number": 194,
    "title": "パブコメモード（CSV形式出力・CSVにコメント原文を追加）",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/194",
    "user": "ei-blue",
    "created_at": "2025-03-28T08:47:45Z",
    "merged_at": "2025-03-30T15:55:42Z",
    "body": "# 変更の概要\r\n- レポート作成画面に「パブコメモード」ボタンを追加。これを選択すると、元コメントつきのCSVファイルが作成され、レポート完成後の詳細画面からダウンロードができます。\r\n- 最終的な一つのコメントから複数の議論が抽出されている場合、元コメントが複数の行に表示されます。\r\n- 似たようなコメントが複数あって一つの議論が抽出されている場合は、元コメントが維持され、議論が複数の行に表示されます。\r\n（mergeはhierarchical_aggregation.py内で実行しているので、特にここのロジックをチェックしてもらえると嬉しいです。）\r\n- イシューと関係なく、フォーマットでWarningが出たのでnpx eslint . --fixを実行したら大量のファイルが修正されました。\r\n- スプレッドシート対応はまだ試していませんが、サーバーサイドのロジックが同じなら問題ないはず。\r\n\r\n<img width=\"1001\" alt=\"Screenshot 2025-03-28 at 01 27 09\" src=\"https://github.com/user-attachments/assets/a8897692-5535-447f-b0c7-134e955bad5c\" />\r\n\r\n<img width=\"1075\" alt=\"Screenshot 2025-03-28 at 01 25 49\" src=\"https://github.com/user-attachments/assets/2ad9d7be-1281-4bd4-8205-2ccb834cc694\" />\r\n<img width=\"1254\" alt=\"Screenshot 2025-03-28 at 01 40 20\" src=\"https://github.com/user-attachments/assets/57bfba14-516b-4197-8841-4d524580bca0\" />\r\n\r\n# 今後\r\n以下のような可能性があるかなと思って、イシューをCloseにはしていません。\r\n- パブコメモードの際はデフォルトのプロンプトをパブコメ用にしたい。ガワだけ作っていますが、今の段階でプロンプトを二種類作ると同期がめんどくさそうだなと思ってアクティブにはしていません。\r\n- パブコメモードじゃない場合でも原文を見れるといいかもしれない\r\n\r\n# 変更の背景\r\n- 行政のユースケースの一つとして考えられるパブリックコメント対応においては、既存の公開形式に近いCSVファイルのニーズがある\r\n- 元意見を提示することはアカウンタビリティの面からも重要\r\n\r\n# 関連Issue\r\n#105 #56 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 399,
    "deletions": 135,
    "changed_files": 23,
    "type": "pr"
  },
  {
    "id": 2955220298,
    "number": 193,
    "title": "文言の変更（「議論」-> 「意見」、〇〇議論 -> 〇〇件）",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/193",
    "user": "shingo-ohki",
    "created_at": "2025-03-28T07:07:58Z",
    "merged_at": "2025-03-28T07:19:59Z",
    "body": "# 変更の概要\r\n- クラスタタイトル下の「33議論」等の表現は「33件」という表現に変える\r\n- Analysis内で使われている「議論」という単語は 「意見」に置き換える\r\n\r\n## スクリーンショット\r\n![Screenshot from 2025-03-28 15-57-22](https://github.com/user-attachments/assets/c6ec7fa2-d42e-41f6-8ece-0726b431da36)\r\n\r\n# 関連Issue\r\n#118 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 13,
    "deletions": 13,
    "changed_files": 3,
    "type": "pr"
  },
  {
    "id": 2955170336,
    "number": 192,
    "title": "環境変数を編集した場合の起動手順を追記",
    "state": "merged",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/192",
    "user": "nasuka",
    "created_at": "2025-03-28T06:34:46Z",
    "merged_at": "2025-03-28T07:27:10Z",
    "body": "# 変更の概要\r\n* 環境変数を編集した場合の起動手順を追記\r\n* compose.ymlのargsをハードコードした値ではなく、.envか読み込んだ環境変数で定義\r\n  * 一部の環境変数がcompose.ymlのargsと二重で定義されており、compose.yml側にハードコードされた値が使われるようになっていたので、.envの環境変数を使うように修正\r\n    * デフォルトでは.env内の環境変数がcomposeのファイル内で展開できる\r\n      * 参考: https://docs.docker.jp/compose/environment-variables.html\r\n\r\n# 変更の背景\r\n* 環境変数を変更した場合はdocker imageをbuildしなおさないと動作しないケースがある\r\n  * フロントでは、APIキーなどの一部の環境変数をimageのビルド時に埋め込んでいる\r\n  * このため、フロント側はdocker compose upを実行すると初回に設定した環境変数のイメージのままコンテナが立て続けられてしまう（ビルド時に埋め込んでいる環境変数は、イメージをビルドし直さない限り.envを編集しても変更が反映されない）\r\n    * これによりapiとフロントのAPIキーが一致しないケースが発生してしまう\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/191\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 8,
    "deletions": 6,
    "changed_files": 2,
    "type": "pr"
  },
  {
    "id": 2970065492,
    "number": 228,
    "title": "Azure Blob Storage連携機能の実装",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/228",
    "user": "nasuka",
    "created_at": "2025-04-03T16:01:04Z",
    "body": "# 変更の概要\r\nAzure Blob Storageと連携する機能を実装し、データの永続化を実現\r\nコードとしては以下の機能を実装している\r\n\r\n* レポート作成完了時に当該レポートに関する生成物と、report_status.jsonをストレージにアップロードする\r\n  * 生成物は中間ファイル・個別のレポートのstatusのjson・最終的なresultファイルなど全てアップする\r\n* アプリ起動時にストレージから全レポートに関するファイルとreport_status.jsonをダウンロードする\r\n  * レポートに関するファイルについては、jsonファイルのみダウンロードしている\r\n    * 中間生成物までDLするとサイズが重く時間がかかり、また結果の描画にはresult等のjsonがあれば十分なため\r\n\r\nまた、Azureインフラ構築について、以下のプロセスを追加している\r\n\r\n1. ストレージの作成（azure-create-storage）\r\n2. api containerへのマネージドIDの付与(azure-assign-managed-identity)\r\n2. api コンテナからストレージへのアクセス権限の付与(azure-assign-storage-access)\r\n\r\n# 変更の背景\r\nAzure環境において、Container Apssでアプリケーションを動かした場合にデータの永続化ができず、レポートが消失してしまう問題があった\r\n\r\n# 関連Issue\r\nClose https://github.com/digitaldemocracy2030/kouchou-ai/issues/46\r\n\r\n# 動作確認結果\r\n\r\n- [x] 作成されたレポート関連ファイルおよびreport_statusが外部ストレージにアップされる\r\n- [x] apiのコンテナを停止 -> 再起動し、ストレージに保存されたファイルが再起動後のapiコンテナに同期されている\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [ ] CLAの内容を読み、同意しました",
    "additions": 1223,
    "deletions": 28,
    "changed_files": 18,
    "type": "pr"
  },
  {
    "id": 2968531540,
    "number": 226,
    "title": "add column selection",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/226",
    "user": "ei-blue",
    "created_at": "2025-04-03T06:57:26Z",
    "body": "# 変更の概要\r\n- csv/スプレッドシートのアップロード/取得時にカラム名の一覧を取得してドロップダウンを作成\r\n- commentという名前を探し、ある場合はデフォルトでそれを選択（なければ「選択してください」が表示）\r\n- /admin/reportsエンドポイントに渡すコメントデータはそこで指定されたカラムのデータが使われる\r\n<img width=\"884\" alt=\"Screenshot 2025-04-02 at 23 08 05\" src=\"https://github.com/user-attachments/assets/7b9a7381-593f-444b-9bf3-e55864713c86\" />\r\n<img width=\"906\" alt=\"Screenshot 2025-04-02 at 23 08 15\" src=\"https://github.com/user-attachments/assets/c3ff9fe8-9a08-4730-a525-ce468937d442\" />\r\n\r\n# 変更の背景\r\n- すでにあるデータを分析する際、カラム名を手動でcommentに変更する手間を省ける\r\n\r\n\r\n# 関連Issue\r\n- Close #116 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 132,
    "deletions": 31,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2962689394,
    "number": 215,
    "title": "(Draft)Azureの更新のためのターゲットを追加",
    "state": "created",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/215",
    "user": "nishio",
    "created_at": "2025-04-01T08:25:51Z",
    "body": "# 変更の背景\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/214\r\n\r\n# 変更の概要\r\n- Azureの更新のためのターゲットを追加\r\n- (未テストです、次に更新する時にテストします)\r\n\r\n\r\n# 関連Issue\r\nhttps://github.com/digitaldemocracy2030/kouchou-ai/issues/214\r\n\r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [ ] CLAの内容を読み、同意しました",
    "additions": 42,
    "deletions": 0,
    "changed_files": 1,
    "type": "pr"
  },
  {
    "id": 2945319519,
    "number": 148,
    "title": "CSVファイル送信時にコメント数とクラスタ数設定を比較して警告を出す",
    "state": "updated",
    "html_url": "https://github.com/digitaldemocracy2030/kouchou-ai/pull/148",
    "user": "ei-blue",
    "created_at": "2025-03-25T05:28:53Z",
    "updated_at": "2025-03-31T00:52:04Z",
    "body": "# 変更の概要\r\n\r\n- レポート作成ボタンクリック時にCSVファイルの行数とクラスタ数の設定を比較し、ファイルの行数が少ない場合に警告を出す。\r\n\r\n![image](https://github.com/user-attachments/assets/8d0ff772-d758-4575-826a-4aebe8ea3b01)\r\n\r\n# 変更の背景\r\n\r\n- デフォルトのクラスタ数設定は[5, 50]。\r\n- 登録されたCSVファイルの意見数が設定されたクラスタ数に満たない場合、クラスタリングの過程でエラーになる。\r\n- これを防ぐため、APIを呼び出す前にCSVファイル内のコメント数（ファイルの行数）を確認する。\r\n- コメント数＝意見数ではなく、一つのコメントから複数の意見が抽出される可能性もあるため、エラーではなく警告にとどめる。\r\n\r\n# 関連Issue\r\nCloses #147 \r\n\r\n# CLAへの同意\r\n- 本リポジトリへのコントリビュートには、[コントリビューターライセンス契約（CLA）](https://github.com/digitaldemocracy2030/kouchou-ai/blob/main/CLA.md)に同意することが必須です。\r\n内容をお読みいただき、下記のチェックボックスにチェックをつける（\"- [ ]\" を \"- [x]\" に書き換える）ことで同意したものとみなします。\r\n\r\n- [x] CLAの内容を読み、同意しました",
    "additions": 11,
    "deletions": 0,
    "changed_files": 1,
    "type": "pr"
  }
]